import XCTest

@testable import CEJ25

final class PgnTests: XCTestCase {
  func testLoadPgn() throws {
    let samplePgn = """
      [Event "F/S Return Match"]
      [Site "Belgrade, Serbia JUG"]
      [Date "1992.11.04"]
      [Round "29"]
      [White "Fischer, Robert J."]
      [Black "Spassky, Boris V."]
      [Result "1/2-1/2"]

      1. e4 e5 2. Nf3 Nc6 3. Bb5 a6 4. Ba4 Nf6 5. O-O Be7 6. Re1 b5 7. Bb3 d6 8. c3 O-O 9. h3 Nb8 10. d4 Nbd7 11. c4 c6 12. cxb5 axb5 13. Nc3 Bb7 14. Bg5 b4 15. Nb1 h6 16. Bh4 c5 17. dxe5 Nxe4 18. Bxe7 Qxe7 19. exd6 Qf6 20. Nbd2 Nxd6 21. Nc4 Nxc4 22. Bxc4 Nb6 23. Ne5 Rae8 24. Bxf7+ Rxf7 25. Nxf7 Rxe1+ 26. Qxe1 Kxf7 27. Qe3 Qg5 28. Qxg5 hxg5 29. b3 Ke6 30. a3 Kd6 31. axb4 cxb4 32. Ra5 Nd5 33. f3 Bc8 34. Kf2 Bf5 35. Ra7 g6 36. Ra6+ Kc5 37. Ke1 Nf4 38. g3 Nxh3 39. Kd2 Kb5 40. Rd6 Kc5 41. Ra6 Nf2 42. g4 Bd3 43. Re6 1/2-1/2
      """

    let pgn = Pgn.parse(samplePgn)
    let chess = try pgn.validate()

    let exported = try chess.export(pgn: true)
    XCTAssertEqual(samplePgn, exported, "exported pgn is imported pgn")

    let samplePgn2 = """
      [Event "Paris"]
      [Site "Paris FRA"]
      [Date "1858.??.??"]
      [Round "?"]
      [White "Paul Morphy"]
      [Black "Duke Karl / Count Isouard"]
      [Result "1-0"]
      [EventDate "?"]
      [ECO "C41"]
      [WhiteElo "?"]
      [BlackElo "?"]
      [PlyCount "33"]

      1. e4 e5 2. Nf3 d6 3. d4 Bg4 {This is a weak move already. — Fischer} 4. dxe5 Bxf3 5. Qxf3 dxe5 6. Bc4 Nf6 7. Qb3 Qe7 8. Nc3 c6 9. Bg5 {Black is in what's like a zugzwang position here. He can't develop the [queen's] knight because the pawn is hanging, the bishop is blocked because of the queen. — Fischer} 9... b5 10. Nxb5 cxb5 11. Bxb5+ Nbd7 12. O-O-O Rd8 13. Rxd7 Rxd7 14. Rd1 Qe6 15. Bxd7+ Nxd7 {And now for the memorable checkmating combination:} 16. Qb8+ $3 {[%c_effect b8;square;b8;type;Brilliant;persistent;true]} 16... Nxb8 17. Rd8# 1-0
      """

    let pgn2 = Pgn.parse(samplePgn2)
    let chess2 = try pgn2.validate()

    let exported2 = try chess2.export(pgn: true)
    XCTAssertEqual(samplePgn2, exported2, "exported pgn is imported pgn")
  }

  func testAnnotatedPgn() throws {
    let text = try String(contentsOfFile: "./Tests/PGN/2018-WCC.pgn", encoding: .utf8)
    let pgn = Pgn.parse(text)
    let chess = try pgn.validate()

    let exported = try chess.export(pgn: true)
    XCTAssertNotEqual(text, exported, "there is some data loss as the RAV is not kept")
  }

  func testAlekhine() throws {
    let text = try String(contentsOfFile: "./Tests/PGN/Alekhine.pgn", encoding: .utf8)
    var pgns = Pgn.parseMultiGame(text)
    var chess: Chess
    var pgn: Pgn
    XCTAssertEqual(pgns.count, 10, "Alekhine: game count matches")

    pgn = pgns.removeFirst()
    chess = try pgn.validate()
    XCTAssertEqual(chess.getTag("Event")?.value, "Hastings", "Alekhine(g1): event")
    XCTAssertEqual(chess.getTag("White")?.value, "Efim Bogoljubov", "Alekhine(g1): white")
    XCTAssertEqual(chess.getTag("Black")?.value, "Alexander Alekhine", "Alekhine(g1): black")
    XCTAssertEqual(chess.getMoveCount(), 54, "Alekhine(g1): move count")
    XCTAssertEqual(
      chess.getMoveHistory().map { $0.pcn }.joined(separator: ","),
      "d2d4,f7f5,c2c4,g8f6,g2g3,e7e6,f1g2,f8b4,c1d2,b4d2,b1d2,b8c6,g1f3,e8g8,e1g1,d7d6,d1b3,g8h8,b3c3,e6e5,e2e3,a7a5,b2b3,d8e8,a2a3,e8h5,h2h4,f6g4,f3g5,c8d7,f2f3,g4f6,f3f4,e5e4,f1d1,h7h6,g5h3,d6d5,d2f1,c6e7,a3a4,e7c6,d1d2,c6b4,g2h1,h5e8,d2g2,d5c4,b3c4,d7a4,h3f2,a4d7,f1d2,b7b5,f2d1,b4d3,a1a5,b5b4,a5a8,b4c3,a8e8,c3c2,e8f8,h8h7,d1f2,c2c1q,d2f1,d3e1,g2h2,c1c4,f8b8,d7b5,b8b5,c4b5,g3g4,e1f3,h1f3,e4f3,g4f5,b5e2,d4d5,h7g8,h4h5,g8h7,e3e4,f6e4,f2e4,e2e4,d5d6,c7d6,f5f6,g7f6,h2d2,e4e2,d2e2,f3e2,g1f2,e2f1q,f2f1,h7g7,f1e2,g7f7,e2e3,f7e6,e3e4,d6d5",
      "Alekhine(g1): PCN move history"
    )
    let fens0 = [
      "rnbqkbnr/pppppppp/8/8/3P4/8/PPP1PPPP/RNBQKBNR b KQkq - 0 1",
      "rnbqkbnr/ppppp1pp/8/5p2/3P4/8/PPP1PPPP/RNBQKBNR w KQkq - 0 2",
      "rnbqkbnr/ppppp1pp/8/5p2/2PP4/8/PP2PPPP/RNBQKBNR b KQkq - 0 2",
      "rnbqkb1r/ppppp1pp/5n2/5p2/2PP4/8/PP2PPPP/RNBQKBNR w KQkq - 1 3",
      "rnbqkb1r/ppppp1pp/5n2/5p2/2PP4/6P1/PP2PP1P/RNBQKBNR b KQkq - 0 3",
      "rnbqkb1r/pppp2pp/4pn2/5p2/2PP4/6P1/PP2PP1P/RNBQKBNR w KQkq - 0 4",
      "rnbqkb1r/pppp2pp/4pn2/5p2/2PP4/6P1/PP2PPBP/RNBQK1NR b KQkq - 1 4",
      "rnbqk2r/pppp2pp/4pn2/5p2/1bPP4/6P1/PP2PPBP/RNBQK1NR w KQkq - 2 5",
      "rnbqk2r/pppp2pp/4pn2/5p2/1bPP4/6P1/PP1BPPBP/RN1QK1NR b KQkq - 3 5",
      "rnbqk2r/pppp2pp/4pn2/5p2/2PP4/6P1/PP1bPPBP/RN1QK1NR w KQkq - 0 6",
      "rnbqk2r/pppp2pp/4pn2/5p2/2PP4/6P1/PP1NPPBP/R2QK1NR b KQkq - 0 6",
      "r1bqk2r/pppp2pp/2n1pn2/5p2/2PP4/6P1/PP1NPPBP/R2QK1NR w KQkq - 1 7",
      "r1bqk2r/pppp2pp/2n1pn2/5p2/2PP4/5NP1/PP1NPPBP/R2QK2R b KQkq - 2 7",
      "r1bq1rk1/pppp2pp/2n1pn2/5p2/2PP4/5NP1/PP1NPPBP/R2QK2R w KQ - 3 8",
      "r1bq1rk1/pppp2pp/2n1pn2/5p2/2PP4/5NP1/PP1NPPBP/R2Q1RK1 b - - 4 8",
      "r1bq1rk1/ppp3pp/2nppn2/5p2/2PP4/5NP1/PP1NPPBP/R2Q1RK1 w - - 0 9",
      "r1bq1rk1/ppp3pp/2nppn2/5p2/2PP4/1Q3NP1/PP1NPPBP/R4RK1 b - - 1 9",
      "r1bq1r1k/ppp3pp/2nppn2/5p2/2PP4/1Q3NP1/PP1NPPBP/R4RK1 w - - 2 10",
      "r1bq1r1k/ppp3pp/2nppn2/5p2/2PP4/2Q2NP1/PP1NPPBP/R4RK1 b - - 3 10",
      "r1bq1r1k/ppp3pp/2np1n2/4pp2/2PP4/2Q2NP1/PP1NPPBP/R4RK1 w - - 0 11",
      "r1bq1r1k/ppp3pp/2np1n2/4pp2/2PP4/2Q1PNP1/PP1N1PBP/R4RK1 b - - 0 11",
      "r1bq1r1k/1pp3pp/2np1n2/p3pp2/2PP4/2Q1PNP1/PP1N1PBP/R4RK1 w - - 0 12",
      "r1bq1r1k/1pp3pp/2np1n2/p3pp2/2PP4/1PQ1PNP1/P2N1PBP/R4RK1 b - - 0 12",
      "r1b1qr1k/1pp3pp/2np1n2/p3pp2/2PP4/1PQ1PNP1/P2N1PBP/R4RK1 w - - 1 13",
      "r1b1qr1k/1pp3pp/2np1n2/p3pp2/2PP4/PPQ1PNP1/3N1PBP/R4RK1 b - - 0 13",
      "r1b2r1k/1pp3pp/2np1n2/p3pp1q/2PP4/PPQ1PNP1/3N1PBP/R4RK1 w - - 1 14",
      "r1b2r1k/1pp3pp/2np1n2/p3pp1q/2PP3P/PPQ1PNP1/3N1PB1/R4RK1 b - - 0 14",
      "r1b2r1k/1pp3pp/2np4/p3pp1q/2PP2nP/PPQ1PNP1/3N1PB1/R4RK1 w - - 1 15",
      "r1b2r1k/1pp3pp/2np4/p3ppNq/2PP2nP/PPQ1P1P1/3N1PB1/R4RK1 b - - 2 15",
      "r4r1k/1ppb2pp/2np4/p3ppNq/2PP2nP/PPQ1P1P1/3N1PB1/R4RK1 w - - 3 16",
      "r4r1k/1ppb2pp/2np4/p3ppNq/2PP2nP/PPQ1PPP1/3N2B1/R4RK1 b - - 0 16",
      "r4r1k/1ppb2pp/2np1n2/p3ppNq/2PP3P/PPQ1PPP1/3N2B1/R4RK1 w - - 1 17",
      "r4r1k/1ppb2pp/2np1n2/p3ppNq/2PP1P1P/PPQ1P1P1/3N2B1/R4RK1 b - - 0 17",
      "r4r1k/1ppb2pp/2np1n2/p4pNq/2PPpP1P/PPQ1P1P1/3N2B1/R4RK1 w - - 0 18",
      "r4r1k/1ppb2pp/2np1n2/p4pNq/2PPpP1P/PPQ1P1P1/3N2B1/R2R2K1 b - - 1 18",
      "r4r1k/1ppb2p1/2np1n1p/p4pNq/2PPpP1P/PPQ1P1P1/3N2B1/R2R2K1 w - - 0 19",
      "r4r1k/1ppb2p1/2np1n1p/p4p1q/2PPpP1P/PPQ1P1PN/3N2B1/R2R2K1 b - - 1 19",
      "r4r1k/1ppb2p1/2n2n1p/p2p1p1q/2PPpP1P/PPQ1P1PN/3N2B1/R2R2K1 w - - 0 20",
      "r4r1k/1ppb2p1/2n2n1p/p2p1p1q/2PPpP1P/PPQ1P1PN/6B1/R2R1NK1 b - - 1 20",
      "r4r1k/1ppbn1p1/5n1p/p2p1p1q/2PPpP1P/PPQ1P1PN/6B1/R2R1NK1 w - - 2 21",
      "r4r1k/1ppbn1p1/5n1p/p2p1p1q/P1PPpP1P/1PQ1P1PN/6B1/R2R1NK1 b - - 0 21",
      "r4r1k/1ppb2p1/2n2n1p/p2p1p1q/P1PPpP1P/1PQ1P1PN/6B1/R2R1NK1 w - - 1 22",
      "r4r1k/1ppb2p1/2n2n1p/p2p1p1q/P1PPpP1P/1PQ1P1PN/3R2B1/R4NK1 b - - 2 22",
      "r4r1k/1ppb2p1/5n1p/p2p1p1q/PnPPpP1P/1PQ1P1PN/3R2B1/R4NK1 w - - 3 23",
      "r4r1k/1ppb2p1/5n1p/p2p1p1q/PnPPpP1P/1PQ1P1PN/3R4/R4NKB b - - 4 23",
      "r3qr1k/1ppb2p1/5n1p/p2p1p2/PnPPpP1P/1PQ1P1PN/3R4/R4NKB w - - 5 24",
      "r3qr1k/1ppb2p1/5n1p/p2p1p2/PnPPpP1P/1PQ1P1PN/6R1/R4NKB b - - 6 24",
      "r3qr1k/1ppb2p1/5n1p/p4p2/PnpPpP1P/1PQ1P1PN/6R1/R4NKB w - - 0 25",
      "r3qr1k/1ppb2p1/5n1p/p4p2/PnPPpP1P/2Q1P1PN/6R1/R4NKB b - - 0 25",
      "r3qr1k/1pp3p1/5n1p/p4p2/bnPPpP1P/2Q1P1PN/6R1/R4NKB w - - 0 26",
      "r3qr1k/1pp3p1/5n1p/p4p2/bnPPpP1P/2Q1P1P1/5NR1/R4NKB b - - 1 26",
      "r3qr1k/1ppb2p1/5n1p/p4p2/1nPPpP1P/2Q1P1P1/5NR1/R4NKB w - - 2 27",
      "r3qr1k/1ppb2p1/5n1p/p4p2/1nPPpP1P/2Q1P1P1/3N1NR1/R5KB b - - 3 27",
      "r3qr1k/2pb2p1/5n1p/pp3p2/1nPPpP1P/2Q1P1P1/3N1NR1/R5KB w - - 0 28",
      "r3qr1k/2pb2p1/5n1p/pp3p2/1nPPpP1P/2Q1P1P1/3N2R1/R2N2KB b - - 1 28",
      "r3qr1k/2pb2p1/5n1p/pp3p2/2PPpP1P/2QnP1P1/3N2R1/R2N2KB w - - 2 29",
      "r3qr1k/2pb2p1/5n1p/Rp3p2/2PPpP1P/2QnP1P1/3N2R1/3N2KB b - - 0 29",
      "r3qr1k/2pb2p1/5n1p/R4p2/1pPPpP1P/2QnP1P1/3N2R1/3N2KB w - - 0 30",
      "R3qr1k/2pb2p1/5n1p/5p2/1pPPpP1P/2QnP1P1/3N2R1/3N2KB b - - 0 30",
      "R3qr1k/2pb2p1/5n1p/5p2/2PPpP1P/2pnP1P1/3N2R1/3N2KB w - - 0 31",
      "4Rr1k/2pb2p1/5n1p/5p2/2PPpP1P/2pnP1P1/3N2R1/3N2KB b - - 0 31",
      "4Rr1k/2pb2p1/5n1p/5p2/2PPpP1P/3nP1P1/2pN2R1/3N2KB w - - 0 32",
      "5R1k/2pb2p1/5n1p/5p2/2PPpP1P/3nP1P1/2pN2R1/3N2KB b - - 0 32",
      "5R2/2pb2pk/5n1p/5p2/2PPpP1P/3nP1P1/2pN2R1/3N2KB w - - 1 33",
      "5R2/2pb2pk/5n1p/5p2/2PPpP1P/3nP1P1/2pN1NR1/6KB b - - 2 33",
      "5R2/2pb2pk/5n1p/5p2/2PPpP1P/3nP1P1/3N1NR1/2q3KB w - - 0 34",
      "5R2/2pb2pk/5n1p/5p2/2PPpP1P/3nP1P1/5NR1/2q2NKB b - - 1 34",
      "5R2/2pb2pk/5n1p/5p2/2PPpP1P/4P1P1/5NR1/2q1nNKB w - - 2 35",
      "5R2/2pb2pk/5n1p/5p2/2PPpP1P/4P1P1/5N1R/2q1nNKB b - - 3 35",
      "5R2/2pb2pk/5n1p/5p2/2qPpP1P/4P1P1/5N1R/4nNKB w - - 0 36",
      "1R6/2pb2pk/5n1p/5p2/2qPpP1P/4P1P1/5N1R/4nNKB b - - 1 36",
      "1R6/2p3pk/5n1p/1b3p2/2qPpP1P/4P1P1/5N1R/4nNKB w - - 2 37",
      "8/2p3pk/5n1p/1R3p2/2qPpP1P/4P1P1/5N1R/4nNKB b - - 0 37",
      "8/2p3pk/5n1p/1q3p2/3PpP1P/4P1P1/5N1R/4nNKB w - - 0 38",
      "8/2p3pk/5n1p/1q3p2/3PpPPP/4P3/5N1R/4nNKB b - - 0 38",
      "8/2p3pk/5n1p/1q3p2/3PpPPP/4Pn2/5N1R/5NKB w - - 1 39",
      "8/2p3pk/5n1p/1q3p2/3PpPPP/4PB2/5N1R/5NK1 b - - 0 39",
      "8/2p3pk/5n1p/1q3p2/3P1PPP/4Pp2/5N1R/5NK1 w - - 0 40",
      "8/2p3pk/5n1p/1q3P2/3P1P1P/4Pp2/5N1R/5NK1 b - - 0 40",
      "8/2p3pk/5n1p/5P2/3P1P1P/4Pp2/4qN1R/5NK1 w - - 1 41",
      "8/2p3pk/5n1p/3P1P2/5P1P/4Pp2/4qN1R/5NK1 b - - 0 41",
      "6k1/2p3p1/5n1p/3P1P2/5P1P/4Pp2/4qN1R/5NK1 w - - 1 42",
      "6k1/2p3p1/5n1p/3P1P1P/5P2/4Pp2/4qN1R/5NK1 b - - 0 42",
      "8/2p3pk/5n1p/3P1P1P/5P2/4Pp2/4qN1R/5NK1 w - - 1 43",
      "8/2p3pk/5n1p/3P1P1P/4PP2/5p2/4qN1R/5NK1 b - - 0 43",
      "8/2p3pk/7p/3P1P1P/4nP2/5p2/4qN1R/5NK1 w - - 0 44",
      "8/2p3pk/7p/3P1P1P/4NP2/5p2/4q2R/5NK1 b - - 0 44",
      "8/2p3pk/7p/3P1P1P/4qP2/5p2/7R/5NK1 w - - 0 45",
      "8/2p3pk/3P3p/5P1P/4qP2/5p2/7R/5NK1 b - - 0 45",
      "8/6pk/3p3p/5P1P/4qP2/5p2/7R/5NK1 w - - 0 46",
      "8/6pk/3p1P1p/7P/4qP2/5p2/7R/5NK1 b - - 0 46",
      "8/7k/3p1p1p/7P/4qP2/5p2/7R/5NK1 w - - 0 47",
      "8/7k/3p1p1p/7P/4qP2/5p2/3R4/5NK1 b - - 1 47",
      "8/7k/3p1p1p/7P/5P2/5p2/3Rq3/5NK1 w - - 2 48",
      "8/7k/3p1p1p/7P/5P2/5p2/4R3/5NK1 b - - 0 48",
      "8/7k/3p1p1p/7P/5P2/8/4p3/5NK1 w - - 0 49",
      "8/7k/3p1p1p/7P/5P2/8/4pK2/5N2 b - - 1 49",
      "8/7k/3p1p1p/7P/5P2/8/5K2/5q2 w - - 0 50",
      "8/7k/3p1p1p/7P/5P2/8/8/5K2 b - - 0 50",
      "8/6k1/3p1p1p/7P/5P2/8/8/5K2 w - - 1 51",
      "8/6k1/3p1p1p/7P/5P2/8/4K3/8 b - - 2 51",
      "8/5k2/3p1p1p/7P/5P2/8/4K3/8 w - - 3 52",
      "8/5k2/3p1p1p/7P/5P2/4K3/8/8 b - - 4 52",
      "8/8/3pkp1p/7P/5P2/4K3/8/8 w - - 5 53",
      "8/8/3pkp1p/7P/4KP2/8/8/8 b - - 6 53",
      "8/8/4kp1p/3p3P/4KP2/8/8/8 w - - 0 54",
    ]
    for (index, history) in chess.getMoveHistory().enumerated() {
      XCTAssertEqual(history.fen, fens0[index], "Alekhine(g1): FEN move (index)")
    }

    pgn = pgns.removeFirst()
    chess = try pgn.validate()
    XCTAssertEqual(chess.getTag("Event")?.value, "Moscow", "Alekhine(g2): event")
    XCTAssertEqual(chess.getTag("White")?.value, "Alexander Alekhine", "Alekhine(g2): white")
    XCTAssertEqual(chess.getTag("Black")?.value, "NN", "Alekhine(g2): black")
    XCTAssertEqual(chess.getMoveCount(), 29, "Alekhine(g2): move count")
    XCTAssertEqual(
      chess.getMoveHistory().map { $0.pcn }.joined(separator: ","),
      "e2e4,e7e6,d2d4,d7d5,b1c3,g8f6,c1g5,f8b4,e4e5,h7h6,e5f6,h6g5,f6g7,h8g8,h2h4,g5h4,d1g4,b4e7,g2g3,c7c5,g3h4,c5d4,h4h5,d4c3,h5h6,c3b2,a1b1,d8a5,e1e2,a5a2,h6h7,a2b1,h7g8q,e8d7,g8f7,b1c2,e2f3,b8c6,g4e6,d7c7,f7f4,c7b6,e6e3,e7c5,g7g8q,b2b1q,h1h6,b1f1,f4b4,f1b5,g8d8,b6a6,e3a3,c2a4,a3a4,b5a4,b4a4",
      "Alekhine(g2): PCN move history"
    )
    let fens1 = [
      "rnbqkbnr/pppppppp/8/8/4P3/8/PPPP1PPP/RNBQKBNR b KQkq - 0 1",
      "rnbqkbnr/pppp1ppp/4p3/8/4P3/8/PPPP1PPP/RNBQKBNR w KQkq - 0 2",
      "rnbqkbnr/pppp1ppp/4p3/8/3PP3/8/PPP2PPP/RNBQKBNR b KQkq - 0 2",
      "rnbqkbnr/ppp2ppp/4p3/3p4/3PP3/8/PPP2PPP/RNBQKBNR w KQkq - 0 3",
      "rnbqkbnr/ppp2ppp/4p3/3p4/3PP3/2N5/PPP2PPP/R1BQKBNR b KQkq - 1 3",
      "rnbqkb1r/ppp2ppp/4pn2/3p4/3PP3/2N5/PPP2PPP/R1BQKBNR w KQkq - 2 4",
      "rnbqkb1r/ppp2ppp/4pn2/3p2B1/3PP3/2N5/PPP2PPP/R2QKBNR b KQkq - 3 4",
      "rnbqk2r/ppp2ppp/4pn2/3p2B1/1b1PP3/2N5/PPP2PPP/R2QKBNR w KQkq - 4 5",
      "rnbqk2r/ppp2ppp/4pn2/3pP1B1/1b1P4/2N5/PPP2PPP/R2QKBNR b KQkq - 0 5",
      "rnbqk2r/ppp2pp1/4pn1p/3pP1B1/1b1P4/2N5/PPP2PPP/R2QKBNR w KQkq - 0 6",
      "rnbqk2r/ppp2pp1/4pP1p/3p2B1/1b1P4/2N5/PPP2PPP/R2QKBNR b KQkq - 0 6",
      "rnbqk2r/ppp2pp1/4pP2/3p2p1/1b1P4/2N5/PPP2PPP/R2QKBNR w KQkq - 0 7",
      "rnbqk2r/ppp2pP1/4p3/3p2p1/1b1P4/2N5/PPP2PPP/R2QKBNR b KQkq - 0 7",
      "rnbqk1r1/ppp2pP1/4p3/3p2p1/1b1P4/2N5/PPP2PPP/R2QKBNR w KQq - 1 8",
      "rnbqk1r1/ppp2pP1/4p3/3p2p1/1b1P3P/2N5/PPP2PP1/R2QKBNR b KQq - 0 8",
      "rnbqk1r1/ppp2pP1/4p3/3p4/1b1P3p/2N5/PPP2PP1/R2QKBNR w KQq - 0 9",
      "rnbqk1r1/ppp2pP1/4p3/3p4/1b1P2Qp/2N5/PPP2PP1/R3KBNR b KQq - 1 9",
      "rnbqk1r1/ppp1bpP1/4p3/3p4/3P2Qp/2N5/PPP2PP1/R3KBNR w KQq - 2 10",
      "rnbqk1r1/ppp1bpP1/4p3/3p4/3P2Qp/2N3P1/PPP2P2/R3KBNR b KQq - 0 10",
      "rnbqk1r1/pp2bpP1/4p3/2pp4/3P2Qp/2N3P1/PPP2P2/R3KBNR w KQq - 0 11",
      "rnbqk1r1/pp2bpP1/4p3/2pp4/3P2QP/2N5/PPP2P2/R3KBNR b KQq - 0 11",
      "rnbqk1r1/pp2bpP1/4p3/3p4/3p2QP/2N5/PPP2P2/R3KBNR w KQq - 0 12",
      "rnbqk1r1/pp2bpP1/4p3/3p3P/3p2Q1/2N5/PPP2P2/R3KBNR b KQq - 0 12",
      "rnbqk1r1/pp2bpP1/4p3/3p3P/6Q1/2p5/PPP2P2/R3KBNR w KQq - 0 13",
      "rnbqk1r1/pp2bpP1/4p2P/3p4/6Q1/2p5/PPP2P2/R3KBNR b KQq - 0 13",
      "rnbqk1r1/pp2bpP1/4p2P/3p4/6Q1/8/PpP2P2/R3KBNR w KQq - 0 14",
      "rnbqk1r1/pp2bpP1/4p2P/3p4/6Q1/8/PpP2P2/1R2KBNR b Kq - 1 14",
      "rnb1k1r1/pp2bpP1/4p2P/q2p4/6Q1/8/PpP2P2/1R2KBNR w Kq - 2 15",
      "rnb1k1r1/pp2bpP1/4p2P/q2p4/6Q1/8/PpP1KP2/1R3BNR b q - 3 15",
      "rnb1k1r1/pp2bpP1/4p2P/3p4/6Q1/8/qpP1KP2/1R3BNR w q - 0 16",
      "rnb1k1r1/pp2bpPP/4p3/3p4/6Q1/8/qpP1KP2/1R3BNR b q - 0 16",
      "rnb1k1r1/pp2bpPP/4p3/3p4/6Q1/8/1pP1KP2/1q3BNR w q - 0 17",
      "rnb1k1Q1/pp2bpP1/4p3/3p4/6Q1/8/1pP1KP2/1q3BNR b q - 0 17",
      "rnb3Q1/pp1kbpP1/4p3/3p4/6Q1/8/1pP1KP2/1q3BNR w - - 1 18",
      "rnb5/pp1kbQP1/4p3/3p4/6Q1/8/1pP1KP2/1q3BNR b - - 0 18",
      "rnb5/pp1kbQP1/4p3/3p4/6Q1/8/1pq1KP2/5BNR w - - 0 19",
      "rnb5/pp1kbQP1/4p3/3p4/6Q1/5K2/1pq2P2/5BNR b - - 1 19",
      "r1b5/pp1kbQP1/2n1p3/3p4/6Q1/5K2/1pq2P2/5BNR w - - 2 20",
      "r1b5/pp1kbQP1/2n1Q3/3p4/8/5K2/1pq2P2/5BNR b - - 0 20",
      "r1b5/ppk1bQP1/2n1Q3/3p4/8/5K2/1pq2P2/5BNR w - - 1 21",
      "r1b5/ppk1b1P1/2n1Q3/3p4/5Q2/5K2/1pq2P2/5BNR b - - 2 21",
      "r1b5/pp2b1P1/1kn1Q3/3p4/5Q2/5K2/1pq2P2/5BNR w - - 3 22",
      "r1b5/pp2b1P1/1kn5/3p4/5Q2/4QK2/1pq2P2/5BNR b - - 4 22",
      "r1b5/pp4P1/1kn5/2bp4/5Q2/4QK2/1pq2P2/5BNR w - - 5 23",
      "r1b3Q1/pp6/1kn5/2bp4/5Q2/4QK2/1pq2P2/5BNR b - - 0 23",
      "r1b3Q1/pp6/1kn5/2bp4/5Q2/4QK2/2q2P2/1q3BNR w - - 0 24",
      "r1b3Q1/pp6/1kn4R/2bp4/5Q2/4QK2/2q2P2/1q3BN1 b - - 1 24",
      "r1b3Q1/pp6/1kn4R/2bp4/5Q2/4QK2/2q2P2/5qN1 w - - 0 25",
      "r1b3Q1/pp6/1kn4R/2bp4/1Q6/4QK2/2q2P2/5qN1 b - - 1 25",
      "r1b3Q1/pp6/1kn4R/1qbp4/1Q6/4QK2/2q2P2/6N1 w - - 2 26",
      "r1bQ4/pp6/1kn4R/1qbp4/1Q6/4QK2/2q2P2/6N1 b - - 3 26",
      "r1bQ4/pp6/k1n4R/1qbp4/1Q6/4QK2/2q2P2/6N1 w - - 4 27",
      "r1bQ4/pp6/k1n4R/1qbp4/1Q6/Q4K2/2q2P2/6N1 b - - 5 27",
      "r1bQ4/pp6/k1n4R/1qbp4/qQ6/Q4K2/5P2/6N1 w - - 6 28",
      "r1bQ4/pp6/k1n4R/1qbp4/QQ6/5K2/5P2/6N1 b - - 0 28",
      "r1bQ4/pp6/k1n4R/2bp4/qQ6/5K2/5P2/6N1 w - - 0 29",
      "r1bQ4/pp6/k1n4R/2bp4/Q7/5K2/5P2/6N1 b - - 0 29",
    ]
    for (index, history) in chess.getMoveHistory().enumerated() {
      XCTAssertEqual(history.fen, fens1[index], "Alekhine(g2): FEN move (index)")
    }

    pgn = pgns.removeFirst()
    chess = try pgn.validate()
    XCTAssertEqual(chess.getTag("Event")?.value, "Bled", "Alekhine(g3): event")
    XCTAssertEqual(chess.getTag("White")?.value, "Alexander Alekhine", "Alekhine(g3): white")
    XCTAssertEqual(chess.getTag("Black")?.value, "Salomon Flohr", "Alekhine(g3): black")
    XCTAssertEqual(chess.getMoveCount(), 29, "Alekhine(g3): move count")
    XCTAssertEqual(
      chess.getMoveHistory().map { $0.pcn }.joined(separator: ","),
      "d2d4,d7d5,c2c4,d5c4,g1f3,g8f6,e2e3,e7e6,f1c4,c7c5,e1g1,b8c6,d1e2,a7a6,f1d1,b7b5,d4c5,d8c7,c4d3,f8c5,a2a4,b5b4,b1d2,e8g8,d2b3,c5e7,e3e4,f6d7,c1e3,d7e5,f3e5,c6e5,a1c1,c7b8,e3c5,e7c5,b3c5,b8b6,e2h5,e5d7,d3e2,g7g6,h5g5,d7c5,c1c5,a6a5,h2h4,c8a6,e2f3,f7f6,g5e3,a8d8,d1d8,f8d8,e4e5,f6f5,c5c8",
      "Alekhine(g3): PCN move history"
    )
    let fens2 = [
      "rnbqkbnr/pppppppp/8/8/3P4/8/PPP1PPPP/RNBQKBNR b KQkq - 0 1",
      "rnbqkbnr/ppp1pppp/8/3p4/3P4/8/PPP1PPPP/RNBQKBNR w KQkq - 0 2",
      "rnbqkbnr/ppp1pppp/8/3p4/2PP4/8/PP2PPPP/RNBQKBNR b KQkq - 0 2",
      "rnbqkbnr/ppp1pppp/8/8/2pP4/8/PP2PPPP/RNBQKBNR w KQkq - 0 3",
      "rnbqkbnr/ppp1pppp/8/8/2pP4/5N2/PP2PPPP/RNBQKB1R b KQkq - 1 3",
      "rnbqkb1r/ppp1pppp/5n2/8/2pP4/5N2/PP2PPPP/RNBQKB1R w KQkq - 2 4",
      "rnbqkb1r/ppp1pppp/5n2/8/2pP4/4PN2/PP3PPP/RNBQKB1R b KQkq - 0 4",
      "rnbqkb1r/ppp2ppp/4pn2/8/2pP4/4PN2/PP3PPP/RNBQKB1R w KQkq - 0 5",
      "rnbqkb1r/ppp2ppp/4pn2/8/2BP4/4PN2/PP3PPP/RNBQK2R b KQkq - 0 5",
      "rnbqkb1r/pp3ppp/4pn2/2p5/2BP4/4PN2/PP3PPP/RNBQK2R w KQkq - 0 6",
      "rnbqkb1r/pp3ppp/4pn2/2p5/2BP4/4PN2/PP3PPP/RNBQ1RK1 b kq - 1 6",
      "r1bqkb1r/pp3ppp/2n1pn2/2p5/2BP4/4PN2/PP3PPP/RNBQ1RK1 w kq - 2 7",
      "r1bqkb1r/pp3ppp/2n1pn2/2p5/2BP4/4PN2/PP2QPPP/RNB2RK1 b kq - 3 7",
      "r1bqkb1r/1p3ppp/p1n1pn2/2p5/2BP4/4PN2/PP2QPPP/RNB2RK1 w kq - 0 8",
      "r1bqkb1r/1p3ppp/p1n1pn2/2p5/2BP4/4PN2/PP2QPPP/RNBR2K1 b kq - 1 8",
      "r1bqkb1r/5ppp/p1n1pn2/1pp5/2BP4/4PN2/PP2QPPP/RNBR2K1 w kq - 0 9",
      "r1bqkb1r/5ppp/p1n1pn2/1pP5/2B5/4PN2/PP2QPPP/RNBR2K1 b kq - 0 9",
      "r1b1kb1r/2q2ppp/p1n1pn2/1pP5/2B5/4PN2/PP2QPPP/RNBR2K1 w kq - 1 10",
      "r1b1kb1r/2q2ppp/p1n1pn2/1pP5/8/3BPN2/PP2QPPP/RNBR2K1 b kq - 2 10",
      "r1b1k2r/2q2ppp/p1n1pn2/1pb5/8/3BPN2/PP2QPPP/RNBR2K1 w kq - 0 11",
      "r1b1k2r/2q2ppp/p1n1pn2/1pb5/P7/3BPN2/1P2QPPP/RNBR2K1 b kq - 0 11",
      "r1b1k2r/2q2ppp/p1n1pn2/2b5/Pp6/3BPN2/1P2QPPP/RNBR2K1 w kq - 0 12",
      "r1b1k2r/2q2ppp/p1n1pn2/2b5/Pp6/3BPN2/1P1NQPPP/R1BR2K1 b kq - 1 12",
      "r1b2rk1/2q2ppp/p1n1pn2/2b5/Pp6/3BPN2/1P1NQPPP/R1BR2K1 w - - 2 13",
      "r1b2rk1/2q2ppp/p1n1pn2/2b5/Pp6/1N1BPN2/1P2QPPP/R1BR2K1 b - - 3 13",
      "r1b2rk1/2q1bppp/p1n1pn2/8/Pp6/1N1BPN2/1P2QPPP/R1BR2K1 w - - 4 14",
      "r1b2rk1/2q1bppp/p1n1pn2/8/Pp2P3/1N1B1N2/1P2QPPP/R1BR2K1 b - - 0 14",
      "r1b2rk1/2qnbppp/p1n1p3/8/Pp2P3/1N1B1N2/1P2QPPP/R1BR2K1 w - - 1 15",
      "r1b2rk1/2qnbppp/p1n1p3/8/Pp2P3/1N1BBN2/1P2QPPP/R2R2K1 b - - 2 15",
      "r1b2rk1/2q1bppp/p1n1p3/4n3/Pp2P3/1N1BBN2/1P2QPPP/R2R2K1 w - - 3 16",
      "r1b2rk1/2q1bppp/p1n1p3/4N3/Pp2P3/1N1BB3/1P2QPPP/R2R2K1 b - - 0 16",
      "r1b2rk1/2q1bppp/p3p3/4n3/Pp2P3/1N1BB3/1P2QPPP/R2R2K1 w - - 0 17",
      "r1b2rk1/2q1bppp/p3p3/4n3/Pp2P3/1N1BB3/1P2QPPP/2RR2K1 b - - 1 17",
      "rqb2rk1/4bppp/p3p3/4n3/Pp2P3/1N1BB3/1P2QPPP/2RR2K1 w - - 2 18",
      "rqb2rk1/4bppp/p3p3/2B1n3/Pp2P3/1N1B4/1P2QPPP/2RR2K1 b - - 3 18",
      "rqb2rk1/5ppp/p3p3/2b1n3/Pp2P3/1N1B4/1P2QPPP/2RR2K1 w - - 0 19",
      "rqb2rk1/5ppp/p3p3/2N1n3/Pp2P3/3B4/1P2QPPP/2RR2K1 b - - 0 19",
      "r1b2rk1/5ppp/pq2p3/2N1n3/Pp2P3/3B4/1P2QPPP/2RR2K1 w - - 1 20",
      "r1b2rk1/5ppp/pq2p3/2N1n2Q/Pp2P3/3B4/1P3PPP/2RR2K1 b - - 2 20",
      "r1b2rk1/3n1ppp/pq2p3/2N4Q/Pp2P3/3B4/1P3PPP/2RR2K1 w - - 3 21",
      "r1b2rk1/3n1ppp/pq2p3/2N4Q/Pp2P3/8/1P2BPPP/2RR2K1 b - - 4 21",
      "r1b2rk1/3n1p1p/pq2p1p1/2N4Q/Pp2P3/8/1P2BPPP/2RR2K1 w - - 0 22",
      "r1b2rk1/3n1p1p/pq2p1p1/2N3Q1/Pp2P3/8/1P2BPPP/2RR2K1 b - - 1 22",
      "r1b2rk1/5p1p/pq2p1p1/2n3Q1/Pp2P3/8/1P2BPPP/2RR2K1 w - - 0 23",
      "r1b2rk1/5p1p/pq2p1p1/2R3Q1/Pp2P3/8/1P2BPPP/3R2K1 b - - 0 23",
      "r1b2rk1/5p1p/1q2p1p1/p1R3Q1/Pp2P3/8/1P2BPPP/3R2K1 w - - 0 24",
      "r1b2rk1/5p1p/1q2p1p1/p1R3Q1/Pp2P2P/8/1P2BPP1/3R2K1 b - - 0 24",
      "r4rk1/5p1p/bq2p1p1/p1R3Q1/Pp2P2P/8/1P2BPP1/3R2K1 w - - 1 25",
      "r4rk1/5p1p/bq2p1p1/p1R3Q1/Pp2P2P/5B2/1P3PP1/3R2K1 b - - 2 25",
      "r4rk1/7p/bq2ppp1/p1R3Q1/Pp2P2P/5B2/1P3PP1/3R2K1 w - - 0 26",
      "r4rk1/7p/bq2ppp1/p1R5/Pp2P2P/4QB2/1P3PP1/3R2K1 b - - 1 26",
      "3r1rk1/7p/bq2ppp1/p1R5/Pp2P2P/4QB2/1P3PP1/3R2K1 w - - 2 27",
      "3R1rk1/7p/bq2ppp1/p1R5/Pp2P2P/4QB2/1P3PP1/6K1 b - - 0 27",
      "3r2k1/7p/bq2ppp1/p1R5/Pp2P2P/4QB2/1P3PP1/6K1 w - - 0 28",
      "3r2k1/7p/bq2ppp1/p1R1P3/Pp5P/4QB2/1P3PP1/6K1 b - - 0 28",
      "3r2k1/7p/bq2p1p1/p1R1Pp2/Pp5P/4QB2/1P3PP1/6K1 w - - 0 29",
      "2Rr2k1/7p/bq2p1p1/p3Pp2/Pp5P/4QB2/1P3PP1/6K1 b - - 1 29",
    ]
    for (index, history) in chess.getMoveHistory().enumerated() {
      XCTAssertEqual(history.fen, fens2[index], "Alekhine(g3): FEN move (index)")
    }

    pgn = pgns.removeFirst()
    chess = try pgn.validate()
    XCTAssertEqual(
      chess.getTag("Event")?.value, "London British CF International Masters", "Alekhine(g4): event"
    )
    XCTAssertEqual(chess.getTag("White")?.value, "Alekhine, Alexander", "Alekhine(g4): white")
    XCTAssertEqual(chess.getTag("Black")?.value, "Yates, Frederick Dewhurst", "Alekhine(g4): black")
    XCTAssertEqual(chess.getMoveCount(), 38, "Alekhine(g4): move count")
    XCTAssertEqual(
      chess.getMoveHistory().map { $0.pcn }.joined(separator: ","),
      "d2d4,g8f6,c2c4,e7e6,g1f3,d7d5,b1c3,f8e7,c1g5,e8g8,e2e3,b8d7,a1c1,c7c6,d1c2,f8e8,f1d3,d5c4,d3c4,f6d5,c3e4,f7f5,g5e7,d8e7,e4d2,b7b5,c4d5,c6d5,e1g1,a7a5,d2b3,a5a4,b3c5,d7c5,c2c5,e7c5,c1c5,b5b4,f1c1,c8a6,f3e5,e8b8,f2f3,b4b3,a2a3,h7h6,g1f2,g8h7,h2h4,b8f8,f2g3,f8b8,c5c7,a6b5,c1c5,b5a6,c5c6,b8e8,g3f4,h7g8,h4h5,a6f1,g2g3,f1a6,c7f7,g8h7,c6c7,e8g8,e5d7,h7h8,d7f6,g8f8,f7g7,f8f6,f4e5",
      "Alekhine(g4): PCN move history"
    )
    let fens3 = [
      "rnbqkbnr/pppppppp/8/8/3P4/8/PPP1PPPP/RNBQKBNR b KQkq - 0 1",
      "rnbqkb1r/pppppppp/5n2/8/3P4/8/PPP1PPPP/RNBQKBNR w KQkq - 1 2",
      "rnbqkb1r/pppppppp/5n2/8/2PP4/8/PP2PPPP/RNBQKBNR b KQkq - 0 2",
      "rnbqkb1r/pppp1ppp/4pn2/8/2PP4/8/PP2PPPP/RNBQKBNR w KQkq - 0 3",
      "rnbqkb1r/pppp1ppp/4pn2/8/2PP4/5N2/PP2PPPP/RNBQKB1R b KQkq - 1 3",
      "rnbqkb1r/ppp2ppp/4pn2/3p4/2PP4/5N2/PP2PPPP/RNBQKB1R w KQkq - 0 4",
      "rnbqkb1r/ppp2ppp/4pn2/3p4/2PP4/2N2N2/PP2PPPP/R1BQKB1R b KQkq - 1 4",
      "rnbqk2r/ppp1bppp/4pn2/3p4/2PP4/2N2N2/PP2PPPP/R1BQKB1R w KQkq - 2 5",
      "rnbqk2r/ppp1bppp/4pn2/3p2B1/2PP4/2N2N2/PP2PPPP/R2QKB1R b KQkq - 3 5",
      "rnbq1rk1/ppp1bppp/4pn2/3p2B1/2PP4/2N2N2/PP2PPPP/R2QKB1R w KQ - 4 6",
      "rnbq1rk1/ppp1bppp/4pn2/3p2B1/2PP4/2N1PN2/PP3PPP/R2QKB1R b KQ - 0 6",
      "r1bq1rk1/pppnbppp/4pn2/3p2B1/2PP4/2N1PN2/PP3PPP/R2QKB1R w KQ - 1 7",
      "r1bq1rk1/pppnbppp/4pn2/3p2B1/2PP4/2N1PN2/PP3PPP/2RQKB1R b K - 2 7",
      "r1bq1rk1/pp1nbppp/2p1pn2/3p2B1/2PP4/2N1PN2/PP3PPP/2RQKB1R w K - 0 8",
      "r1bq1rk1/pp1nbppp/2p1pn2/3p2B1/2PP4/2N1PN2/PPQ2PPP/2R1KB1R b K - 1 8",
      "r1bqr1k1/pp1nbppp/2p1pn2/3p2B1/2PP4/2N1PN2/PPQ2PPP/2R1KB1R w K - 2 9",
      "r1bqr1k1/pp1nbppp/2p1pn2/3p2B1/2PP4/2NBPN2/PPQ2PPP/2R1K2R b K - 3 9",
      "r1bqr1k1/pp1nbppp/2p1pn2/6B1/2pP4/2NBPN2/PPQ2PPP/2R1K2R w K - 0 10",
      "r1bqr1k1/pp1nbppp/2p1pn2/6B1/2BP4/2N1PN2/PPQ2PPP/2R1K2R b K - 0 10",
      "r1bqr1k1/pp1nbppp/2p1p3/3n2B1/2BP4/2N1PN2/PPQ2PPP/2R1K2R w K - 1 11",
      "r1bqr1k1/pp1nbppp/2p1p3/3n2B1/2BPN3/4PN2/PPQ2PPP/2R1K2R b K - 2 11",
      "r1bqr1k1/pp1nb1pp/2p1p3/3n1pB1/2BPN3/4PN2/PPQ2PPP/2R1K2R w K - 0 12",
      "r1bqr1k1/pp1nB1pp/2p1p3/3n1p2/2BPN3/4PN2/PPQ2PPP/2R1K2R b K - 0 12",
      "r1b1r1k1/pp1nq1pp/2p1p3/3n1p2/2BPN3/4PN2/PPQ2PPP/2R1K2R w K - 0 13",
      "r1b1r1k1/pp1nq1pp/2p1p3/3n1p2/2BP4/4PN2/PPQN1PPP/2R1K2R b K - 1 13",
      "r1b1r1k1/p2nq1pp/2p1p3/1p1n1p2/2BP4/4PN2/PPQN1PPP/2R1K2R w K - 0 14",
      "r1b1r1k1/p2nq1pp/2p1p3/1p1B1p2/3P4/4PN2/PPQN1PPP/2R1K2R b K - 0 14",
      "r1b1r1k1/p2nq1pp/4p3/1p1p1p2/3P4/4PN2/PPQN1PPP/2R1K2R w K - 0 15",
      "r1b1r1k1/p2nq1pp/4p3/1p1p1p2/3P4/4PN2/PPQN1PPP/2R2RK1 b - - 1 15",
      "r1b1r1k1/3nq1pp/4p3/pp1p1p2/3P4/4PN2/PPQN1PPP/2R2RK1 w - - 0 16",
      "r1b1r1k1/3nq1pp/4p3/pp1p1p2/3P4/1N2PN2/PPQ2PPP/2R2RK1 b - - 1 16",
      "r1b1r1k1/3nq1pp/4p3/1p1p1p2/p2P4/1N2PN2/PPQ2PPP/2R2RK1 w - - 0 17",
      "r1b1r1k1/3nq1pp/4p3/1pNp1p2/p2P4/4PN2/PPQ2PPP/2R2RK1 b - - 1 17",
      "r1b1r1k1/4q1pp/4p3/1pnp1p2/p2P4/4PN2/PPQ2PPP/2R2RK1 w - - 0 18",
      "r1b1r1k1/4q1pp/4p3/1pQp1p2/p2P4/4PN2/PP3PPP/2R2RK1 b - - 0 18",
      "r1b1r1k1/6pp/4p3/1pqp1p2/p2P4/4PN2/PP3PPP/2R2RK1 w - - 0 19",
      "r1b1r1k1/6pp/4p3/1pRp1p2/p2P4/4PN2/PP3PPP/5RK1 b - - 0 19",
      "r1b1r1k1/6pp/4p3/2Rp1p2/pp1P4/4PN2/PP3PPP/5RK1 w - - 0 20",
      "r1b1r1k1/6pp/4p3/2Rp1p2/pp1P4/4PN2/PP3PPP/2R3K1 b - - 1 20",
      "r3r1k1/6pp/b3p3/2Rp1p2/pp1P4/4PN2/PP3PPP/2R3K1 w - - 2 21",
      "r3r1k1/6pp/b3p3/2RpNp2/pp1P4/4P3/PP3PPP/2R3K1 b - - 3 21",
      "rr4k1/6pp/b3p3/2RpNp2/pp1P4/4P3/PP3PPP/2R3K1 w - - 4 22",
      "rr4k1/6pp/b3p3/2RpNp2/pp1P4/4PP2/PP4PP/2R3K1 b - - 0 22",
      "rr4k1/6pp/b3p3/2RpNp2/p2P4/1p2PP2/PP4PP/2R3K1 w - - 0 23",
      "rr4k1/6pp/b3p3/2RpNp2/p2P4/Pp2PP2/1P4PP/2R3K1 b - - 0 23",
      "rr4k1/6p1/b3p2p/2RpNp2/p2P4/Pp2PP2/1P4PP/2R3K1 w - - 0 24",
      "rr4k1/6p1/b3p2p/2RpNp2/p2P4/Pp2PP2/1P3KPP/2R5 b - - 1 24",
      "rr6/6pk/b3p2p/2RpNp2/p2P4/Pp2PP2/1P3KPP/2R5 w - - 2 25",
      "rr6/6pk/b3p2p/2RpNp2/p2P3P/Pp2PP2/1P3KP1/2R5 b - - 0 25",
      "r4r2/6pk/b3p2p/2RpNp2/p2P3P/Pp2PP2/1P3KP1/2R5 w - - 1 26",
      "r4r2/6pk/b3p2p/2RpNp2/p2P3P/Pp2PPK1/1P4P1/2R5 b - - 2 26",
      "rr6/6pk/b3p2p/2RpNp2/p2P3P/Pp2PPK1/1P4P1/2R5 w - - 3 27",
      "rr6/2R3pk/b3p2p/3pNp2/p2P3P/Pp2PPK1/1P4P1/2R5 b - - 4 27",
      "rr6/2R3pk/4p2p/1b1pNp2/p2P3P/Pp2PPK1/1P4P1/2R5 w - - 5 28",
      "rr6/2R3pk/4p2p/1bRpNp2/p2P3P/Pp2PPK1/1P4P1/8 b - - 6 28",
      "rr6/2R3pk/b3p2p/2RpNp2/p2P3P/Pp2PPK1/1P4P1/8 w - - 7 29",
      "rr6/2R3pk/b1R1p2p/3pNp2/p2P3P/Pp2PPK1/1P4P1/8 b - - 8 29",
      "r3r3/2R3pk/b1R1p2p/3pNp2/p2P3P/Pp2PPK1/1P4P1/8 w - - 9 30",
      "r3r3/2R3pk/b1R1p2p/3pNp2/p2P1K1P/Pp2PP2/1P4P1/8 b - - 10 30",
      "r3r1k1/2R3p1/b1R1p2p/3pNp2/p2P1K1P/Pp2PP2/1P4P1/8 w - - 11 31",
      "r3r1k1/2R3p1/b1R1p2p/3pNp1P/p2P1K2/Pp2PP2/1P4P1/8 b - - 0 31",
      "r3r1k1/2R3p1/2R1p2p/3pNp1P/p2P1K2/Pp2PP2/1P4P1/5b2 w - - 1 32",
      "r3r1k1/2R3p1/2R1p2p/3pNp1P/p2P1K2/Pp2PPP1/1P6/5b2 b - - 0 32",
      "r3r1k1/2R3p1/b1R1p2p/3pNp1P/p2P1K2/Pp2PPP1/1P6/8 w - - 1 33",
      "r3r1k1/5Rp1/b1R1p2p/3pNp1P/p2P1K2/Pp2PPP1/1P6/8 b - - 2 33",
      "r3r3/5Rpk/b1R1p2p/3pNp1P/p2P1K2/Pp2PPP1/1P6/8 w - - 3 34",
      "r3r3/2R2Rpk/b3p2p/3pNp1P/p2P1K2/Pp2PPP1/1P6/8 b - - 4 34",
      "r5r1/2R2Rpk/b3p2p/3pNp1P/p2P1K2/Pp2PPP1/1P6/8 w - - 5 35",
      "r5r1/2RN1Rpk/b3p2p/3p1p1P/p2P1K2/Pp2PPP1/1P6/8 b - - 6 35",
      "r5rk/2RN1Rp1/b3p2p/3p1p1P/p2P1K2/Pp2PPP1/1P6/8 w - - 7 36",
      "r5rk/2R2Rp1/b3pN1p/3p1p1P/p2P1K2/Pp2PPP1/1P6/8 b - - 8 36",
      "r4r1k/2R2Rp1/b3pN1p/3p1p1P/p2P1K2/Pp2PPP1/1P6/8 w - - 9 37",
      "r4r1k/2R3R1/b3pN1p/3p1p1P/p2P1K2/Pp2PPP1/1P6/8 b - - 0 37",
      "r6k/2R3R1/b3pr1p/3p1p1P/p2P1K2/Pp2PPP1/1P6/8 w - - 0 38",
      "r6k/2R3R1/b3pr1p/3pKp1P/p2P4/Pp2PPP1/1P6/8 b - - 1 38",
    ]
    for (index, history) in chess.getMoveHistory().enumerated() {
      XCTAssertEqual(history.fen, fens3[index], "Alekhine(g4): FEN move (index)")
    }

    pgn = pgns.removeFirst()
    chess = try pgn.validate()
    XCTAssertEqual(chess.getTag("Event")?.value, "Vienna", "Alekhine(g5): event")
    XCTAssertEqual(chess.getTag("White")?.value, "Alexander Alekhine", "Alekhine(g5): white")
    XCTAssertEqual(chess.getTag("Black")?.value, "Richard Reti", "Alekhine(g5): black")
    XCTAssertEqual(chess.getMoveCount(), 60, "Alekhine(g5): move count")
    XCTAssertEqual(
      chess.getMoveHistory().map { $0.pcn }.joined(separator: ","),
      "e2e4,e7e5,g1f3,b8c6,f1b5,a7a6,b5a4,g8f6,b1c3,b7b5,a4b3,f8c5,f3e5,c6e5,d2d4,c5d6,d4e5,d6e5,f2f4,e5c3,b2c3,e8g8,e4e5,c7c5,c1a3,d8a5,e1g1,a5a3,e5f6,c5c4,d1d5,a3a5,f6g7,a5b6,g1h1,g8g7,b3c4,c8b7,d5e5,b6f6,c4d3,f8e8,e5h5,h7h6,h5g4,g7h8,g4d7,e8e7,d7d4,f6d4,c3d4,a8d8,f4f5,f7f6,a1e1,e7g7,d3e4,d8d4,e4b7,g7b7,e1e6,h8g7,e6a6,d4c4,f1f3,c4c2,h2h3,g7f7,f3g3,c2f2,g3g6,f2f5,g6h6,f7g7,h6h4,b5b4,h4g4,g7f7,g4g3,f5b5,g3b3,f7g6,h1h2,b5c5,a6a4,c5b5,h3h4,b5b6,h2h3,b7b8,g2g3,f6f5,a4a5,b8c8,b3f3,b6f6,h3g2,c8c3,a5a8,c3f3,g2f3,f6c6,a8b8,c6c4,b8b6,g6g7,h4h5,c4d4,b6c6,d4e4,c6g6,g7f7,g3g4,e4g4,g6g4,f5g4,f3g4,f7g7",
      "Alekhine(g5): PCN move history"
    )
    let fens4 = [
      "rnbqkbnr/pppppppp/8/8/4P3/8/PPPP1PPP/RNBQKBNR b KQkq - 0 1",
      "rnbqkbnr/pppp1ppp/8/4p3/4P3/8/PPPP1PPP/RNBQKBNR w KQkq - 0 2",
      "rnbqkbnr/pppp1ppp/8/4p3/4P3/5N2/PPPP1PPP/RNBQKB1R b KQkq - 1 2",
      "r1bqkbnr/pppp1ppp/2n5/4p3/4P3/5N2/PPPP1PPP/RNBQKB1R w KQkq - 2 3",
      "r1bqkbnr/pppp1ppp/2n5/1B2p3/4P3/5N2/PPPP1PPP/RNBQK2R b KQkq - 3 3",
      "r1bqkbnr/1ppp1ppp/p1n5/1B2p3/4P3/5N2/PPPP1PPP/RNBQK2R w KQkq - 0 4",
      "r1bqkbnr/1ppp1ppp/p1n5/4p3/B3P3/5N2/PPPP1PPP/RNBQK2R b KQkq - 1 4",
      "r1bqkb1r/1ppp1ppp/p1n2n2/4p3/B3P3/5N2/PPPP1PPP/RNBQK2R w KQkq - 2 5",
      "r1bqkb1r/1ppp1ppp/p1n2n2/4p3/B3P3/2N2N2/PPPP1PPP/R1BQK2R b KQkq - 3 5",
      "r1bqkb1r/2pp1ppp/p1n2n2/1p2p3/B3P3/2N2N2/PPPP1PPP/R1BQK2R w KQkq - 0 6",
      "r1bqkb1r/2pp1ppp/p1n2n2/1p2p3/4P3/1BN2N2/PPPP1PPP/R1BQK2R b KQkq - 1 6",
      "r1bqk2r/2pp1ppp/p1n2n2/1pb1p3/4P3/1BN2N2/PPPP1PPP/R1BQK2R w KQkq - 2 7",
      "r1bqk2r/2pp1ppp/p1n2n2/1pb1N3/4P3/1BN5/PPPP1PPP/R1BQK2R b KQkq - 0 7",
      "r1bqk2r/2pp1ppp/p4n2/1pb1n3/4P3/1BN5/PPPP1PPP/R1BQK2R w KQkq - 0 8",
      "r1bqk2r/2pp1ppp/p4n2/1pb1n3/3PP3/1BN5/PPP2PPP/R1BQK2R b KQkq - 0 8",
      "r1bqk2r/2pp1ppp/p2b1n2/1p2n3/3PP3/1BN5/PPP2PPP/R1BQK2R w KQkq - 1 9",
      "r1bqk2r/2pp1ppp/p2b1n2/1p2P3/4P3/1BN5/PPP2PPP/R1BQK2R b KQkq - 0 9",
      "r1bqk2r/2pp1ppp/p4n2/1p2b3/4P3/1BN5/PPP2PPP/R1BQK2R w KQkq - 0 10",
      "r1bqk2r/2pp1ppp/p4n2/1p2b3/4PP2/1BN5/PPP3PP/R1BQK2R b KQkq - 0 10",
      "r1bqk2r/2pp1ppp/p4n2/1p6/4PP2/1Bb5/PPP3PP/R1BQK2R w KQkq - 0 11",
      "r1bqk2r/2pp1ppp/p4n2/1p6/4PP2/1BP5/P1P3PP/R1BQK2R b KQkq - 0 11",
      "r1bq1rk1/2pp1ppp/p4n2/1p6/4PP2/1BP5/P1P3PP/R1BQK2R w KQ - 1 12",
      "r1bq1rk1/2pp1ppp/p4n2/1p2P3/5P2/1BP5/P1P3PP/R1BQK2R b KQ - 0 12",
      "r1bq1rk1/3p1ppp/p4n2/1pp1P3/5P2/1BP5/P1P3PP/R1BQK2R w KQ - 0 13",
      "r1bq1rk1/3p1ppp/p4n2/1pp1P3/5P2/BBP5/P1P3PP/R2QK2R b KQ - 1 13",
      "r1b2rk1/3p1ppp/p4n2/qpp1P3/5P2/BBP5/P1P3PP/R2QK2R w KQ - 2 14",
      "r1b2rk1/3p1ppp/p4n2/qpp1P3/5P2/BBP5/P1P3PP/R2Q1RK1 b - - 3 14",
      "r1b2rk1/3p1ppp/p4n2/1pp1P3/5P2/qBP5/P1P3PP/R2Q1RK1 w - - 0 15",
      "r1b2rk1/3p1ppp/p4P2/1pp5/5P2/qBP5/P1P3PP/R2Q1RK1 b - - 0 15",
      "r1b2rk1/3p1ppp/p4P2/1p6/2p2P2/qBP5/P1P3PP/R2Q1RK1 w - - 0 16",
      "r1b2rk1/3p1ppp/p4P2/1p1Q4/2p2P2/qBP5/P1P3PP/R4RK1 b - - 1 16",
      "r1b2rk1/3p1ppp/p4P2/qp1Q4/2p2P2/1BP5/P1P3PP/R4RK1 w - - 2 17",
      "r1b2rk1/3p1pPp/p7/qp1Q4/2p2P2/1BP5/P1P3PP/R4RK1 b - - 0 17",
      "r1b2rk1/3p1pPp/pq6/1p1Q4/2p2P2/1BP5/P1P3PP/R4RK1 w - - 1 18",
      "r1b2rk1/3p1pPp/pq6/1p1Q4/2p2P2/1BP5/P1P3PP/R4R1K b - - 2 18",
      "r1b2r2/3p1pkp/pq6/1p1Q4/2p2P2/1BP5/P1P3PP/R4R1K w - - 0 19",
      "r1b2r2/3p1pkp/pq6/1p1Q4/2B2P2/2P5/P1P3PP/R4R1K b - - 0 19",
      "r4r2/1b1p1pkp/pq6/1p1Q4/2B2P2/2P5/P1P3PP/R4R1K w - - 1 20",
      "r4r2/1b1p1pkp/pq6/1p2Q3/2B2P2/2P5/P1P3PP/R4R1K b - - 2 20",
      "r4r2/1b1p1pkp/p4q2/1p2Q3/2B2P2/2P5/P1P3PP/R4R1K w - - 3 21",
      "r4r2/1b1p1pkp/p4q2/1p2Q3/5P2/2PB4/P1P3PP/R4R1K b - - 4 21",
      "r3r3/1b1p1pkp/p4q2/1p2Q3/5P2/2PB4/P1P3PP/R4R1K w - - 5 22",
      "r3r3/1b1p1pkp/p4q2/1p5Q/5P2/2PB4/P1P3PP/R4R1K b - - 6 22",
      "r3r3/1b1p1pk1/p4q1p/1p5Q/5P2/2PB4/P1P3PP/R4R1K w - - 0 23",
      "r3r3/1b1p1pk1/p4q1p/1p6/5PQ1/2PB4/P1P3PP/R4R1K b - - 1 23",
      "r3r2k/1b1p1p2/p4q1p/1p6/5PQ1/2PB4/P1P3PP/R4R1K w - - 2 24",
      "r3r2k/1b1Q1p2/p4q1p/1p6/5P2/2PB4/P1P3PP/R4R1K b - - 0 24",
      "r6k/1b1Qrp2/p4q1p/1p6/5P2/2PB4/P1P3PP/R4R1K w - - 1 25",
      "r6k/1b2rp2/p4q1p/1p6/3Q1P2/2PB4/P1P3PP/R4R1K b - - 2 25",
      "r6k/1b2rp2/p6p/1p6/3q1P2/2PB4/P1P3PP/R4R1K w - - 0 26",
      "r6k/1b2rp2/p6p/1p6/3P1P2/3B4/P1P3PP/R4R1K b - - 0 26",
      "3r3k/1b2rp2/p6p/1p6/3P1P2/3B4/P1P3PP/R4R1K w - - 1 27",
      "3r3k/1b2rp2/p6p/1p3P2/3P4/3B4/P1P3PP/R4R1K b - - 0 27",
      "3r3k/1b2r3/p4p1p/1p3P2/3P4/3B4/P1P3PP/R4R1K w - - 0 28",
      "3r3k/1b2r3/p4p1p/1p3P2/3P4/3B4/P1P3PP/4RR1K b - - 1 28",
      "3r3k/1b4r1/p4p1p/1p3P2/3P4/3B4/P1P3PP/4RR1K w - - 2 29",
      "3r3k/1b4r1/p4p1p/1p3P2/3PB3/8/P1P3PP/4RR1K b - - 3 29",
      "7k/1b4r1/p4p1p/1p3P2/3rB3/8/P1P3PP/4RR1K w - - 0 30",
      "7k/1B4r1/p4p1p/1p3P2/3r4/8/P1P3PP/4RR1K b - - 0 30",
      "7k/1r6/p4p1p/1p3P2/3r4/8/P1P3PP/4RR1K w - - 0 31",
      "7k/1r6/p3Rp1p/1p3P2/3r4/8/P1P3PP/5R1K b - - 1 31",
      "8/1r4k1/p3Rp1p/1p3P2/3r4/8/P1P3PP/5R1K w - - 2 32",
      "8/1r4k1/R4p1p/1p3P2/3r4/8/P1P3PP/5R1K b - - 0 32",
      "8/1r4k1/R4p1p/1p3P2/2r5/8/P1P3PP/5R1K w - - 1 33",
      "8/1r4k1/R4p1p/1p3P2/2r5/5R2/P1P3PP/7K b - - 2 33",
      "8/1r4k1/R4p1p/1p3P2/8/5R2/P1r3PP/7K w - - 0 34",
      "8/1r4k1/R4p1p/1p3P2/8/5R1P/P1r3P1/7K b - - 0 34",
      "8/1r3k2/R4p1p/1p3P2/8/5R1P/P1r3P1/7K w - - 1 35",
      "8/1r3k2/R4p1p/1p3P2/8/6RP/P1r3P1/7K b - - 2 35",
      "8/1r3k2/R4p1p/1p3P2/8/6RP/P4rP1/7K w - - 3 36",
      "8/1r3k2/R4pRp/1p3P2/8/7P/P4rP1/7K b - - 4 36",
      "8/1r3k2/R4pRp/1p3r2/8/7P/P5P1/7K w - - 0 37",
      "8/1r3k2/R4p1R/1p3r2/8/7P/P5P1/7K b - - 0 37",
      "8/1r4k1/R4p1R/1p3r2/8/7P/P5P1/7K w - - 1 38",
      "8/1r4k1/R4p2/1p3r2/7R/7P/P5P1/7K b - - 2 38",
      "8/1r4k1/R4p2/5r2/1p5R/7P/P5P1/7K w - - 0 39",
      "8/1r4k1/R4p2/5r2/1p4R1/7P/P5P1/7K b - - 1 39",
      "8/1r3k2/R4p2/5r2/1p4R1/7P/P5P1/7K w - - 2 40",
      "8/1r3k2/R4p2/5r2/1p6/6RP/P5P1/7K b - - 3 40",
      "8/1r3k2/R4p2/1r6/1p6/6RP/P5P1/7K w - - 4 41",
      "8/1r3k2/R4p2/1r6/1p6/1R5P/P5P1/7K b - - 5 41",
      "8/1r6/R4pk1/1r6/1p6/1R5P/P5P1/7K w - - 6 42",
      "8/1r6/R4pk1/1r6/1p6/1R5P/P5PK/8 b - - 7 42",
      "8/1r6/R4pk1/2r5/1p6/1R5P/P5PK/8 w - - 8 43",
      "8/1r6/5pk1/2r5/Rp6/1R5P/P5PK/8 b - - 9 43",
      "8/1r6/5pk1/1r6/Rp6/1R5P/P5PK/8 w - - 10 44",
      "8/1r6/5pk1/1r6/Rp5P/1R6/P5PK/8 b - - 0 44",
      "8/1r6/1r3pk1/8/Rp5P/1R6/P5PK/8 w - - 1 45",
      "8/1r6/1r3pk1/8/Rp5P/1R5K/P5P1/8 b - - 2 45",
      "1r6/8/1r3pk1/8/Rp5P/1R5K/P5P1/8 w - - 3 46",
      "1r6/8/1r3pk1/8/Rp5P/1R4PK/P7/8 b - - 0 46",
      "1r6/8/1r4k1/5p2/Rp5P/1R4PK/P7/8 w - - 0 47",
      "1r6/8/1r4k1/R4p2/1p5P/1R4PK/P7/8 b - - 1 47",
      "2r5/8/1r4k1/R4p2/1p5P/1R4PK/P7/8 w - - 2 48",
      "2r5/8/1r4k1/R4p2/1p5P/5RPK/P7/8 b - - 3 48",
      "2r5/8/5rk1/R4p2/1p5P/5RPK/P7/8 w - - 4 49",
      "2r5/8/5rk1/R4p2/1p5P/5RP1/P5K1/8 b - - 5 49",
      "8/8/5rk1/R4p2/1p5P/2r2RP1/P5K1/8 w - - 6 50",
      "R7/8/5rk1/5p2/1p5P/2r2RP1/P5K1/8 b - - 7 50",
      "R7/8/5rk1/5p2/1p5P/5rP1/P5K1/8 w - - 0 51",
      "R7/8/5rk1/5p2/1p5P/5KP1/P7/8 b - - 0 51",
      "R7/8/2r3k1/5p2/1p5P/5KP1/P7/8 w - - 1 52",
      "1R6/8/2r3k1/5p2/1p5P/5KP1/P7/8 b - - 2 52",
      "1R6/8/6k1/5p2/1pr4P/5KP1/P7/8 w - - 3 53",
      "8/8/1R4k1/5p2/1pr4P/5KP1/P7/8 b - - 4 53",
      "8/6k1/1R6/5p2/1pr4P/5KP1/P7/8 w - - 5 54",
      "8/6k1/1R6/5p1P/1pr5/5KP1/P7/8 b - - 0 54",
      "8/6k1/1R6/5p1P/1p1r4/5KP1/P7/8 w - - 1 55",
      "8/6k1/2R5/5p1P/1p1r4/5KP1/P7/8 b - - 2 55",
      "8/6k1/2R5/5p1P/1p2r3/5KP1/P7/8 w - - 3 56",
      "8/6k1/6R1/5p1P/1p2r3/5KP1/P7/8 b - - 4 56",
      "8/5k2/6R1/5p1P/1p2r3/5KP1/P7/8 w - - 5 57",
      "8/5k2/6R1/5p1P/1p2r1P1/5K2/P7/8 b - - 0 57",
      "8/5k2/6R1/5p1P/1p4r1/5K2/P7/8 w - - 0 58",
      "8/5k2/8/5p1P/1p4R1/5K2/P7/8 b - - 0 58",
      "8/5k2/8/7P/1p4p1/5K2/P7/8 w - - 0 59",
      "8/5k2/8/7P/1p4K1/8/P7/8 b - - 0 59",
      "8/6k1/8/7P/1p4K1/8/P7/8 w - - 1 60",
    ]
    for (index, history) in chess.getMoveHistory().enumerated() {
      XCTAssertEqual(history.fen, fens4[index], "Alekhine(g5): FEN move (index)")
    }

    pgn = pgns.removeFirst()
    chess = try pgn.validate()
    XCTAssertEqual(chess.getTag("Event")?.value, "San Remo", "Alekhine(g6): event")
    XCTAssertEqual(chess.getTag("White")?.value, "Milan Vidmar", "Alekhine(g6): white")
    XCTAssertEqual(chess.getTag("Black")?.value, "Alexander Alekhine", "Alekhine(g6): black")
    XCTAssertEqual(chess.getMoveCount(), 58, "Alekhine(g6): move count")
    XCTAssertEqual(
      chess.getMoveHistory().map { $0.pcn }.joined(separator: ","),
      "d2d4,g8f6,c2c4,e7e6,b1c3,f8b4,d1c2,d7d5,a2a3,b4c3,c2c3,f6e4,c3c2,b8c6,e2e3,e6e5,f2f3,e4f6,c4d5,d8d5,f1c4,d5d6,d4e5,c6e5,c1d2,e8g8,d2b4,c7c5,a1d1,d6c6,b4d2,c8f5,c2f5,e5c4,d2c1,f8e8,e1f2,e8e6,g1h3,f6e4,f2e1,e4d6,f5d3,c4e3,c1e3,c5c4,d3d5,e6e3,e1f2,c6d5,d1d5,e3d3,d5d3,c4d3,h1d1,d6c4,d1d3,c4b2,d3b3,b2c4,b3b7,c4a3,h3g5,a7a5,g5f7,a5a4,f7d6,a3c2,b7b2,a4a3,b2c2,a3a2,c2a2,a8a2,f2g3,g8f8,h2h4,f8e7,d6e4,h7h6,e4f2,e7e6,f2d3,e6f5,d3f4,a2a4,f4d3,a4c4,d3f2,c4c6,f2h3,f5e5,h4h5,c6c2,h3f4,c2d2,f4h3,e5d4,h3f4,d4e3,f4e6,d2d5,f3f4,d5f5,g3g4,f5f6,f4f5,f6f7,g2g3,e3e4,e6c5,e4d4,c5b3,d4e5",
      "Alekhine(g6): PCN move history"
    )
    let fens5 = [
      "rnbqkbnr/pppppppp/8/8/3P4/8/PPP1PPPP/RNBQKBNR b KQkq - 0 1",
      "rnbqkb1r/pppppppp/5n2/8/3P4/8/PPP1PPPP/RNBQKBNR w KQkq - 1 2",
      "rnbqkb1r/pppppppp/5n2/8/2PP4/8/PP2PPPP/RNBQKBNR b KQkq - 0 2",
      "rnbqkb1r/pppp1ppp/4pn2/8/2PP4/8/PP2PPPP/RNBQKBNR w KQkq - 0 3",
      "rnbqkb1r/pppp1ppp/4pn2/8/2PP4/2N5/PP2PPPP/R1BQKBNR b KQkq - 1 3",
      "rnbqk2r/pppp1ppp/4pn2/8/1bPP4/2N5/PP2PPPP/R1BQKBNR w KQkq - 2 4",
      "rnbqk2r/pppp1ppp/4pn2/8/1bPP4/2N5/PPQ1PPPP/R1B1KBNR b KQkq - 3 4",
      "rnbqk2r/ppp2ppp/4pn2/3p4/1bPP4/2N5/PPQ1PPPP/R1B1KBNR w KQkq - 0 5",
      "rnbqk2r/ppp2ppp/4pn2/3p4/1bPP4/P1N5/1PQ1PPPP/R1B1KBNR b KQkq - 0 5",
      "rnbqk2r/ppp2ppp/4pn2/3p4/2PP4/P1b5/1PQ1PPPP/R1B1KBNR w KQkq - 0 6",
      "rnbqk2r/ppp2ppp/4pn2/3p4/2PP4/P1Q5/1P2PPPP/R1B1KBNR b KQkq - 0 6",
      "rnbqk2r/ppp2ppp/4p3/3p4/2PPn3/P1Q5/1P2PPPP/R1B1KBNR w KQkq - 1 7",
      "rnbqk2r/ppp2ppp/4p3/3p4/2PPn3/P7/1PQ1PPPP/R1B1KBNR b KQkq - 2 7",
      "r1bqk2r/ppp2ppp/2n1p3/3p4/2PPn3/P7/1PQ1PPPP/R1B1KBNR w KQkq - 3 8",
      "r1bqk2r/ppp2ppp/2n1p3/3p4/2PPn3/P3P3/1PQ2PPP/R1B1KBNR b KQkq - 0 8",
      "r1bqk2r/ppp2ppp/2n5/3pp3/2PPn3/P3P3/1PQ2PPP/R1B1KBNR w KQkq - 0 9",
      "r1bqk2r/ppp2ppp/2n5/3pp3/2PPn3/P3PP2/1PQ3PP/R1B1KBNR b KQkq - 0 9",
      "r1bqk2r/ppp2ppp/2n2n2/3pp3/2PP4/P3PP2/1PQ3PP/R1B1KBNR w KQkq - 1 10",
      "r1bqk2r/ppp2ppp/2n2n2/3Pp3/3P4/P3PP2/1PQ3PP/R1B1KBNR b KQkq - 0 10",
      "r1b1k2r/ppp2ppp/2n2n2/3qp3/3P4/P3PP2/1PQ3PP/R1B1KBNR w KQkq - 0 11",
      "r1b1k2r/ppp2ppp/2n2n2/3qp3/2BP4/P3PP2/1PQ3PP/R1B1K1NR b KQkq - 1 11",
      "r1b1k2r/ppp2ppp/2nq1n2/4p3/2BP4/P3PP2/1PQ3PP/R1B1K1NR w KQkq - 2 12",
      "r1b1k2r/ppp2ppp/2nq1n2/4P3/2B5/P3PP2/1PQ3PP/R1B1K1NR b KQkq - 0 12",
      "r1b1k2r/ppp2ppp/3q1n2/4n3/2B5/P3PP2/1PQ3PP/R1B1K1NR w KQkq - 0 13",
      "r1b1k2r/ppp2ppp/3q1n2/4n3/2B5/P3PP2/1PQB2PP/R3K1NR b KQkq - 1 13",
      "r1b2rk1/ppp2ppp/3q1n2/4n3/2B5/P3PP2/1PQB2PP/R3K1NR w KQ - 2 14",
      "r1b2rk1/ppp2ppp/3q1n2/4n3/1BB5/P3PP2/1PQ3PP/R3K1NR b KQ - 3 14",
      "r1b2rk1/pp3ppp/3q1n2/2p1n3/1BB5/P3PP2/1PQ3PP/R3K1NR w KQ - 0 15",
      "r1b2rk1/pp3ppp/3q1n2/2p1n3/1BB5/P3PP2/1PQ3PP/3RK1NR b K - 1 15",
      "r1b2rk1/pp3ppp/2q2n2/2p1n3/1BB5/P3PP2/1PQ3PP/3RK1NR w K - 2 16",
      "r1b2rk1/pp3ppp/2q2n2/2p1n3/2B5/P3PP2/1PQB2PP/3RK1NR b K - 3 16",
      "r4rk1/pp3ppp/2q2n2/2p1nb2/2B5/P3PP2/1PQB2PP/3RK1NR w K - 4 17",
      "r4rk1/pp3ppp/2q2n2/2p1nQ2/2B5/P3PP2/1P1B2PP/3RK1NR b K - 0 17",
      "r4rk1/pp3ppp/2q2n2/2p2Q2/2n5/P3PP2/1P1B2PP/3RK1NR w K - 0 18",
      "r4rk1/pp3ppp/2q2n2/2p2Q2/2n5/P3PP2/1P4PP/2BRK1NR b K - 1 18",
      "r3r1k1/pp3ppp/2q2n2/2p2Q2/2n5/P3PP2/1P4PP/2BRK1NR w K - 2 19",
      "r3r1k1/pp3ppp/2q2n2/2p2Q2/2n5/P3PP2/1P3KPP/2BR2NR b - - 3 19",
      "r5k1/pp3ppp/2q1rn2/2p2Q2/2n5/P3PP2/1P3KPP/2BR2NR w - - 4 20",
      "r5k1/pp3ppp/2q1rn2/2p2Q2/2n5/P3PP1N/1P3KPP/2BR3R b - - 5 20",
      "r5k1/pp3ppp/2q1r3/2p2Q2/2n1n3/P3PP1N/1P3KPP/2BR3R w - - 6 21",
      "r5k1/pp3ppp/2q1r3/2p2Q2/2n1n3/P3PP1N/1P4PP/2BRK2R b - - 7 21",
      "r5k1/pp3ppp/2qnr3/2p2Q2/2n5/P3PP1N/1P4PP/2BRK2R w - - 8 22",
      "r5k1/pp3ppp/2qnr3/2p5/2n5/P2QPP1N/1P4PP/2BRK2R b - - 9 22",
      "r5k1/pp3ppp/2qnr3/2p5/8/P2QnP1N/1P4PP/2BRK2R w - - 0 23",
      "r5k1/pp3ppp/2qnr3/2p5/8/P2QBP1N/1P4PP/3RK2R b - - 0 23",
      "r5k1/pp3ppp/2qnr3/8/2p5/P2QBP1N/1P4PP/3RK2R w - - 0 24",
      "r5k1/pp3ppp/2qnr3/3Q4/2p5/P3BP1N/1P4PP/3RK2R b - - 1 24",
      "r5k1/pp3ppp/2qn4/3Q4/2p5/P3rP1N/1P4PP/3RK2R w - - 0 25",
      "r5k1/pp3ppp/2qn4/3Q4/2p5/P3rP1N/1P3KPP/3R3R b - - 1 25",
      "r5k1/pp3ppp/3n4/3q4/2p5/P3rP1N/1P3KPP/3R3R w - - 0 26",
      "r5k1/pp3ppp/3n4/3R4/2p5/P3rP1N/1P3KPP/7R b - - 0 26",
      "r5k1/pp3ppp/3n4/3R4/2p5/P2r1P1N/1P3KPP/7R w - - 1 27",
      "r5k1/pp3ppp/3n4/8/2p5/P2R1P1N/1P3KPP/7R b - - 0 27",
      "r5k1/pp3ppp/3n4/8/8/P2p1P1N/1P3KPP/7R w - - 0 28",
      "r5k1/pp3ppp/3n4/8/8/P2p1P1N/1P3KPP/3R4 b - - 1 28",
      "r5k1/pp3ppp/8/8/2n5/P2p1P1N/1P3KPP/3R4 w - - 2 29",
      "r5k1/pp3ppp/8/8/2n5/P2R1P1N/1P3KPP/8 b - - 0 29",
      "r5k1/pp3ppp/8/8/8/P2R1P1N/1n3KPP/8 w - - 0 30",
      "r5k1/pp3ppp/8/8/8/PR3P1N/1n3KPP/8 b - - 1 30",
      "r5k1/pp3ppp/8/8/2n5/PR3P1N/5KPP/8 w - - 2 31",
      "r5k1/pR3ppp/8/8/2n5/P4P1N/5KPP/8 b - - 0 31",
      "r5k1/pR3ppp/8/8/8/n4P1N/5KPP/8 w - - 0 32",
      "r5k1/pR3ppp/8/6N1/8/n4P2/5KPP/8 b - - 1 32",
      "r5k1/1R3ppp/8/p5N1/8/n4P2/5KPP/8 w - - 0 33",
      "r5k1/1R3Npp/8/p7/8/n4P2/5KPP/8 b - - 0 33",
      "r5k1/1R3Npp/8/8/p7/n4P2/5KPP/8 w - - 0 34",
      "r5k1/1R4pp/3N4/8/p7/n4P2/5KPP/8 b - - 1 34",
      "r5k1/1R4pp/3N4/8/p7/5P2/2n2KPP/8 w - - 2 35",
      "r5k1/6pp/3N4/8/p7/5P2/1Rn2KPP/8 b - - 3 35",
      "r5k1/6pp/3N4/8/8/p4P2/1Rn2KPP/8 w - - 0 36",
      "r5k1/6pp/3N4/8/8/p4P2/2R2KPP/8 b - - 0 36",
      "r5k1/6pp/3N4/8/8/5P2/p1R2KPP/8 w - - 0 37",
      "r5k1/6pp/3N4/8/8/5P2/R4KPP/8 b - - 0 37",
      "6k1/6pp/3N4/8/8/5P2/r4KPP/8 w - - 0 38",
      "6k1/6pp/3N4/8/8/5PK1/r5PP/8 b - - 1 38",
      "5k2/6pp/3N4/8/8/5PK1/r5PP/8 w - - 2 39",
      "5k2/6pp/3N4/8/7P/5PK1/r5P1/8 b - - 0 39",
      "8/4k1pp/3N4/8/7P/5PK1/r5P1/8 w - - 1 40",
      "8/4k1pp/8/8/4N2P/5PK1/r5P1/8 b - - 2 40",
      "8/4k1p1/7p/8/4N2P/5PK1/r5P1/8 w - - 0 41",
      "8/4k1p1/7p/8/7P/5PK1/r4NP1/8 b - - 1 41",
      "8/6p1/4k2p/8/7P/5PK1/r4NP1/8 w - - 2 42",
      "8/6p1/4k2p/8/7P/3N1PK1/r5P1/8 b - - 3 42",
      "8/6p1/7p/5k2/7P/3N1PK1/r5P1/8 w - - 4 43",
      "8/6p1/7p/5k2/5N1P/5PK1/r5P1/8 b - - 5 43",
      "8/6p1/7p/5k2/r4N1P/5PK1/6P1/8 w - - 6 44",
      "8/6p1/7p/5k2/r6P/3N1PK1/6P1/8 b - - 7 44",
      "8/6p1/7p/5k2/2r4P/3N1PK1/6P1/8 w - - 8 45",
      "8/6p1/7p/5k2/2r4P/5PK1/5NP1/8 b - - 9 45",
      "8/6p1/2r4p/5k2/7P/5PK1/5NP1/8 w - - 10 46",
      "8/6p1/2r4p/5k2/7P/5PKN/6P1/8 b - - 11 46",
      "8/6p1/2r4p/4k3/7P/5PKN/6P1/8 w - - 12 47",
      "8/6p1/2r4p/4k2P/8/5PKN/6P1/8 b - - 0 47",
      "8/6p1/7p/4k2P/8/5PKN/2r3P1/8 w - - 1 48",
      "8/6p1/7p/4k2P/5N2/5PK1/2r3P1/8 b - - 2 48",
      "8/6p1/7p/4k2P/5N2/5PK1/3r2P1/8 w - - 3 49",
      "8/6p1/7p/4k2P/8/5PKN/3r2P1/8 b - - 4 49",
      "8/6p1/7p/7P/3k4/5PKN/3r2P1/8 w - - 5 50",
      "8/6p1/7p/7P/3k1N2/5PK1/3r2P1/8 b - - 6 50",
      "8/6p1/7p/7P/5N2/4kPK1/3r2P1/8 w - - 7 51",
      "8/6p1/4N2p/7P/8/4kPK1/3r2P1/8 b - - 8 51",
      "8/6p1/4N2p/3r3P/8/4kPK1/6P1/8 w - - 9 52",
      "8/6p1/4N2p/3r3P/5P2/4k1K1/6P1/8 b - - 0 52",
      "8/6p1/4N2p/5r1P/5P2/4k1K1/6P1/8 w - - 1 53",
      "8/6p1/4N2p/5r1P/5PK1/4k3/6P1/8 b - - 2 53",
      "8/6p1/4Nr1p/7P/5PK1/4k3/6P1/8 w - - 3 54",
      "8/6p1/4Nr1p/5P1P/6K1/4k3/6P1/8 b - - 0 54",
      "8/5rp1/4N2p/5P1P/6K1/4k3/6P1/8 w - - 1 55",
      "8/5rp1/4N2p/5P1P/6K1/4k1P1/8/8 b - - 0 55",
      "8/5rp1/4N2p/5P1P/4k1K1/6P1/8/8 w - - 1 56",
      "8/5rp1/7p/2N2P1P/4k1K1/6P1/8/8 b - - 2 56",
      "8/5rp1/7p/2N2P1P/3k2K1/6P1/8/8 w - - 3 57",
      "8/5rp1/7p/5P1P/3k2K1/1N4P1/8/8 b - - 4 57",
      "8/5rp1/7p/4kP1P/6K1/1N4P1/8/8 w - - 5 58",
    ]
    for (index, history) in chess.getMoveHistory().enumerated() {
      XCTAssertEqual(history.fen, fens5[index], "Alekhine(g6): FEN move (index)")
    }

    pgn = pgns.removeFirst()
    chess = try pgn.validate()
    XCTAssertEqual(chess.getTag("Event")?.value, "London", "Alekhine(g7): event")
    XCTAssertEqual(chess.getTag("White")?.value, "Alexander Alekhine", "Alekhine(g7): white")
    XCTAssertEqual(chess.getTag("Black")?.value, "Savielly Tartakower", "Alekhine(g7): black")
    XCTAssertEqual(chess.getMoveCount(), 32, "Alekhine(g7): move count")
    XCTAssertEqual(
      chess.getMoveHistory().map { $0.pcn }.joined(separator: ","),
      "d2d4,g8f6,c2c4,e7e5,d4e5,f6e4,b1d2,e4c5,g1f3,b8c6,g2g3,d8e7,f1g2,g7g6,d2b1,c6e5,e1g1,e5f3,e2f3,f8g7,f1e1,c5e6,b1c3,e8g8,c3d5,e7d8,f3f4,c7c6,d5c3,d7d6,c1e3,d8c7,a1c1,c8d7,d1d2,a8d8,e1d1,d7c8,c3e4,e6c5,e4d6,c5a4,c4c5,a4b2,d1e1,b7b5,c5b6,c7d6,d2d6,d8d6,b6a7,c8b7,e3c5,d6d8,c5f8,g8f8,g2c6,b7c6,c1c6,d8a8,c6b6,a8a7,b6b8",
      "Alekhine(g7): PCN move history"
    )
    let fens6 = [
      "rnbqkbnr/pppppppp/8/8/3P4/8/PPP1PPPP/RNBQKBNR b KQkq - 0 1",
      "rnbqkb1r/pppppppp/5n2/8/3P4/8/PPP1PPPP/RNBQKBNR w KQkq - 1 2",
      "rnbqkb1r/pppppppp/5n2/8/2PP4/8/PP2PPPP/RNBQKBNR b KQkq - 0 2",
      "rnbqkb1r/pppp1ppp/5n2/4p3/2PP4/8/PP2PPPP/RNBQKBNR w KQkq - 0 3",
      "rnbqkb1r/pppp1ppp/5n2/4P3/2P5/8/PP2PPPP/RNBQKBNR b KQkq - 0 3",
      "rnbqkb1r/pppp1ppp/8/4P3/2P1n3/8/PP2PPPP/RNBQKBNR w KQkq - 1 4",
      "rnbqkb1r/pppp1ppp/8/4P3/2P1n3/8/PP1NPPPP/R1BQKBNR b KQkq - 2 4",
      "rnbqkb1r/pppp1ppp/8/2n1P3/2P5/8/PP1NPPPP/R1BQKBNR w KQkq - 3 5",
      "rnbqkb1r/pppp1ppp/8/2n1P3/2P5/5N2/PP1NPPPP/R1BQKB1R b KQkq - 4 5",
      "r1bqkb1r/pppp1ppp/2n5/2n1P3/2P5/5N2/PP1NPPPP/R1BQKB1R w KQkq - 5 6",
      "r1bqkb1r/pppp1ppp/2n5/2n1P3/2P5/5NP1/PP1NPP1P/R1BQKB1R b KQkq - 0 6",
      "r1b1kb1r/ppppqppp/2n5/2n1P3/2P5/5NP1/PP1NPP1P/R1BQKB1R w KQkq - 1 7",
      "r1b1kb1r/ppppqppp/2n5/2n1P3/2P5/5NP1/PP1NPPBP/R1BQK2R b KQkq - 2 7",
      "r1b1kb1r/ppppqp1p/2n3p1/2n1P3/2P5/5NP1/PP1NPPBP/R1BQK2R w KQkq - 0 8",
      "r1b1kb1r/ppppqp1p/2n3p1/2n1P3/2P5/5NP1/PP2PPBP/RNBQK2R b KQkq - 1 8",
      "r1b1kb1r/ppppqp1p/6p1/2n1n3/2P5/5NP1/PP2PPBP/RNBQK2R w KQkq - 0 9",
      "r1b1kb1r/ppppqp1p/6p1/2n1n3/2P5/5NP1/PP2PPBP/RNBQ1RK1 b kq - 1 9",
      "r1b1kb1r/ppppqp1p/6p1/2n5/2P5/5nP1/PP2PPBP/RNBQ1RK1 w kq - 0 10",
      "r1b1kb1r/ppppqp1p/6p1/2n5/2P5/5PP1/PP3PBP/RNBQ1RK1 b kq - 0 10",
      "r1b1k2r/ppppqpbp/6p1/2n5/2P5/5PP1/PP3PBP/RNBQ1RK1 w kq - 1 11",
      "r1b1k2r/ppppqpbp/6p1/2n5/2P5/5PP1/PP3PBP/RNBQR1K1 b kq - 2 11",
      "r1b1k2r/ppppqpbp/4n1p1/8/2P5/5PP1/PP3PBP/RNBQR1K1 w kq - 3 12",
      "r1b1k2r/ppppqpbp/4n1p1/8/2P5/2N2PP1/PP3PBP/R1BQR1K1 b kq - 4 12",
      "r1b2rk1/ppppqpbp/4n1p1/8/2P5/2N2PP1/PP3PBP/R1BQR1K1 w - - 5 13",
      "r1b2rk1/ppppqpbp/4n1p1/3N4/2P5/5PP1/PP3PBP/R1BQR1K1 b - - 6 13",
      "r1bq1rk1/pppp1pbp/4n1p1/3N4/2P5/5PP1/PP3PBP/R1BQR1K1 w - - 7 14",
      "r1bq1rk1/pppp1pbp/4n1p1/3N4/2P2P2/6P1/PP3PBP/R1BQR1K1 b - - 0 14",
      "r1bq1rk1/pp1p1pbp/2p1n1p1/3N4/2P2P2/6P1/PP3PBP/R1BQR1K1 w - - 0 15",
      "r1bq1rk1/pp1p1pbp/2p1n1p1/8/2P2P2/2N3P1/PP3PBP/R1BQR1K1 b - - 1 15",
      "r1bq1rk1/pp3pbp/2ppn1p1/8/2P2P2/2N3P1/PP3PBP/R1BQR1K1 w - - 0 16",
      "r1bq1rk1/pp3pbp/2ppn1p1/8/2P2P2/2N1B1P1/PP3PBP/R2QR1K1 b - - 1 16",
      "r1b2rk1/ppq2pbp/2ppn1p1/8/2P2P2/2N1B1P1/PP3PBP/R2QR1K1 w - - 2 17",
      "r1b2rk1/ppq2pbp/2ppn1p1/8/2P2P2/2N1B1P1/PP3PBP/2RQR1K1 b - - 3 17",
      "r4rk1/ppqb1pbp/2ppn1p1/8/2P2P2/2N1B1P1/PP3PBP/2RQR1K1 w - - 4 18",
      "r4rk1/ppqb1pbp/2ppn1p1/8/2P2P2/2N1B1P1/PP1Q1PBP/2R1R1K1 b - - 5 18",
      "3r1rk1/ppqb1pbp/2ppn1p1/8/2P2P2/2N1B1P1/PP1Q1PBP/2R1R1K1 w - - 6 19",
      "3r1rk1/ppqb1pbp/2ppn1p1/8/2P2P2/2N1B1P1/PP1Q1PBP/2RR2K1 b - - 7 19",
      "2br1rk1/ppq2pbp/2ppn1p1/8/2P2P2/2N1B1P1/PP1Q1PBP/2RR2K1 w - - 8 20",
      "2br1rk1/ppq2pbp/2ppn1p1/8/2P1NP2/4B1P1/PP1Q1PBP/2RR2K1 b - - 9 20",
      "2br1rk1/ppq2pbp/2pp2p1/2n5/2P1NP2/4B1P1/PP1Q1PBP/2RR2K1 w - - 10 21",
      "2br1rk1/ppq2pbp/2pN2p1/2n5/2P2P2/4B1P1/PP1Q1PBP/2RR2K1 b - - 0 21",
      "2br1rk1/ppq2pbp/2pN2p1/8/n1P2P2/4B1P1/PP1Q1PBP/2RR2K1 w - - 1 22",
      "2br1rk1/ppq2pbp/2pN2p1/2P5/n4P2/4B1P1/PP1Q1PBP/2RR2K1 b - - 0 22",
      "2br1rk1/ppq2pbp/2pN2p1/2P5/5P2/4B1P1/Pn1Q1PBP/2RR2K1 w - - 0 23",
      "2br1rk1/ppq2pbp/2pN2p1/2P5/5P2/4B1P1/Pn1Q1PBP/2R1R1K1 b - - 1 23",
      "2br1rk1/p1q2pbp/2pN2p1/1pP5/5P2/4B1P1/Pn1Q1PBP/2R1R1K1 w - b6 0 24",
      "2br1rk1/p1q2pbp/1PpN2p1/8/5P2/4B1P1/Pn1Q1PBP/2R1R1K1 b - - 0 24",
      "2br1rk1/p4pbp/1Ppq2p1/8/5P2/4B1P1/Pn1Q1PBP/2R1R1K1 w - - 0 25",
      "2br1rk1/p4pbp/1PpQ2p1/8/5P2/4B1P1/Pn3PBP/2R1R1K1 b - - 0 25",
      "2b2rk1/p4pbp/1Ppr2p1/8/5P2/4B1P1/Pn3PBP/2R1R1K1 w - - 0 26",
      "2b2rk1/P4pbp/2pr2p1/8/5P2/4B1P1/Pn3PBP/2R1R1K1 b - - 0 26",
      "5rk1/Pb3pbp/2pr2p1/8/5P2/4B1P1/Pn3PBP/2R1R1K1 w - - 1 27",
      "5rk1/Pb3pbp/2pr2p1/2B5/5P2/6P1/Pn3PBP/2R1R1K1 b - - 2 27",
      "3r1rk1/Pb3pbp/2p3p1/2B5/5P2/6P1/Pn3PBP/2R1R1K1 w - - 3 28",
      "3r1Bk1/Pb3pbp/2p3p1/8/5P2/6P1/Pn3PBP/2R1R1K1 b - - 0 28",
      "3r1k2/Pb3pbp/2p3p1/8/5P2/6P1/Pn3PBP/2R1R1K1 w - - 0 29",
      "3r1k2/Pb3pbp/2B3p1/8/5P2/6P1/Pn3P1P/2R1R1K1 b - - 0 29",
      "3r1k2/P4pbp/2b3p1/8/5P2/6P1/Pn3P1P/2R1R1K1 w - - 0 30",
      "3r1k2/P4pbp/2R3p1/8/5P2/6P1/Pn3P1P/4R1K1 b - - 0 30",
      "r4k2/P4pbp/2R3p1/8/5P2/6P1/Pn3P1P/4R1K1 w - - 1 31",
      "r4k2/P4pbp/1R4p1/8/5P2/6P1/Pn3P1P/4R1K1 b - - 2 31",
      "5k2/r4pbp/1R4p1/8/5P2/6P1/Pn3P1P/4R1K1 w - - 0 32",
      "1R3k2/r4pbp/6p1/8/5P2/6P1/Pn3P1P/4R1K1 b - - 1 32",
    ]
    for (index, history) in chess.getMoveHistory().enumerated() {
      XCTAssertEqual(history.fen, fens6[index], "Alekhine(g7): FEN move (index)")
    }

    pgn = pgns.removeFirst()
    chess = try pgn.validate()
    XCTAssertEqual(chess.getTag("Event")?.value, "Simul, 50b", "Alekhine(g8): event")
    XCTAssertEqual(chess.getTag("White")?.value, "Alexander Alekhine", "Alekhine(g8): white")
    XCTAssertEqual(chess.getTag("Black")?.value, "Hoelscher", "Alekhine(g8): black")
    XCTAssertEqual(chess.getMoveCount(), 21, "Alekhine(g8): move count")
    XCTAssertEqual(
      chess.getMoveHistory().map { $0.pcn }.joined(separator: ","),
      "e2e4,e7e5,g1f3,b8c6,f1b5,d7d6,d2d4,e5d4,d1d4,c8d7,b5c6,d7c6,c1g5,g8f6,b1c3,f8e7,e1c1,e8g8,h2h4,h7h6,c3d5,h6g5,d5e7,d8e7,h4g5,f6e4,h1h5,e7e6,d1h1,f7f5,f3e5,d6e5,g5g6,e6g6,d4c4,c6d5,c4d5,g6e6,d5e6,f8f7,h5h8",
      "Alekhine(g8): PCN move history"
    )
    let fens7 = [
      "rnbqkbnr/pppppppp/8/8/4P3/8/PPPP1PPP/RNBQKBNR b KQkq - 0 1",
      "rnbqkbnr/pppp1ppp/8/4p3/4P3/8/PPPP1PPP/RNBQKBNR w KQkq - 0 2",
      "rnbqkbnr/pppp1ppp/8/4p3/4P3/5N2/PPPP1PPP/RNBQKB1R b KQkq - 1 2",
      "r1bqkbnr/pppp1ppp/2n5/4p3/4P3/5N2/PPPP1PPP/RNBQKB1R w KQkq - 2 3",
      "r1bqkbnr/pppp1ppp/2n5/1B2p3/4P3/5N2/PPPP1PPP/RNBQK2R b KQkq - 3 3",
      "r1bqkbnr/ppp2ppp/2np4/1B2p3/4P3/5N2/PPPP1PPP/RNBQK2R w KQkq - 0 4",
      "r1bqkbnr/ppp2ppp/2np4/1B2p3/3PP3/5N2/PPP2PPP/RNBQK2R b KQkq - 0 4",
      "r1bqkbnr/ppp2ppp/2np4/1B6/3pP3/5N2/PPP2PPP/RNBQK2R w KQkq - 0 5",
      "r1bqkbnr/ppp2ppp/2np4/1B6/3QP3/5N2/PPP2PPP/RNB1K2R b KQkq - 0 5",
      "r2qkbnr/pppb1ppp/2np4/1B6/3QP3/5N2/PPP2PPP/RNB1K2R w KQkq - 1 6",
      "r2qkbnr/pppb1ppp/2Bp4/8/3QP3/5N2/PPP2PPP/RNB1K2R b KQkq - 0 6",
      "r2qkbnr/ppp2ppp/2bp4/8/3QP3/5N2/PPP2PPP/RNB1K2R w KQkq - 0 7",
      "r2qkbnr/ppp2ppp/2bp4/6B1/3QP3/5N2/PPP2PPP/RN2K2R b KQkq - 1 7",
      "r2qkb1r/ppp2ppp/2bp1n2/6B1/3QP3/5N2/PPP2PPP/RN2K2R w KQkq - 2 8",
      "r2qkb1r/ppp2ppp/2bp1n2/6B1/3QP3/2N2N2/PPP2PPP/R3K2R b KQkq - 3 8",
      "r2qk2r/ppp1bppp/2bp1n2/6B1/3QP3/2N2N2/PPP2PPP/R3K2R w KQkq - 4 9",
      "r2qk2r/ppp1bppp/2bp1n2/6B1/3QP3/2N2N2/PPP2PPP/2KR3R b kq - 5 9",
      "r2q1rk1/ppp1bppp/2bp1n2/6B1/3QP3/2N2N2/PPP2PPP/2KR3R w - - 6 10",
      "r2q1rk1/ppp1bppp/2bp1n2/6B1/3QP2P/2N2N2/PPP2PP1/2KR3R b - - 0 10",
      "r2q1rk1/ppp1bpp1/2bp1n1p/6B1/3QP2P/2N2N2/PPP2PP1/2KR3R w - - 0 11",
      "r2q1rk1/ppp1bpp1/2bp1n1p/3N2B1/3QP2P/5N2/PPP2PP1/2KR3R b - - 1 11",
      "r2q1rk1/ppp1bpp1/2bp1n2/3N2p1/3QP2P/5N2/PPP2PP1/2KR3R w - - 0 12",
      "r2q1rk1/ppp1Npp1/2bp1n2/6p1/3QP2P/5N2/PPP2PP1/2KR3R b - - 0 12",
      "r4rk1/ppp1qpp1/2bp1n2/6p1/3QP2P/5N2/PPP2PP1/2KR3R w - - 0 13",
      "r4rk1/ppp1qpp1/2bp1n2/6P1/3QP3/5N2/PPP2PP1/2KR3R b - - 0 13",
      "r4rk1/ppp1qpp1/2bp4/6P1/3Qn3/5N2/PPP2PP1/2KR3R w - - 0 14",
      "r4rk1/ppp1qpp1/2bp4/6PR/3Qn3/5N2/PPP2PP1/2KR4 b - - 1 14",
      "r4rk1/ppp2pp1/2bpq3/6PR/3Qn3/5N2/PPP2PP1/2KR4 w - - 2 15",
      "r4rk1/ppp2pp1/2bpq3/6PR/3Qn3/5N2/PPP2PP1/2K4R b - - 3 15",
      "r4rk1/ppp3p1/2bpq3/5pPR/3Qn3/5N2/PPP2PP1/2K4R w - f6 0 16",
      "r4rk1/ppp3p1/2bpq3/4NpPR/3Qn3/8/PPP2PP1/2K4R b - - 1 16",
      "r4rk1/ppp3p1/2b1q3/4ppPR/3Qn3/8/PPP2PP1/2K4R w - - 0 17",
      "r4rk1/ppp3p1/2b1q1P1/4pp1R/3Qn3/8/PPP2PP1/2K4R b - - 0 17",
      "r4rk1/ppp3p1/2b3q1/4pp1R/3Qn3/8/PPP2PP1/2K4R w - - 0 18",
      "r4rk1/ppp3p1/2b3q1/4pp1R/2Q1n3/8/PPP2PP1/2K4R b - - 1 18",
      "r4rk1/ppp3p1/6q1/3bpp1R/2Q1n3/8/PPP2PP1/2K4R w - - 2 19",
      "r4rk1/ppp3p1/6q1/3Qpp1R/4n3/8/PPP2PP1/2K4R b - - 0 19",
      "r4rk1/ppp3p1/4q3/3Qpp1R/4n3/8/PPP2PP1/2K4R w - - 1 20",
      "r4rk1/ppp3p1/4Q3/4pp1R/4n3/8/PPP2PP1/2K4R b - - 0 20",
      "r5k1/ppp2rp1/4Q3/4pp1R/4n3/8/PPP2PP1/2K4R w - - 1 21",
      "r5kR/ppp2rp1/4Q3/4pp2/4n3/8/PPP2PP1/2K4R b - - 2 21",
    ]
    for (index, history) in chess.getMoveHistory().enumerated() {
      XCTAssertEqual(history.fen, fens7[index], "Alekhine(g8): FEN move (index)")
    }

    pgn = pgns.removeFirst()
    chess = try pgn.validate()
    XCTAssertEqual(chess.getTag("Event")?.value, "Baden-Baden", "Alekhine(g9): event")
    XCTAssertEqual(chess.getTag("White")?.value, "Richard Reti", "Alekhine(g9): white")
    XCTAssertEqual(chess.getTag("Black")?.value, "Alexander Alekhine", "Alekhine(g9): black")
    XCTAssertEqual(chess.getMoveCount(), 43, "Alekhine(g9): move count")
    XCTAssertEqual(
      chess.getMoveHistory().map { $0.pcn }.joined(separator: ","),
      "g2g3,e7e5,g1f3,e5e4,f3d4,d7d5,d2d3,e4d3,d1d3,g8f6,f1g2,f8b4,c1d2,b4d2,b1d2,e8g8,c2c4,b8a6,c4d5,a6b4,d3c4,b4d5,d2b3,c7c6,e1g1,f8e8,f1d1,c8g4,d1d2,d8c8,b3c5,g4h3,g2f3,h3g4,f3g2,g4h3,g2f3,h3g4,f3h1,h7h5,b2b4,a7a6,a1c1,h5h4,a2a4,h4g3,h2g3,c8c7,b4b5,a6b5,a4b5,e8e3,d4f3,c6b5,c4b5,d5c3,b5b7,c7b7,c5b7,c3e2,g1h2,f6e4,c1c4,e4f2,h1g2,g4e6,c4c2,f2g4,h2h3,g4e5,h3h2,e3f3,d2e2,e5g4,h2h3,g4e3,h3h2,e3c2,g2f3,c2d4,e2f2,d4f3,f2f3,e6d5",
      "Alekhine(g9): PCN move history"
    )
    let fens8 = [
      "rnbqkbnr/pppppppp/8/8/8/6P1/PPPPPP1P/RNBQKBNR b KQkq - 0 1",
      "rnbqkbnr/pppp1ppp/8/4p3/8/6P1/PPPPPP1P/RNBQKBNR w KQkq - 0 2",
      "rnbqkbnr/pppp1ppp/8/4p3/8/5NP1/PPPPPP1P/RNBQKB1R b KQkq - 1 2",
      "rnbqkbnr/pppp1ppp/8/8/4p3/5NP1/PPPPPP1P/RNBQKB1R w KQkq - 0 3",
      "rnbqkbnr/pppp1ppp/8/8/3Np3/6P1/PPPPPP1P/RNBQKB1R b KQkq - 1 3",
      "rnbqkbnr/ppp2ppp/8/3p4/3Np3/6P1/PPPPPP1P/RNBQKB1R w KQkq - 0 4",
      "rnbqkbnr/ppp2ppp/8/3p4/3Np3/3P2P1/PPP1PP1P/RNBQKB1R b KQkq - 0 4",
      "rnbqkbnr/ppp2ppp/8/3p4/3N4/3p2P1/PPP1PP1P/RNBQKB1R w KQkq - 0 5",
      "rnbqkbnr/ppp2ppp/8/3p4/3N4/3Q2P1/PPP1PP1P/RNB1KB1R b KQkq - 0 5",
      "rnbqkb1r/ppp2ppp/5n2/3p4/3N4/3Q2P1/PPP1PP1P/RNB1KB1R w KQkq - 1 6",
      "rnbqkb1r/ppp2ppp/5n2/3p4/3N4/3Q2P1/PPP1PPBP/RNB1K2R b KQkq - 2 6",
      "rnbqk2r/ppp2ppp/5n2/3p4/1b1N4/3Q2P1/PPP1PPBP/RNB1K2R w KQkq - 3 7",
      "rnbqk2r/ppp2ppp/5n2/3p4/1b1N4/3Q2P1/PPPBPPBP/RN2K2R b KQkq - 4 7",
      "rnbqk2r/ppp2ppp/5n2/3p4/3N4/3Q2P1/PPPbPPBP/RN2K2R w KQkq - 0 8",
      "rnbqk2r/ppp2ppp/5n2/3p4/3N4/3Q2P1/PPPNPPBP/R3K2R b KQkq - 0 8",
      "rnbq1rk1/ppp2ppp/5n2/3p4/3N4/3Q2P1/PPPNPPBP/R3K2R w KQ - 1 9",
      "rnbq1rk1/ppp2ppp/5n2/3p4/2PN4/3Q2P1/PP1NPPBP/R3K2R b KQ - 0 9",
      "r1bq1rk1/ppp2ppp/n4n2/3p4/2PN4/3Q2P1/PP1NPPBP/R3K2R w KQ - 1 10",
      "r1bq1rk1/ppp2ppp/n4n2/3P4/3N4/3Q2P1/PP1NPPBP/R3K2R b KQ - 0 10",
      "r1bq1rk1/ppp2ppp/5n2/3P4/1n1N4/3Q2P1/PP1NPPBP/R3K2R w KQ - 1 11",
      "r1bq1rk1/ppp2ppp/5n2/3P4/1nQN4/6P1/PP1NPPBP/R3K2R b KQ - 2 11",
      "r1bq1rk1/ppp2ppp/5n2/3n4/2QN4/6P1/PP1NPPBP/R3K2R w KQ - 0 12",
      "r1bq1rk1/ppp2ppp/5n2/3n4/2QN4/1N4P1/PP2PPBP/R3K2R b KQ - 1 12",
      "r1bq1rk1/pp3ppp/2p2n2/3n4/2QN4/1N4P1/PP2PPBP/R3K2R w KQ - 0 13",
      "r1bq1rk1/pp3ppp/2p2n2/3n4/2QN4/1N4P1/PP2PPBP/R4RK1 b - - 1 13",
      "r1bqr1k1/pp3ppp/2p2n2/3n4/2QN4/1N4P1/PP2PPBP/R4RK1 w - - 2 14",
      "r1bqr1k1/pp3ppp/2p2n2/3n4/2QN4/1N4P1/PP2PPBP/R2R2K1 b - - 3 14",
      "r2qr1k1/pp3ppp/2p2n2/3n4/2QN2b1/1N4P1/PP2PPBP/R2R2K1 w - - 4 15",
      "r2qr1k1/pp3ppp/2p2n2/3n4/2QN2b1/1N4P1/PP1RPPBP/R5K1 b - - 5 15",
      "r1q1r1k1/pp3ppp/2p2n2/3n4/2QN2b1/1N4P1/PP1RPPBP/R5K1 w - - 6 16",
      "r1q1r1k1/pp3ppp/2p2n2/2Nn4/2QN2b1/6P1/PP1RPPBP/R5K1 b - - 7 16",
      "r1q1r1k1/pp3ppp/2p2n2/2Nn4/2QN4/6Pb/PP1RPPBP/R5K1 w - - 8 17",
      "r1q1r1k1/pp3ppp/2p2n2/2Nn4/2QN4/5BPb/PP1RPP1P/R5K1 b - - 9 17",
      "r1q1r1k1/pp3ppp/2p2n2/2Nn4/2QN2b1/5BP1/PP1RPP1P/R5K1 w - - 10 18",
      "r1q1r1k1/pp3ppp/2p2n2/2Nn4/2QN2b1/6P1/PP1RPPBP/R5K1 b - - 11 18",
      "r1q1r1k1/pp3ppp/2p2n2/2Nn4/2QN4/6Pb/PP1RPPBP/R5K1 w - - 12 19",
      "r1q1r1k1/pp3ppp/2p2n2/2Nn4/2QN4/5BPb/PP1RPP1P/R5K1 b - - 13 19",
      "r1q1r1k1/pp3ppp/2p2n2/2Nn4/2QN2b1/5BP1/PP1RPP1P/R5K1 w - - 14 20",
      "r1q1r1k1/pp3ppp/2p2n2/2Nn4/2QN2b1/6P1/PP1RPP1P/R5KB b - - 15 20",
      "r1q1r1k1/pp3pp1/2p2n2/2Nn3p/2QN2b1/6P1/PP1RPP1P/R5KB w - - 0 21",
      "r1q1r1k1/pp3pp1/2p2n2/2Nn3p/1PQN2b1/6P1/P2RPP1P/R5KB b - - 0 21",
      "r1q1r1k1/1p3pp1/p1p2n2/2Nn3p/1PQN2b1/6P1/P2RPP1P/R5KB w - - 0 22",
      "r1q1r1k1/1p3pp1/p1p2n2/2Nn3p/1PQN2b1/6P1/P2RPP1P/2R3KB b - - 1 22",
      "r1q1r1k1/1p3pp1/p1p2n2/2Nn4/1PQN2bp/6P1/P2RPP1P/2R3KB w - - 0 23",
      "r1q1r1k1/1p3pp1/p1p2n2/2Nn4/PPQN2bp/6P1/3RPP1P/2R3KB b - - 0 23",
      "r1q1r1k1/1p3pp1/p1p2n2/2Nn4/PPQN2b1/6p1/3RPP1P/2R3KB w - - 0 24",
      "r1q1r1k1/1p3pp1/p1p2n2/2Nn4/PPQN2b1/6P1/3RPP2/2R3KB b - - 0 24",
      "r3r1k1/1pq2pp1/p1p2n2/2Nn4/PPQN2b1/6P1/3RPP2/2R3KB w - - 1 25",
      "r3r1k1/1pq2pp1/p1p2n2/1PNn4/P1QN2b1/6P1/3RPP2/2R3KB b - - 0 25",
      "r3r1k1/1pq2pp1/2p2n2/1pNn4/P1QN2b1/6P1/3RPP2/2R3KB w - - 0 26",
      "r3r1k1/1pq2pp1/2p2n2/1PNn4/2QN2b1/6P1/3RPP2/2R3KB b - - 0 26",
      "r5k1/1pq2pp1/2p2n2/1PNn4/2QN2b1/4r1P1/3RPP2/2R3KB w - - 1 27",
      "r5k1/1pq2pp1/2p2n2/1PNn4/2Q3b1/4rNP1/3RPP2/2R3KB b - - 2 27",
      "r5k1/1pq2pp1/5n2/1pNn4/2Q3b1/4rNP1/3RPP2/2R3KB w - - 0 28",
      "r5k1/1pq2pp1/5n2/1QNn4/6b1/4rNP1/3RPP2/2R3KB b - - 0 28",
      "r5k1/1pq2pp1/5n2/1QN5/6b1/2n1rNP1/3RPP2/2R3KB w - - 1 29",
      "r5k1/1Qq2pp1/5n2/2N5/6b1/2n1rNP1/3RPP2/2R3KB b - - 0 29",
      "r5k1/1q3pp1/5n2/2N5/6b1/2n1rNP1/3RPP2/2R3KB w - - 0 30",
      "r5k1/1N3pp1/5n2/8/6b1/2n1rNP1/3RPP2/2R3KB b - - 0 30",
      "r5k1/1N3pp1/5n2/8/6b1/4rNP1/3RnP2/2R3KB w - - 0 31",
      "r5k1/1N3pp1/5n2/8/6b1/4rNP1/3RnP1K/2R4B b - - 1 31",
      "r5k1/1N3pp1/8/8/4n1b1/4rNP1/3RnP1K/2R4B w - - 2 32",
      "r5k1/1N3pp1/8/8/2R1n1b1/4rNP1/3RnP1K/7B b - - 3 32",
      "r5k1/1N3pp1/8/8/2R3b1/4rNP1/3Rnn1K/7B w - - 0 33",
      "r5k1/1N3pp1/8/8/2R3b1/4rNP1/3RnnBK/8 b - - 1 33",
      "r5k1/1N3pp1/4b3/8/2R5/4rNP1/3RnnBK/8 w - - 2 34",
      "r5k1/1N3pp1/4b3/8/8/4rNP1/2RRnnBK/8 b - - 3 34",
      "r5k1/1N3pp1/4b3/8/6n1/4rNP1/2RRn1BK/8 w - - 4 35",
      "r5k1/1N3pp1/4b3/8/6n1/4rNPK/2RRn1B1/8 b - - 5 35",
      "r5k1/1N3pp1/4b3/4n3/8/4rNPK/2RRn1B1/8 w - - 6 36",
      "r5k1/1N3pp1/4b3/4n3/8/4rNP1/2RRn1BK/8 b - - 7 36",
      "r5k1/1N3pp1/4b3/4n3/8/5rP1/2RRn1BK/8 w - - 0 37",
      "r5k1/1N3pp1/4b3/4n3/8/5rP1/2R1R1BK/8 b - - 0 37",
      "r5k1/1N3pp1/4b3/8/6n1/5rP1/2R1R1BK/8 w - - 1 38",
      "r5k1/1N3pp1/4b3/8/6n1/5rPK/2R1R1B1/8 b - - 2 38",
      "r5k1/1N3pp1/4b3/8/8/4nrPK/2R1R1B1/8 w - - 3 39",
      "r5k1/1N3pp1/4b3/8/8/4nrP1/2R1R1BK/8 b - - 4 39",
      "r5k1/1N3pp1/4b3/8/8/5rP1/2n1R1BK/8 w - - 0 40",
      "r5k1/1N3pp1/4b3/8/8/5BP1/2n1R2K/8 b - - 0 40",
      "r5k1/1N3pp1/4b3/8/3n4/5BP1/4R2K/8 w - - 1 41",
      "r5k1/1N3pp1/4b3/8/3n4/5BP1/5R1K/8 b - - 2 41",
      "r5k1/1N3pp1/4b3/8/8/5nP1/5R1K/8 w - - 0 42",
      "r5k1/1N3pp1/4b3/8/8/5RP1/7K/8 b - - 0 42",
      "r5k1/1N3pp1/8/3b4/8/5RP1/7K/8 w - - 1 43",
    ]
    for (index, history) in chess.getMoveHistory().enumerated() {
      XCTAssertEqual(history.fen, fens8[index], "Alekhine(g9): FEN move (index)")
    }

    pgn = pgns.removeFirst()
    chess = try pgn.validate()
    XCTAssertEqual(chess.getTag("Event")?.value, "Bled", "Alekhine(g10): event")
    XCTAssertEqual(chess.getTag("White")?.value, "Vasja Pirc", "Alekhine(g10): white")
    XCTAssertEqual(chess.getTag("Black")?.value, "Alexander Alekhine", "Alekhine(g10): black")
    XCTAssertEqual(chess.getMoveCount(), 25, "Alekhine(g10): move count")
    XCTAssertEqual(
      chess.getMoveHistory().map { $0.pcn }.joined(separator: ","),
      "d2d4,d7d5,c2c4,e7e6,b1c3,c7c5,c4d5,c5d4,d1a4,c8d7,a4d4,e6d5,d4d5,b8c6,c1g5,g8f6,d5d2,h7h6,g5f6,d8f6,e2e3,e8c8,e1c1,d7g4,c3d5,d8d5,d2d5,f8a3,d5b3,g4d1,b3a3,f6f2,a3d3,d1g4,g1f3,g4f3,d3f5,c8b8,f5f3,f2e1,c1c2,h8c8,f3g3,c6e5,c2b3,e1d1,b3a3,c8c5",
      "Alekhine(g10): PCN move history"
    )
    let fens9 = [
      "rnbqkbnr/pppppppp/8/8/3P4/8/PPP1PPPP/RNBQKBNR b KQkq - 0 1",
      "rnbqkbnr/ppp1pppp/8/3p4/3P4/8/PPP1PPPP/RNBQKBNR w KQkq - 0 2",
      "rnbqkbnr/ppp1pppp/8/3p4/2PP4/8/PP2PPPP/RNBQKBNR b KQkq - 0 2",
      "rnbqkbnr/ppp2ppp/4p3/3p4/2PP4/8/PP2PPPP/RNBQKBNR w KQkq - 0 3",
      "rnbqkbnr/ppp2ppp/4p3/3p4/2PP4/2N5/PP2PPPP/R1BQKBNR b KQkq - 1 3",
      "rnbqkbnr/pp3ppp/4p3/2pp4/2PP4/2N5/PP2PPPP/R1BQKBNR w KQkq - 0 4",
      "rnbqkbnr/pp3ppp/4p3/2pP4/3P4/2N5/PP2PPPP/R1BQKBNR b KQkq - 0 4",
      "rnbqkbnr/pp3ppp/4p3/3P4/3p4/2N5/PP2PPPP/R1BQKBNR w KQkq - 0 5",
      "rnbqkbnr/pp3ppp/4p3/3P4/Q2p4/2N5/PP2PPPP/R1B1KBNR b KQkq - 1 5",
      "rn1qkbnr/pp1b1ppp/4p3/3P4/Q2p4/2N5/PP2PPPP/R1B1KBNR w KQkq - 2 6",
      "rn1qkbnr/pp1b1ppp/4p3/3P4/3Q4/2N5/PP2PPPP/R1B1KBNR b KQkq - 0 6",
      "rn1qkbnr/pp1b1ppp/8/3p4/3Q4/2N5/PP2PPPP/R1B1KBNR w KQkq - 0 7",
      "rn1qkbnr/pp1b1ppp/8/3Q4/8/2N5/PP2PPPP/R1B1KBNR b KQkq - 0 7",
      "r2qkbnr/pp1b1ppp/2n5/3Q4/8/2N5/PP2PPPP/R1B1KBNR w KQkq - 1 8",
      "r2qkbnr/pp1b1ppp/2n5/3Q2B1/8/2N5/PP2PPPP/R3KBNR b KQkq - 2 8",
      "r2qkb1r/pp1b1ppp/2n2n2/3Q2B1/8/2N5/PP2PPPP/R3KBNR w KQkq - 3 9",
      "r2qkb1r/pp1b1ppp/2n2n2/6B1/8/2N5/PP1QPPPP/R3KBNR b KQkq - 4 9",
      "r2qkb1r/pp1b1pp1/2n2n1p/6B1/8/2N5/PP1QPPPP/R3KBNR w KQkq - 0 10",
      "r2qkb1r/pp1b1pp1/2n2B1p/8/8/2N5/PP1QPPPP/R3KBNR b KQkq - 0 10",
      "r3kb1r/pp1b1pp1/2n2q1p/8/8/2N5/PP1QPPPP/R3KBNR w KQkq - 0 11",
      "r3kb1r/pp1b1pp1/2n2q1p/8/8/2N1P3/PP1Q1PPP/R3KBNR b KQkq - 0 11",
      "2kr1b1r/pp1b1pp1/2n2q1p/8/8/2N1P3/PP1Q1PPP/R3KBNR w KQ - 1 12",
      "2kr1b1r/pp1b1pp1/2n2q1p/8/8/2N1P3/PP1Q1PPP/2KR1BNR b - - 2 12",
      "2kr1b1r/pp3pp1/2n2q1p/8/6b1/2N1P3/PP1Q1PPP/2KR1BNR w - - 3 13",
      "2kr1b1r/pp3pp1/2n2q1p/3N4/6b1/4P3/PP1Q1PPP/2KR1BNR b - - 4 13",
      "2k2b1r/pp3pp1/2n2q1p/3r4/6b1/4P3/PP1Q1PPP/2KR1BNR w - - 0 14",
      "2k2b1r/pp3pp1/2n2q1p/3Q4/6b1/4P3/PP3PPP/2KR1BNR b - - 0 14",
      "2k4r/pp3pp1/2n2q1p/3Q4/6b1/b3P3/PP3PPP/2KR1BNR w - - 1 15",
      "2k4r/pp3pp1/2n2q1p/8/6b1/bQ2P3/PP3PPP/2KR1BNR b - - 2 15",
      "2k4r/pp3pp1/2n2q1p/8/8/bQ2P3/PP3PPP/2Kb1BNR w - - 0 16",
      "2k4r/pp3pp1/2n2q1p/8/8/Q3P3/PP3PPP/2Kb1BNR b - - 0 16",
      "2k4r/pp3pp1/2n4p/8/8/Q3P3/PP3qPP/2Kb1BNR w - - 0 17",
      "2k4r/pp3pp1/2n4p/8/8/3QP3/PP3qPP/2Kb1BNR b - - 1 17",
      "2k4r/pp3pp1/2n4p/8/6b1/3QP3/PP3qPP/2K2BNR w - - 2 18",
      "2k4r/pp3pp1/2n4p/8/6b1/3QPN2/PP3qPP/2K2B1R b - - 3 18",
      "2k4r/pp3pp1/2n4p/8/8/3QPb2/PP3qPP/2K2B1R w - - 0 19",
      "2k4r/pp3pp1/2n4p/5Q2/8/4Pb2/PP3qPP/2K2B1R b - - 1 19",
      "1k5r/pp3pp1/2n4p/5Q2/8/4Pb2/PP3qPP/2K2B1R w - - 2 20",
      "1k5r/pp3pp1/2n4p/8/8/4PQ2/PP3qPP/2K2B1R b - - 0 20",
      "1k5r/pp3pp1/2n4p/8/8/4PQ2/PP4PP/2K1qB1R w - - 1 21",
      "1k5r/pp3pp1/2n4p/8/8/4PQ2/PPK3PP/4qB1R b - - 2 21",
      "1kr5/pp3pp1/2n4p/8/8/4PQ2/PPK3PP/4qB1R w - - 3 22",
      "1kr5/pp3pp1/2n4p/8/8/4P1Q1/PPK3PP/4qB1R b - - 4 22",
      "1kr5/pp3pp1/7p/4n3/8/4P1Q1/PPK3PP/4qB1R w - - 5 23",
      "1kr5/pp3pp1/7p/4n3/8/1K2P1Q1/PP4PP/4qB1R b - - 6 23",
      "1kr5/pp3pp1/7p/4n3/8/1K2P1Q1/PP4PP/3q1B1R w - - 7 24",
      "1kr5/pp3pp1/7p/4n3/8/K3P1Q1/PP4PP/3q1B1R b - - 8 24",
      "1k6/pp3pp1/7p/2r1n3/8/K3P1Q1/PP4PP/3q1B1R w - - 9 25",
    ]
    for (index, history) in chess.getMoveHistory().enumerated() {
      XCTAssertEqual(history.fen, fens9[index], "Alekhine(g10): FEN move (index)")
    }
  }

  func testCapablanca() throws {
    let text = try String(contentsOfFile: "./Tests/PGN/Capablanca.pgn", encoding: .utf8)
    var pgns = Pgn.parseMultiGame(text)
    var chess: Chess
    var pgn: Pgn
    XCTAssertEqual(pgns.count, 11, "Capablanca: game count matches")

    pgn = pgns.removeFirst()
    chess = try pgn.validate()
    XCTAssertEqual(chess.getTag("Event")?.value, "New York", "Capablanca(g1): event")
    XCTAssertEqual(chess.getTag("White")?.value, "Jose Raul Capablanca", "Capablanca(g1): white")
    XCTAssertEqual(chess.getTag("Black")?.value, "Savielly Tartakower", "Capablanca(g1): black")
    XCTAssertEqual(chess.getMoveCount(), 52, "Capablanca(g1): move count")
    XCTAssertEqual(
      chess.getMoveHistory().map { $0.pcn }.joined(separator: ","),
      "d2d4,e7e6,g1f3,f7f5,c2c4,g8f6,c1g5,f8e7,b1c3,e8g8,e2e3,b7b6,f1d3,c8b7,e1g1,d8e8,d1e2,f6e4,g5e7,e4c3,b2c3,e8e7,a2a4,b7f3,e2f3,b8c6,f1b1,a8e8,f3h3,f8f6,f2f4,c6a5,h3f3,d7d6,b1e1,e7d7,e3e4,f5e4,f3e4,g7g6,g2g3,g8f8,g1g2,f6f7,h2h4,d6d5,c4d5,e6d5,e4e8,d7e8,e1e8,f8e8,h4h5,f7f6,h5g6,h7g6,a1h1,e8f8,h1h7,f6c6,g3g4,a5c4,g4g5,c4e3,g2f3,e3f5,d3f5,g6f5,f3g3,c6c3,g3h4,c3f3,g5g6,f3f4,h4g5,f4e4,g5f6,f8g8,h7g7,g8h8,g7c7,e4e8,f6f5,e8e4,f5f6,e4f4,f6e5,f4g4,g6g7,h8g8,c7a7,g4g1,e5d5,g1c1,d5d6,c1c2,d4d5,c2c1,a7c7,c1a1,d6c6,a1a4,d5d6",
      "Capablanca(g1): PCN move history"
    )
    let fens0 = [
      "rnbqkbnr/pppppppp/8/8/3P4/8/PPP1PPPP/RNBQKBNR b KQkq - 0 1",
      "rnbqkbnr/pppp1ppp/4p3/8/3P4/8/PPP1PPPP/RNBQKBNR w KQkq - 0 2",
      "rnbqkbnr/pppp1ppp/4p3/8/3P4/5N2/PPP1PPPP/RNBQKB1R b KQkq - 1 2",
      "rnbqkbnr/pppp2pp/4p3/5p2/3P4/5N2/PPP1PPPP/RNBQKB1R w KQkq - 0 3",
      "rnbqkbnr/pppp2pp/4p3/5p2/2PP4/5N2/PP2PPPP/RNBQKB1R b KQkq - 0 3",
      "rnbqkb1r/pppp2pp/4pn2/5p2/2PP4/5N2/PP2PPPP/RNBQKB1R w KQkq - 1 4",
      "rnbqkb1r/pppp2pp/4pn2/5pB1/2PP4/5N2/PP2PPPP/RN1QKB1R b KQkq - 2 4",
      "rnbqk2r/ppppb1pp/4pn2/5pB1/2PP4/5N2/PP2PPPP/RN1QKB1R w KQkq - 3 5",
      "rnbqk2r/ppppb1pp/4pn2/5pB1/2PP4/2N2N2/PP2PPPP/R2QKB1R b KQkq - 4 5",
      "rnbq1rk1/ppppb1pp/4pn2/5pB1/2PP4/2N2N2/PP2PPPP/R2QKB1R w KQ - 5 6",
      "rnbq1rk1/ppppb1pp/4pn2/5pB1/2PP4/2N1PN2/PP3PPP/R2QKB1R b KQ - 0 6",
      "rnbq1rk1/p1ppb1pp/1p2pn2/5pB1/2PP4/2N1PN2/PP3PPP/R2QKB1R w KQ - 0 7",
      "rnbq1rk1/p1ppb1pp/1p2pn2/5pB1/2PP4/2NBPN2/PP3PPP/R2QK2R b KQ - 1 7",
      "rn1q1rk1/pbppb1pp/1p2pn2/5pB1/2PP4/2NBPN2/PP3PPP/R2QK2R w KQ - 2 8",
      "rn1q1rk1/pbppb1pp/1p2pn2/5pB1/2PP4/2NBPN2/PP3PPP/R2Q1RK1 b - - 3 8",
      "rn2qrk1/pbppb1pp/1p2pn2/5pB1/2PP4/2NBPN2/PP3PPP/R2Q1RK1 w - - 4 9",
      "rn2qrk1/pbppb1pp/1p2pn2/5pB1/2PP4/2NBPN2/PP2QPPP/R4RK1 b - - 5 9",
      "rn2qrk1/pbppb1pp/1p2p3/5pB1/2PPn3/2NBPN2/PP2QPPP/R4RK1 w - - 6 10",
      "rn2qrk1/pbppB1pp/1p2p3/5p2/2PPn3/2NBPN2/PP2QPPP/R4RK1 b - - 0 10",
      "rn2qrk1/pbppB1pp/1p2p3/5p2/2PP4/2nBPN2/PP2QPPP/R4RK1 w - - 0 11",
      "rn2qrk1/pbppB1pp/1p2p3/5p2/2PP4/2PBPN2/P3QPPP/R4RK1 b - - 0 11",
      "rn3rk1/pbppq1pp/1p2p3/5p2/2PP4/2PBPN2/P3QPPP/R4RK1 w - - 0 12",
      "rn3rk1/pbppq1pp/1p2p3/5p2/P1PP4/2PBPN2/4QPPP/R4RK1 b - - 0 12",
      "rn3rk1/p1ppq1pp/1p2p3/5p2/P1PP4/2PBPb2/4QPPP/R4RK1 w - - 0 13",
      "rn3rk1/p1ppq1pp/1p2p3/5p2/P1PP4/2PBPQ2/5PPP/R4RK1 b - - 0 13",
      "r4rk1/p1ppq1pp/1pn1p3/5p2/P1PP4/2PBPQ2/5PPP/R4RK1 w - - 1 14",
      "r4rk1/p1ppq1pp/1pn1p3/5p2/P1PP4/2PBPQ2/5PPP/RR4K1 b - - 2 14",
      "4rrk1/p1ppq1pp/1pn1p3/5p2/P1PP4/2PBPQ2/5PPP/RR4K1 w - - 3 15",
      "4rrk1/p1ppq1pp/1pn1p3/5p2/P1PP4/2PBP2Q/5PPP/RR4K1 b - - 4 15",
      "4r1k1/p1ppq1pp/1pn1pr2/5p2/P1PP4/2PBP2Q/5PPP/RR4K1 w - - 5 16",
      "4r1k1/p1ppq1pp/1pn1pr2/5p2/P1PP1P2/2PBP2Q/6PP/RR4K1 b - - 0 16",
      "4r1k1/p1ppq1pp/1p2pr2/n4p2/P1PP1P2/2PBP2Q/6PP/RR4K1 w - - 1 17",
      "4r1k1/p1ppq1pp/1p2pr2/n4p2/P1PP1P2/2PBPQ2/6PP/RR4K1 b - - 2 17",
      "4r1k1/p1p1q1pp/1p1ppr2/n4p2/P1PP1P2/2PBPQ2/6PP/RR4K1 w - - 0 18",
      "4r1k1/p1p1q1pp/1p1ppr2/n4p2/P1PP1P2/2PBPQ2/6PP/R3R1K1 b - - 1 18",
      "4r1k1/p1pq2pp/1p1ppr2/n4p2/P1PP1P2/2PBPQ2/6PP/R3R1K1 w - - 2 19",
      "4r1k1/p1pq2pp/1p1ppr2/n4p2/P1PPPP2/2PB1Q2/6PP/R3R1K1 b - - 0 19",
      "4r1k1/p1pq2pp/1p1ppr2/n7/P1PPpP2/2PB1Q2/6PP/R3R1K1 w - - 0 20",
      "4r1k1/p1pq2pp/1p1ppr2/n7/P1PPQP2/2PB4/6PP/R3R1K1 b - - 0 20",
      "4r1k1/p1pq3p/1p1pprp1/n7/P1PPQP2/2PB4/6PP/R3R1K1 w - - 0 21",
      "4r1k1/p1pq3p/1p1pprp1/n7/P1PPQP2/2PB2P1/7P/R3R1K1 b - - 0 21",
      "4rk2/p1pq3p/1p1pprp1/n7/P1PPQP2/2PB2P1/7P/R3R1K1 w - - 1 22",
      "4rk2/p1pq3p/1p1pprp1/n7/P1PPQP2/2PB2P1/6KP/R3R3 b - - 2 22",
      "4rk2/p1pq1r1p/1p1pp1p1/n7/P1PPQP2/2PB2P1/6KP/R3R3 w - - 3 23",
      "4rk2/p1pq1r1p/1p1pp1p1/n7/P1PPQP1P/2PB2P1/6K1/R3R3 b - - 0 23",
      "4rk2/p1pq1r1p/1p2p1p1/n2p4/P1PPQP1P/2PB2P1/6K1/R3R3 w - - 0 24",
      "4rk2/p1pq1r1p/1p2p1p1/n2P4/P2PQP1P/2PB2P1/6K1/R3R3 b - - 0 24",
      "4rk2/p1pq1r1p/1p4p1/n2p4/P2PQP1P/2PB2P1/6K1/R3R3 w - - 0 25",
      "4Qk2/p1pq1r1p/1p4p1/n2p4/P2P1P1P/2PB2P1/6K1/R3R3 b - - 0 25",
      "4qk2/p1p2r1p/1p4p1/n2p4/P2P1P1P/2PB2P1/6K1/R3R3 w - - 0 26",
      "4Rk2/p1p2r1p/1p4p1/n2p4/P2P1P1P/2PB2P1/6K1/R7 b - - 0 26",
      "4k3/p1p2r1p/1p4p1/n2p4/P2P1P1P/2PB2P1/6K1/R7 w - - 0 27",
      "4k3/p1p2r1p/1p4p1/n2p3P/P2P1P2/2PB2P1/6K1/R7 b - - 0 27",
      "4k3/p1p4p/1p3rp1/n2p3P/P2P1P2/2PB2P1/6K1/R7 w - - 1 28",
      "4k3/p1p4p/1p3rP1/n2p4/P2P1P2/2PB2P1/6K1/R7 b - - 0 28",
      "4k3/p1p5/1p3rp1/n2p4/P2P1P2/2PB2P1/6K1/R7 w - - 0 29",
      "4k3/p1p5/1p3rp1/n2p4/P2P1P2/2PB2P1/6K1/7R b - - 1 29",
      "5k2/p1p5/1p3rp1/n2p4/P2P1P2/2PB2P1/6K1/7R w - - 2 30",
      "5k2/p1p4R/1p3rp1/n2p4/P2P1P2/2PB2P1/6K1/8 b - - 3 30",
      "5k2/p1p4R/1pr3p1/n2p4/P2P1P2/2PB2P1/6K1/8 w - - 4 31",
      "5k2/p1p4R/1pr3p1/n2p4/P2P1PP1/2PB4/6K1/8 b - - 0 31",
      "5k2/p1p4R/1pr3p1/3p4/P1nP1PP1/2PB4/6K1/8 w - - 1 32",
      "5k2/p1p4R/1pr3p1/3p2P1/P1nP1P2/2PB4/6K1/8 b - - 0 32",
      "5k2/p1p4R/1pr3p1/3p2P1/P2P1P2/2PBn3/6K1/8 w - - 1 33",
      "5k2/p1p4R/1pr3p1/3p2P1/P2P1P2/2PBnK2/8/8 b - - 2 33",
      "5k2/p1p4R/1pr3p1/3p1nP1/P2P1P2/2PB1K2/8/8 w - - 3 34",
      "5k2/p1p4R/1pr3p1/3p1BP1/P2P1P2/2P2K2/8/8 b - - 0 34",
      "5k2/p1p4R/1pr5/3p1pP1/P2P1P2/2P2K2/8/8 w - - 0 35",
      "5k2/p1p4R/1pr5/3p1pP1/P2P1P2/2P3K1/8/8 b - - 1 35",
      "5k2/p1p4R/1p6/3p1pP1/P2P1P2/2r3K1/8/8 w - - 0 36",
      "5k2/p1p4R/1p6/3p1pP1/P2P1P1K/2r5/8/8 b - - 1 36",
      "5k2/p1p4R/1p6/3p1pP1/P2P1P1K/5r2/8/8 w - - 2 37",
      "5k2/p1p4R/1p4P1/3p1p2/P2P1P1K/5r2/8/8 b - - 0 37",
      "5k2/p1p4R/1p4P1/3p1p2/P2P1r1K/8/8/8 w - - 0 38",
      "5k2/p1p4R/1p4P1/3p1pK1/P2P1r2/8/8/8 b - - 1 38",
      "5k2/p1p4R/1p4P1/3p1pK1/P2Pr3/8/8/8 w - - 2 39",
      "5k2/p1p4R/1p3KP1/3p1p2/P2Pr3/8/8/8 b - - 3 39",
      "6k1/p1p4R/1p3KP1/3p1p2/P2Pr3/8/8/8 w - - 4 40",
      "6k1/p1p3R1/1p3KP1/3p1p2/P2Pr3/8/8/8 b - - 5 40",
      "7k/p1p3R1/1p3KP1/3p1p2/P2Pr3/8/8/8 w - - 6 41",
      "7k/p1R5/1p3KP1/3p1p2/P2Pr3/8/8/8 b - - 0 41",
      "4r2k/p1R5/1p3KP1/3p1p2/P2P4/8/8/8 w - - 1 42",
      "4r2k/p1R5/1p4P1/3p1K2/P2P4/8/8/8 b - - 0 42",
      "7k/p1R5/1p4P1/3p1K2/P2Pr3/8/8/8 w - - 1 43",
      "7k/p1R5/1p3KP1/3p4/P2Pr3/8/8/8 b - - 2 43",
      "7k/p1R5/1p3KP1/3p4/P2P1r2/8/8/8 w - - 3 44",
      "7k/p1R5/1p4P1/3pK3/P2P1r2/8/8/8 b - - 4 44",
      "7k/p1R5/1p4P1/3pK3/P2P2r1/8/8/8 w - - 5 45",
      "7k/p1R3P1/1p6/3pK3/P2P2r1/8/8/8 b - - 0 45",
      "6k1/p1R3P1/1p6/3pK3/P2P2r1/8/8/8 w - - 1 46",
      "6k1/R5P1/1p6/3pK3/P2P2r1/8/8/8 b - - 0 46",
      "6k1/R5P1/1p6/3pK3/P2P4/8/8/6r1 w - - 1 47",
      "6k1/R5P1/1p6/3K4/P2P4/8/8/6r1 b - - 0 47",
      "6k1/R5P1/1p6/3K4/P2P4/8/8/2r5 w - - 1 48",
      "6k1/R5P1/1p1K4/8/P2P4/8/8/2r5 b - - 2 48",
      "6k1/R5P1/1p1K4/8/P2P4/8/2r5/8 w - - 3 49",
      "6k1/R5P1/1p1K4/3P4/P7/8/2r5/8 b - - 0 49",
      "6k1/R5P1/1p1K4/3P4/P7/8/8/2r5 w - - 1 50",
      "6k1/2R3P1/1p1K4/3P4/P7/8/8/2r5 b - - 2 50",
      "6k1/2R3P1/1p1K4/3P4/P7/8/8/r7 w - - 3 51",
      "6k1/2R3P1/1pK5/3P4/P7/8/8/r7 b - - 4 51",
      "6k1/2R3P1/1pK5/3P4/r7/8/8/8 w - - 0 52",
      "6k1/2R3P1/1pKP4/8/r7/8/8/8 b - - 0 52",
    ]
    for (index, history) in chess.getMoveHistory().enumerated() {
      XCTAssertEqual(history.fen, fens0[index], "Capablanca(g1): FEN move (index)")
    }

    pgn = pgns.removeFirst()
    chess = try pgn.validate()
    XCTAssertEqual(chess.getTag("Event")?.value, "New York", "Capablanca(g2): event")
    XCTAssertEqual(chess.getTag("White")?.value, "Jose Raul Capablanca", "Capablanca(g2): white")
    XCTAssertEqual(chess.getTag("Black")?.value, "Savielly Tartakower", "Capablanca(g2): black")
    XCTAssertEqual(chess.getMoveCount(), 52, "Capablanca(g2): move count")
    XCTAssertEqual(
      chess.getMoveHistory().map { $0.pcn }.joined(separator: ","),
      "d2d4,e7e6,g1f3,f7f5,c2c4,g8f6,c1g5,f8e7,b1c3,e8g8,e2e3,b7b6,f1d3,c8b7,e1g1,d8e8,d1e2,f6e4,g5e7,e4c3,b2c3,e8e7,a2a4,b7f3,e2f3,b8c6,f1b1,a8e8,f3h3,f8f6,f2f4,c6a5,h3f3,d7d6,b1e1,e7d7,e3e4,f5e4,f3e4,g7g6,g2g3,g8f8,g1g2,f6f7,h2h4,d6d5,c4d5,e6d5,e4e8,d7e8,e1e8,f8e8,h4h5,f7f6,h5g6,h7g6,a1h1,e8f8,h1h7,f6c6,g3g4,a5c4,g4g5,c4e3,g2f3,e3f5,d3f5,g6f5,f3g3,c6c3,g3h4,c3f3,g5g6,f3f4,h4g5,f4e4,g5f6,f8g8,h7g7,g8h8,g7c7,e4e8,f6f5,e8e4,f5f6,e4f4,f6e5,f4g4,g6g7,h8g8,c7a7,g4g1,e5d5,g1c1,d5d6,c1c2,d4d5,c2c1,a7c7,c1a1,d6c6,a1a4,d5d6",
      "Capablanca(g2): PCN move history"
    )
    let fens1 = [
      "rnbqkbnr/pppppppp/8/8/3P4/8/PPP1PPPP/RNBQKBNR b KQkq - 0 1",
      "rnbqkbnr/pppp1ppp/4p3/8/3P4/8/PPP1PPPP/RNBQKBNR w KQkq - 0 2",
      "rnbqkbnr/pppp1ppp/4p3/8/3P4/5N2/PPP1PPPP/RNBQKB1R b KQkq - 1 2",
      "rnbqkbnr/pppp2pp/4p3/5p2/3P4/5N2/PPP1PPPP/RNBQKB1R w KQkq - 0 3",
      "rnbqkbnr/pppp2pp/4p3/5p2/2PP4/5N2/PP2PPPP/RNBQKB1R b KQkq - 0 3",
      "rnbqkb1r/pppp2pp/4pn2/5p2/2PP4/5N2/PP2PPPP/RNBQKB1R w KQkq - 1 4",
      "rnbqkb1r/pppp2pp/4pn2/5pB1/2PP4/5N2/PP2PPPP/RN1QKB1R b KQkq - 2 4",
      "rnbqk2r/ppppb1pp/4pn2/5pB1/2PP4/5N2/PP2PPPP/RN1QKB1R w KQkq - 3 5",
      "rnbqk2r/ppppb1pp/4pn2/5pB1/2PP4/2N2N2/PP2PPPP/R2QKB1R b KQkq - 4 5",
      "rnbq1rk1/ppppb1pp/4pn2/5pB1/2PP4/2N2N2/PP2PPPP/R2QKB1R w KQ - 5 6",
      "rnbq1rk1/ppppb1pp/4pn2/5pB1/2PP4/2N1PN2/PP3PPP/R2QKB1R b KQ - 0 6",
      "rnbq1rk1/p1ppb1pp/1p2pn2/5pB1/2PP4/2N1PN2/PP3PPP/R2QKB1R w KQ - 0 7",
      "rnbq1rk1/p1ppb1pp/1p2pn2/5pB1/2PP4/2NBPN2/PP3PPP/R2QK2R b KQ - 1 7",
      "rn1q1rk1/pbppb1pp/1p2pn2/5pB1/2PP4/2NBPN2/PP3PPP/R2QK2R w KQ - 2 8",
      "rn1q1rk1/pbppb1pp/1p2pn2/5pB1/2PP4/2NBPN2/PP3PPP/R2Q1RK1 b - - 3 8",
      "rn2qrk1/pbppb1pp/1p2pn2/5pB1/2PP4/2NBPN2/PP3PPP/R2Q1RK1 w - - 4 9",
      "rn2qrk1/pbppb1pp/1p2pn2/5pB1/2PP4/2NBPN2/PP2QPPP/R4RK1 b - - 5 9",
      "rn2qrk1/pbppb1pp/1p2p3/5pB1/2PPn3/2NBPN2/PP2QPPP/R4RK1 w - - 6 10",
      "rn2qrk1/pbppB1pp/1p2p3/5p2/2PPn3/2NBPN2/PP2QPPP/R4RK1 b - - 0 10",
      "rn2qrk1/pbppB1pp/1p2p3/5p2/2PP4/2nBPN2/PP2QPPP/R4RK1 w - - 0 11",
      "rn2qrk1/pbppB1pp/1p2p3/5p2/2PP4/2PBPN2/P3QPPP/R4RK1 b - - 0 11",
      "rn3rk1/pbppq1pp/1p2p3/5p2/2PP4/2PBPN2/P3QPPP/R4RK1 w - - 0 12",
      "rn3rk1/pbppq1pp/1p2p3/5p2/P1PP4/2PBPN2/4QPPP/R4RK1 b - - 0 12",
      "rn3rk1/p1ppq1pp/1p2p3/5p2/P1PP4/2PBPb2/4QPPP/R4RK1 w - - 0 13",
      "rn3rk1/p1ppq1pp/1p2p3/5p2/P1PP4/2PBPQ2/5PPP/R4RK1 b - - 0 13",
      "r4rk1/p1ppq1pp/1pn1p3/5p2/P1PP4/2PBPQ2/5PPP/R4RK1 w - - 1 14",
      "r4rk1/p1ppq1pp/1pn1p3/5p2/P1PP4/2PBPQ2/5PPP/RR4K1 b - - 2 14",
      "4rrk1/p1ppq1pp/1pn1p3/5p2/P1PP4/2PBPQ2/5PPP/RR4K1 w - - 3 15",
      "4rrk1/p1ppq1pp/1pn1p3/5p2/P1PP4/2PBP2Q/5PPP/RR4K1 b - - 4 15",
      "4r1k1/p1ppq1pp/1pn1pr2/5p2/P1PP4/2PBP2Q/5PPP/RR4K1 w - - 5 16",
      "4r1k1/p1ppq1pp/1pn1pr2/5p2/P1PP1P2/2PBP2Q/6PP/RR4K1 b - - 0 16",
      "4r1k1/p1ppq1pp/1p2pr2/n4p2/P1PP1P2/2PBP2Q/6PP/RR4K1 w - - 1 17",
      "4r1k1/p1ppq1pp/1p2pr2/n4p2/P1PP1P2/2PBPQ2/6PP/RR4K1 b - - 2 17",
      "4r1k1/p1p1q1pp/1p1ppr2/n4p2/P1PP1P2/2PBPQ2/6PP/RR4K1 w - - 0 18",
      "4r1k1/p1p1q1pp/1p1ppr2/n4p2/P1PP1P2/2PBPQ2/6PP/R3R1K1 b - - 1 18",
      "4r1k1/p1pq2pp/1p1ppr2/n4p2/P1PP1P2/2PBPQ2/6PP/R3R1K1 w - - 2 19",
      "4r1k1/p1pq2pp/1p1ppr2/n4p2/P1PPPP2/2PB1Q2/6PP/R3R1K1 b - - 0 19",
      "4r1k1/p1pq2pp/1p1ppr2/n7/P1PPpP2/2PB1Q2/6PP/R3R1K1 w - - 0 20",
      "4r1k1/p1pq2pp/1p1ppr2/n7/P1PPQP2/2PB4/6PP/R3R1K1 b - - 0 20",
      "4r1k1/p1pq3p/1p1pprp1/n7/P1PPQP2/2PB4/6PP/R3R1K1 w - - 0 21",
      "4r1k1/p1pq3p/1p1pprp1/n7/P1PPQP2/2PB2P1/7P/R3R1K1 b - - 0 21",
      "4rk2/p1pq3p/1p1pprp1/n7/P1PPQP2/2PB2P1/7P/R3R1K1 w - - 1 22",
      "4rk2/p1pq3p/1p1pprp1/n7/P1PPQP2/2PB2P1/6KP/R3R3 b - - 2 22",
      "4rk2/p1pq1r1p/1p1pp1p1/n7/P1PPQP2/2PB2P1/6KP/R3R3 w - - 3 23",
      "4rk2/p1pq1r1p/1p1pp1p1/n7/P1PPQP1P/2PB2P1/6K1/R3R3 b - - 0 23",
      "4rk2/p1pq1r1p/1p2p1p1/n2p4/P1PPQP1P/2PB2P1/6K1/R3R3 w - - 0 24",
      "4rk2/p1pq1r1p/1p2p1p1/n2P4/P2PQP1P/2PB2P1/6K1/R3R3 b - - 0 24",
      "4rk2/p1pq1r1p/1p4p1/n2p4/P2PQP1P/2PB2P1/6K1/R3R3 w - - 0 25",
      "4Qk2/p1pq1r1p/1p4p1/n2p4/P2P1P1P/2PB2P1/6K1/R3R3 b - - 0 25",
      "4qk2/p1p2r1p/1p4p1/n2p4/P2P1P1P/2PB2P1/6K1/R3R3 w - - 0 26",
      "4Rk2/p1p2r1p/1p4p1/n2p4/P2P1P1P/2PB2P1/6K1/R7 b - - 0 26",
      "4k3/p1p2r1p/1p4p1/n2p4/P2P1P1P/2PB2P1/6K1/R7 w - - 0 27",
      "4k3/p1p2r1p/1p4p1/n2p3P/P2P1P2/2PB2P1/6K1/R7 b - - 0 27",
      "4k3/p1p4p/1p3rp1/n2p3P/P2P1P2/2PB2P1/6K1/R7 w - - 1 28",
      "4k3/p1p4p/1p3rP1/n2p4/P2P1P2/2PB2P1/6K1/R7 b - - 0 28",
      "4k3/p1p5/1p3rp1/n2p4/P2P1P2/2PB2P1/6K1/R7 w - - 0 29",
      "4k3/p1p5/1p3rp1/n2p4/P2P1P2/2PB2P1/6K1/7R b - - 1 29",
      "5k2/p1p5/1p3rp1/n2p4/P2P1P2/2PB2P1/6K1/7R w - - 2 30",
      "5k2/p1p4R/1p3rp1/n2p4/P2P1P2/2PB2P1/6K1/8 b - - 3 30",
      "5k2/p1p4R/1pr3p1/n2p4/P2P1P2/2PB2P1/6K1/8 w - - 4 31",
      "5k2/p1p4R/1pr3p1/n2p4/P2P1PP1/2PB4/6K1/8 b - - 0 31",
      "5k2/p1p4R/1pr3p1/3p4/P1nP1PP1/2PB4/6K1/8 w - - 1 32",
      "5k2/p1p4R/1pr3p1/3p2P1/P1nP1P2/2PB4/6K1/8 b - - 0 32",
      "5k2/p1p4R/1pr3p1/3p2P1/P2P1P2/2PBn3/6K1/8 w - - 1 33",
      "5k2/p1p4R/1pr3p1/3p2P1/P2P1P2/2PBnK2/8/8 b - - 2 33",
      "5k2/p1p4R/1pr3p1/3p1nP1/P2P1P2/2PB1K2/8/8 w - - 3 34",
      "5k2/p1p4R/1pr3p1/3p1BP1/P2P1P2/2P2K2/8/8 b - - 0 34",
      "5k2/p1p4R/1pr5/3p1pP1/P2P1P2/2P2K2/8/8 w - - 0 35",
      "5k2/p1p4R/1pr5/3p1pP1/P2P1P2/2P3K1/8/8 b - - 1 35",
      "5k2/p1p4R/1p6/3p1pP1/P2P1P2/2r3K1/8/8 w - - 0 36",
      "5k2/p1p4R/1p6/3p1pP1/P2P1P1K/2r5/8/8 b - - 1 36",
      "5k2/p1p4R/1p6/3p1pP1/P2P1P1K/5r2/8/8 w - - 2 37",
      "5k2/p1p4R/1p4P1/3p1p2/P2P1P1K/5r2/8/8 b - - 0 37",
      "5k2/p1p4R/1p4P1/3p1p2/P2P1r1K/8/8/8 w - - 0 38",
      "5k2/p1p4R/1p4P1/3p1pK1/P2P1r2/8/8/8 b - - 1 38",
      "5k2/p1p4R/1p4P1/3p1pK1/P2Pr3/8/8/8 w - - 2 39",
      "5k2/p1p4R/1p3KP1/3p1p2/P2Pr3/8/8/8 b - - 3 39",
      "6k1/p1p4R/1p3KP1/3p1p2/P2Pr3/8/8/8 w - - 4 40",
      "6k1/p1p3R1/1p3KP1/3p1p2/P2Pr3/8/8/8 b - - 5 40",
      "7k/p1p3R1/1p3KP1/3p1p2/P2Pr3/8/8/8 w - - 6 41",
      "7k/p1R5/1p3KP1/3p1p2/P2Pr3/8/8/8 b - - 0 41",
      "4r2k/p1R5/1p3KP1/3p1p2/P2P4/8/8/8 w - - 1 42",
      "4r2k/p1R5/1p4P1/3p1K2/P2P4/8/8/8 b - - 0 42",
      "7k/p1R5/1p4P1/3p1K2/P2Pr3/8/8/8 w - - 1 43",
      "7k/p1R5/1p3KP1/3p4/P2Pr3/8/8/8 b - - 2 43",
      "7k/p1R5/1p3KP1/3p4/P2P1r2/8/8/8 w - - 3 44",
      "7k/p1R5/1p4P1/3pK3/P2P1r2/8/8/8 b - - 4 44",
      "7k/p1R5/1p4P1/3pK3/P2P2r1/8/8/8 w - - 5 45",
      "7k/p1R3P1/1p6/3pK3/P2P2r1/8/8/8 b - - 0 45",
      "6k1/p1R3P1/1p6/3pK3/P2P2r1/8/8/8 w - - 1 46",
      "6k1/R5P1/1p6/3pK3/P2P2r1/8/8/8 b - - 0 46",
      "6k1/R5P1/1p6/3pK3/P2P4/8/8/6r1 w - - 1 47",
      "6k1/R5P1/1p6/3K4/P2P4/8/8/6r1 b - - 0 47",
      "6k1/R5P1/1p6/3K4/P2P4/8/8/2r5 w - - 1 48",
      "6k1/R5P1/1p1K4/8/P2P4/8/8/2r5 b - - 2 48",
      "6k1/R5P1/1p1K4/8/P2P4/8/2r5/8 w - - 3 49",
      "6k1/R5P1/1p1K4/3P4/P7/8/2r5/8 b - - 0 49",
      "6k1/R5P1/1p1K4/3P4/P7/8/8/2r5 w - - 1 50",
      "6k1/2R3P1/1p1K4/3P4/P7/8/8/2r5 b - - 2 50",
      "6k1/2R3P1/1p1K4/3P4/P7/8/8/r7 w - - 3 51",
      "6k1/2R3P1/1pK5/3P4/P7/8/8/r7 b - - 4 51",
      "6k1/2R3P1/1pK5/3P4/r7/8/8/8 w - - 0 52",
      "6k1/2R3P1/1pKP4/8/r7/8/8/8 b - - 0 52",
    ]
    for (index, history) in chess.getMoveHistory().enumerated() {
      XCTAssertEqual(history.fen, fens1[index], "Capablanca(g2): FEN move (index)")
    }

    pgn = pgns.removeFirst()
    chess = try pgn.validate()
    XCTAssertEqual(chess.getTag("Event")?.value, "Casual Game", "Capablanca(g3): event")
    XCTAssertEqual(chess.getTag("White")?.value, "Jose Raul Capablanca", "Capablanca(g3): white")
    XCTAssertEqual(chess.getTag("Black")?.value, "Marc Fonaroff", "Capablanca(g3): black")
    XCTAssertEqual(chess.getMoveCount(), 22, "Capablanca(g3): move count")
    XCTAssertEqual(
      chess.getMoveHistory().map { $0.pcn }.joined(separator: ","),
      "e2e4,e7e5,g1f3,b8c6,d2d4,d7d6,b1c3,g8f6,f1b5,c8d7,e1g1,f8e7,f1e1,e5d4,f3d4,c6d4,d1d4,d7b5,c3b5,e8g8,d4c3,c7c6,b5d4,f6d7,d4f5,e7f6,c3g3,d7e5,c1f4,d8c7,a1d1,a8d8,d1d6,d8d6,f4e5,d6d1,e1d1,f6e5,f5h6,g8h8,g3e5,c7e5,h6f7",
      "Capablanca(g3): PCN move history"
    )
    let fens2 = [
      "rnbqkbnr/pppppppp/8/8/4P3/8/PPPP1PPP/RNBQKBNR b KQkq - 0 1",
      "rnbqkbnr/pppp1ppp/8/4p3/4P3/8/PPPP1PPP/RNBQKBNR w KQkq - 0 2",
      "rnbqkbnr/pppp1ppp/8/4p3/4P3/5N2/PPPP1PPP/RNBQKB1R b KQkq - 1 2",
      "r1bqkbnr/pppp1ppp/2n5/4p3/4P3/5N2/PPPP1PPP/RNBQKB1R w KQkq - 2 3",
      "r1bqkbnr/pppp1ppp/2n5/4p3/3PP3/5N2/PPP2PPP/RNBQKB1R b KQkq - 0 3",
      "r1bqkbnr/ppp2ppp/2np4/4p3/3PP3/5N2/PPP2PPP/RNBQKB1R w KQkq - 0 4",
      "r1bqkbnr/ppp2ppp/2np4/4p3/3PP3/2N2N2/PPP2PPP/R1BQKB1R b KQkq - 1 4",
      "r1bqkb1r/ppp2ppp/2np1n2/4p3/3PP3/2N2N2/PPP2PPP/R1BQKB1R w KQkq - 2 5",
      "r1bqkb1r/ppp2ppp/2np1n2/1B2p3/3PP3/2N2N2/PPP2PPP/R1BQK2R b KQkq - 3 5",
      "r2qkb1r/pppb1ppp/2np1n2/1B2p3/3PP3/2N2N2/PPP2PPP/R1BQK2R w KQkq - 4 6",
      "r2qkb1r/pppb1ppp/2np1n2/1B2p3/3PP3/2N2N2/PPP2PPP/R1BQ1RK1 b kq - 5 6",
      "r2qk2r/pppbbppp/2np1n2/1B2p3/3PP3/2N2N2/PPP2PPP/R1BQ1RK1 w kq - 6 7",
      "r2qk2r/pppbbppp/2np1n2/1B2p3/3PP3/2N2N2/PPP2PPP/R1BQR1K1 b kq - 7 7",
      "r2qk2r/pppbbppp/2np1n2/1B6/3pP3/2N2N2/PPP2PPP/R1BQR1K1 w kq - 0 8",
      "r2qk2r/pppbbppp/2np1n2/1B6/3NP3/2N5/PPP2PPP/R1BQR1K1 b kq - 0 8",
      "r2qk2r/pppbbppp/3p1n2/1B6/3nP3/2N5/PPP2PPP/R1BQR1K1 w kq - 0 9",
      "r2qk2r/pppbbppp/3p1n2/1B6/3QP3/2N5/PPP2PPP/R1B1R1K1 b kq - 0 9",
      "r2qk2r/ppp1bppp/3p1n2/1b6/3QP3/2N5/PPP2PPP/R1B1R1K1 w kq - 0 10",
      "r2qk2r/ppp1bppp/3p1n2/1N6/3QP3/8/PPP2PPP/R1B1R1K1 b kq - 0 10",
      "r2q1rk1/ppp1bppp/3p1n2/1N6/3QP3/8/PPP2PPP/R1B1R1K1 w - - 1 11",
      "r2q1rk1/ppp1bppp/3p1n2/1N6/4P3/2Q5/PPP2PPP/R1B1R1K1 b - - 2 11",
      "r2q1rk1/pp2bppp/2pp1n2/1N6/4P3/2Q5/PPP2PPP/R1B1R1K1 w - - 0 12",
      "r2q1rk1/pp2bppp/2pp1n2/8/3NP3/2Q5/PPP2PPP/R1B1R1K1 b - - 1 12",
      "r2q1rk1/pp1nbppp/2pp4/8/3NP3/2Q5/PPP2PPP/R1B1R1K1 w - - 2 13",
      "r2q1rk1/pp1nbppp/2pp4/5N2/4P3/2Q5/PPP2PPP/R1B1R1K1 b - - 3 13",
      "r2q1rk1/pp1n1ppp/2pp1b2/5N2/4P3/2Q5/PPP2PPP/R1B1R1K1 w - - 4 14",
      "r2q1rk1/pp1n1ppp/2pp1b2/5N2/4P3/6Q1/PPP2PPP/R1B1R1K1 b - - 5 14",
      "r2q1rk1/pp3ppp/2pp1b2/4nN2/4P3/6Q1/PPP2PPP/R1B1R1K1 w - - 6 15",
      "r2q1rk1/pp3ppp/2pp1b2/4nN2/4PB2/6Q1/PPP2PPP/R3R1K1 b - - 7 15",
      "r4rk1/ppq2ppp/2pp1b2/4nN2/4PB2/6Q1/PPP2PPP/R3R1K1 w - - 8 16",
      "r4rk1/ppq2ppp/2pp1b2/4nN2/4PB2/6Q1/PPP2PPP/3RR1K1 b - - 9 16",
      "3r1rk1/ppq2ppp/2pp1b2/4nN2/4PB2/6Q1/PPP2PPP/3RR1K1 w - - 10 17",
      "3r1rk1/ppq2ppp/2pR1b2/4nN2/4PB2/6Q1/PPP2PPP/4R1K1 b - - 0 17",
      "5rk1/ppq2ppp/2pr1b2/4nN2/4PB2/6Q1/PPP2PPP/4R1K1 w - - 0 18",
      "5rk1/ppq2ppp/2pr1b2/4BN2/4P3/6Q1/PPP2PPP/4R1K1 b - - 0 18",
      "5rk1/ppq2ppp/2p2b2/4BN2/4P3/6Q1/PPP2PPP/3rR1K1 w - - 1 19",
      "5rk1/ppq2ppp/2p2b2/4BN2/4P3/6Q1/PPP2PPP/3R2K1 b - - 0 19",
      "5rk1/ppq2ppp/2p5/4bN2/4P3/6Q1/PPP2PPP/3R2K1 w - - 0 20",
      "5rk1/ppq2ppp/2p4N/4b3/4P3/6Q1/PPP2PPP/3R2K1 b - - 1 20",
      "5r1k/ppq2ppp/2p4N/4b3/4P3/6Q1/PPP2PPP/3R2K1 w - - 2 21",
      "5r1k/ppq2ppp/2p4N/4Q3/4P3/8/PPP2PPP/3R2K1 b - - 0 21",
      "5r1k/pp3ppp/2p4N/4q3/4P3/8/PPP2PPP/3R2K1 w - - 0 22",
      "5r1k/pp3Npp/2p5/4q3/4P3/8/PPP2PPP/3R2K1 b - - 0 22",
    ]
    for (index, history) in chess.getMoveHistory().enumerated() {
      XCTAssertEqual(history.fen, fens2[index], "Capablanca(g3): FEN move (index)")
    }

    pgn = pgns.removeFirst()
    chess = try pgn.validate()
    XCTAssertEqual(chess.getTag("Event")?.value, "Capablanca - Corzo", "Capablanca(g4): event")
    XCTAssertEqual(chess.getTag("White")?.value, "Jose Raul Capablanca", "Capablanca(g4): white")
    XCTAssertEqual(chess.getTag("Black")?.value, "Juan Corzo", "Capablanca(g4): black")
    XCTAssertEqual(chess.getMoveCount(), 60, "Capablanca(g4): move count")
    XCTAssertEqual(
      chess.getMoveHistory().map { $0.pcn }.joined(separator: ","),
      "d2d4,d7d5,g1f3,c7c5,e2e3,b8c6,b2b3,e7e6,c1b2,g8f6,b1d2,c5d4,e3d4,f8d6,f1d3,e8g8,e1g1,f6h5,g2g3,f7f5,f3e5,h5f6,f2f4,d6e5,f4e5,f6g4,d1e2,d8b6,d2f3,c8d7,a2a3,g8h8,h2h3,g4h6,e2f2,h6f7,g1g2,g7g5,g3g4,c6e7,f2e3,f8g8,a1e1,e7g6,g4f5,g6f4,g2h2,f4d3,e3d3,e6f5,c2c4,b6e6,c4d5,e6d5,e5e6,d7b5,d3b5,d5b5,d4d5,g8g7,e6f7,h7h6,f3d4,b5f1,e1f1,g7f7,f1f5,f7f5,d4f5,h8h7,f5e7,a8f8,h2g2,h6h5,d5d6,g5g4,h3g4,h5g4,b2e5,h7h6,d6d7,f8d8,e7g8,d8g8,e5f6,h6g6,d7d8q,g8d8,f6d8,b7b5,g2f2,g6f5,f2e3,f5e5,e3d3,e5d5,d3c3,g4g3,d8h4,g3g2,h4f2,a7a5,b3b4,d5e4,f2b6,e4d5,c3d3,d5c6,b6g1,c6d5,g1h2,d5c6,d3d4,a5a4,d4e5,c6b6,e5d5,b6a6,d5c5",
      "Capablanca(g4): PCN move history"
    )
    let fens3 = [
      "rnbqkbnr/pppppppp/8/8/3P4/8/PPP1PPPP/RNBQKBNR b KQkq - 0 1",
      "rnbqkbnr/ppp1pppp/8/3p4/3P4/8/PPP1PPPP/RNBQKBNR w KQkq - 0 2",
      "rnbqkbnr/ppp1pppp/8/3p4/3P4/5N2/PPP1PPPP/RNBQKB1R b KQkq - 1 2",
      "rnbqkbnr/pp2pppp/8/2pp4/3P4/5N2/PPP1PPPP/RNBQKB1R w KQkq - 0 3",
      "rnbqkbnr/pp2pppp/8/2pp4/3P4/4PN2/PPP2PPP/RNBQKB1R b KQkq - 0 3",
      "r1bqkbnr/pp2pppp/2n5/2pp4/3P4/4PN2/PPP2PPP/RNBQKB1R w KQkq - 1 4",
      "r1bqkbnr/pp2pppp/2n5/2pp4/3P4/1P2PN2/P1P2PPP/RNBQKB1R b KQkq - 0 4",
      "r1bqkbnr/pp3ppp/2n1p3/2pp4/3P4/1P2PN2/P1P2PPP/RNBQKB1R w KQkq - 0 5",
      "r1bqkbnr/pp3ppp/2n1p3/2pp4/3P4/1P2PN2/PBP2PPP/RN1QKB1R b KQkq - 1 5",
      "r1bqkb1r/pp3ppp/2n1pn2/2pp4/3P4/1P2PN2/PBP2PPP/RN1QKB1R w KQkq - 2 6",
      "r1bqkb1r/pp3ppp/2n1pn2/2pp4/3P4/1P2PN2/PBPN1PPP/R2QKB1R b KQkq - 3 6",
      "r1bqkb1r/pp3ppp/2n1pn2/3p4/3p4/1P2PN2/PBPN1PPP/R2QKB1R w KQkq - 0 7",
      "r1bqkb1r/pp3ppp/2n1pn2/3p4/3P4/1P3N2/PBPN1PPP/R2QKB1R b KQkq - 0 7",
      "r1bqk2r/pp3ppp/2nbpn2/3p4/3P4/1P3N2/PBPN1PPP/R2QKB1R w KQkq - 1 8",
      "r1bqk2r/pp3ppp/2nbpn2/3p4/3P4/1P1B1N2/PBPN1PPP/R2QK2R b KQkq - 2 8",
      "r1bq1rk1/pp3ppp/2nbpn2/3p4/3P4/1P1B1N2/PBPN1PPP/R2QK2R w KQ - 3 9",
      "r1bq1rk1/pp3ppp/2nbpn2/3p4/3P4/1P1B1N2/PBPN1PPP/R2Q1RK1 b - - 4 9",
      "r1bq1rk1/pp3ppp/2nbp3/3p3n/3P4/1P1B1N2/PBPN1PPP/R2Q1RK1 w - - 5 10",
      "r1bq1rk1/pp3ppp/2nbp3/3p3n/3P4/1P1B1NP1/PBPN1P1P/R2Q1RK1 b - - 0 10",
      "r1bq1rk1/pp4pp/2nbp3/3p1p1n/3P4/1P1B1NP1/PBPN1P1P/R2Q1RK1 w - - 0 11",
      "r1bq1rk1/pp4pp/2nbp3/3pNp1n/3P4/1P1B2P1/PBPN1P1P/R2Q1RK1 b - - 1 11",
      "r1bq1rk1/pp4pp/2nbpn2/3pNp2/3P4/1P1B2P1/PBPN1P1P/R2Q1RK1 w - - 2 12",
      "r1bq1rk1/pp4pp/2nbpn2/3pNp2/3P1P2/1P1B2P1/PBPN3P/R2Q1RK1 b - - 0 12",
      "r1bq1rk1/pp4pp/2n1pn2/3pbp2/3P1P2/1P1B2P1/PBPN3P/R2Q1RK1 w - - 0 13",
      "r1bq1rk1/pp4pp/2n1pn2/3pPp2/3P4/1P1B2P1/PBPN3P/R2Q1RK1 b - - 0 13",
      "r1bq1rk1/pp4pp/2n1p3/3pPp2/3P2n1/1P1B2P1/PBPN3P/R2Q1RK1 w - - 1 14",
      "r1bq1rk1/pp4pp/2n1p3/3pPp2/3P2n1/1P1B2P1/PBPNQ2P/R4RK1 b - - 2 14",
      "r1b2rk1/pp4pp/1qn1p3/3pPp2/3P2n1/1P1B2P1/PBPNQ2P/R4RK1 w - - 3 15",
      "r1b2rk1/pp4pp/1qn1p3/3pPp2/3P2n1/1P1B1NP1/PBP1Q2P/R4RK1 b - - 4 15",
      "r4rk1/pp1b2pp/1qn1p3/3pPp2/3P2n1/1P1B1NP1/PBP1Q2P/R4RK1 w - - 5 16",
      "r4rk1/pp1b2pp/1qn1p3/3pPp2/3P2n1/PP1B1NP1/1BP1Q2P/R4RK1 b - - 0 16",
      "r4r1k/pp1b2pp/1qn1p3/3pPp2/3P2n1/PP1B1NP1/1BP1Q2P/R4RK1 w - - 1 17",
      "r4r1k/pp1b2pp/1qn1p3/3pPp2/3P2n1/PP1B1NPP/1BP1Q3/R4RK1 b - - 0 17",
      "r4r1k/pp1b2pp/1qn1p2n/3pPp2/3P4/PP1B1NPP/1BP1Q3/R4RK1 w - - 1 18",
      "r4r1k/pp1b2pp/1qn1p2n/3pPp2/3P4/PP1B1NPP/1BP2Q2/R4RK1 b - - 2 18",
      "r4r1k/pp1b1npp/1qn1p3/3pPp2/3P4/PP1B1NPP/1BP2Q2/R4RK1 w - - 3 19",
      "r4r1k/pp1b1npp/1qn1p3/3pPp2/3P4/PP1B1NPP/1BP2QK1/R4R2 b - - 4 19",
      "r4r1k/pp1b1n1p/1qn1p3/3pPpp1/3P4/PP1B1NPP/1BP2QK1/R4R2 w - - 0 20",
      "r4r1k/pp1b1n1p/1qn1p3/3pPpp1/3P2P1/PP1B1N1P/1BP2QK1/R4R2 b - - 0 20",
      "r4r1k/pp1bnn1p/1q2p3/3pPpp1/3P2P1/PP1B1N1P/1BP2QK1/R4R2 w - - 1 21",
      "r4r1k/pp1bnn1p/1q2p3/3pPpp1/3P2P1/PP1BQN1P/1BP3K1/R4R2 b - - 2 21",
      "r5rk/pp1bnn1p/1q2p3/3pPpp1/3P2P1/PP1BQN1P/1BP3K1/R4R2 w - - 3 22",
      "r5rk/pp1bnn1p/1q2p3/3pPpp1/3P2P1/PP1BQN1P/1BP3K1/4RR2 b - - 4 22",
      "r5rk/pp1b1n1p/1q2p1n1/3pPpp1/3P2P1/PP1BQN1P/1BP3K1/4RR2 w - - 5 23",
      "r5rk/pp1b1n1p/1q2p1n1/3pPPp1/3P4/PP1BQN1P/1BP3K1/4RR2 b - - 0 23",
      "r5rk/pp1b1n1p/1q2p3/3pPPp1/3P1n2/PP1BQN1P/1BP3K1/4RR2 w - - 1 24",
      "r5rk/pp1b1n1p/1q2p3/3pPPp1/3P1n2/PP1BQN1P/1BP4K/4RR2 b - - 2 24",
      "r5rk/pp1b1n1p/1q2p3/3pPPp1/3P4/PP1nQN1P/1BP4K/4RR2 w - - 0 25",
      "r5rk/pp1b1n1p/1q2p3/3pPPp1/3P4/PP1Q1N1P/1BP4K/4RR2 b - - 0 25",
      "r5rk/pp1b1n1p/1q6/3pPpp1/3P4/PP1Q1N1P/1BP4K/4RR2 w - - 0 26",
      "r5rk/pp1b1n1p/1q6/3pPpp1/2PP4/PP1Q1N1P/1B5K/4RR2 b - - 0 26",
      "r5rk/pp1b1n1p/4q3/3pPpp1/2PP4/PP1Q1N1P/1B5K/4RR2 w - - 1 27",
      "r5rk/pp1b1n1p/4q3/3PPpp1/3P4/PP1Q1N1P/1B5K/4RR2 b - - 0 27",
      "r5rk/pp1b1n1p/8/3qPpp1/3P4/PP1Q1N1P/1B5K/4RR2 w - - 0 28",
      "r5rk/pp1b1n1p/4P3/3q1pp1/3P4/PP1Q1N1P/1B5K/4RR2 b - - 0 28",
      "r5rk/pp3n1p/4P3/1b1q1pp1/3P4/PP1Q1N1P/1B5K/4RR2 w - - 1 29",
      "r5rk/pp3n1p/4P3/1Q1q1pp1/3P4/PP3N1P/1B5K/4RR2 b - - 0 29",
      "r5rk/pp3n1p/4P3/1q3pp1/3P4/PP3N1P/1B5K/4RR2 w - - 0 30",
      "r5rk/pp3n1p/4P3/1q1P1pp1/8/PP3N1P/1B5K/4RR2 b - - 0 30",
      "r6k/pp3nrp/4P3/1q1P1pp1/8/PP3N1P/1B5K/4RR2 w - - 1 31",
      "r6k/pp3Prp/8/1q1P1pp1/8/PP3N1P/1B5K/4RR2 b - - 0 31",
      "r6k/pp3Pr1/7p/1q1P1pp1/8/PP3N1P/1B5K/4RR2 w - - 0 32",
      "r6k/pp3Pr1/7p/1q1P1pp1/3N4/PP5P/1B5K/4RR2 b - - 1 32",
      "r6k/pp3Pr1/7p/3P1pp1/3N4/PP5P/1B5K/4Rq2 w - - 0 33",
      "r6k/pp3Pr1/7p/3P1pp1/3N4/PP5P/1B5K/5R2 b - - 0 33",
      "r6k/pp3r2/7p/3P1pp1/3N4/PP5P/1B5K/5R2 w - - 0 34",
      "r6k/pp3r2/7p/3P1Rp1/3N4/PP5P/1B5K/8 b - - 0 34",
      "r6k/pp6/7p/3P1rp1/3N4/PP5P/1B5K/8 w - - 0 35",
      "r6k/pp6/7p/3P1Np1/8/PP5P/1B5K/8 b - - 0 35",
      "r7/pp5k/7p/3P1Np1/8/PP5P/1B5K/8 w - - 1 36",
      "r7/pp2N2k/7p/3P2p1/8/PP5P/1B5K/8 b - - 2 36",
      "5r2/pp2N2k/7p/3P2p1/8/PP5P/1B5K/8 w - - 3 37",
      "5r2/pp2N2k/7p/3P2p1/8/PP5P/1B4K1/8 b - - 4 37",
      "5r2/pp2N2k/8/3P2pp/8/PP5P/1B4K1/8 w - - 0 38",
      "5r2/pp2N2k/3P4/6pp/8/PP5P/1B4K1/8 b - - 0 38",
      "5r2/pp2N2k/3P4/7p/6p1/PP5P/1B4K1/8 w - - 0 39",
      "5r2/pp2N2k/3P4/7p/6P1/PP6/1B4K1/8 b - - 0 39",
      "5r2/pp2N2k/3P4/8/6p1/PP6/1B4K1/8 w - - 0 40",
      "5r2/pp2N2k/3P4/4B3/6p1/PP6/6K1/8 b - - 1 40",
      "5r2/pp2N3/3P3k/4B3/6p1/PP6/6K1/8 w - - 2 41",
      "5r2/pp1PN3/7k/4B3/6p1/PP6/6K1/8 b - - 0 41",
      "3r4/pp1PN3/7k/4B3/6p1/PP6/6K1/8 w - - 1 42",
      "3r2N1/pp1P4/7k/4B3/6p1/PP6/6K1/8 b - - 2 42",
      "6r1/pp1P4/7k/4B3/6p1/PP6/6K1/8 w - - 0 43",
      "6r1/pp1P4/5B1k/8/6p1/PP6/6K1/8 b - - 1 43",
      "6r1/pp1P4/5Bk1/8/6p1/PP6/6K1/8 w - - 2 44",
      "3Q2r1/pp6/5Bk1/8/6p1/PP6/6K1/8 b - - 0 44",
      "3r4/pp6/5Bk1/8/6p1/PP6/6K1/8 w - - 0 45",
      "3B4/pp6/6k1/8/6p1/PP6/6K1/8 b - - 0 45",
      "3B4/p7/6k1/1p6/6p1/PP6/6K1/8 w - - 0 46",
      "3B4/p7/6k1/1p6/6p1/PP6/5K2/8 b - - 1 46",
      "3B4/p7/8/1p3k2/6p1/PP6/5K2/8 w - - 2 47",
      "3B4/p7/8/1p3k2/6p1/PP2K3/8/8 b - - 3 47",
      "3B4/p7/8/1p2k3/6p1/PP2K3/8/8 w - - 4 48",
      "3B4/p7/8/1p2k3/6p1/PP1K4/8/8 b - - 5 48",
      "3B4/p7/8/1p1k4/6p1/PP1K4/8/8 w - - 6 49",
      "3B4/p7/8/1p1k4/6p1/PPK5/8/8 b - - 7 49",
      "3B4/p7/8/1p1k4/8/PPK3p1/8/8 w - - 0 50",
      "8/p7/8/1p1k4/7B/PPK3p1/8/8 b - - 1 50",
      "8/p7/8/1p1k4/7B/PPK5/6p1/8 w - - 0 51",
      "8/p7/8/1p1k4/8/PPK5/5Bp1/8 b - - 1 51",
      "8/8/8/pp1k4/8/PPK5/5Bp1/8 w - - 0 52",
      "8/8/8/pp1k4/1P6/P1K5/5Bp1/8 b - - 0 52",
      "8/8/8/pp6/1P2k3/P1K5/5Bp1/8 w - - 1 53",
      "8/8/1B6/pp6/1P2k3/P1K5/6p1/8 b - - 2 53",
      "8/8/1B6/pp1k4/1P6/P1K5/6p1/8 w - - 3 54",
      "8/8/1B6/pp1k4/1P6/P2K4/6p1/8 b - - 4 54",
      "8/8/1Bk5/pp6/1P6/P2K4/6p1/8 w - - 5 55",
      "8/8/2k5/pp6/1P6/P2K4/6p1/6B1 b - - 6 55",
      "8/8/8/pp1k4/1P6/P2K4/6p1/6B1 w - - 7 56",
      "8/8/8/pp1k4/1P6/P2K4/6pB/8 b - - 8 56",
      "8/8/2k5/pp6/1P6/P2K4/6pB/8 w - - 9 57",
      "8/8/2k5/pp6/1P1K4/P7/6pB/8 b - - 10 57",
      "8/8/2k5/1p6/pP1K4/P7/6pB/8 w - - 0 58",
      "8/8/2k5/1p2K3/pP6/P7/6pB/8 b - - 1 58",
      "8/8/1k6/1p2K3/pP6/P7/6pB/8 w - - 2 59",
      "8/8/1k6/1p1K4/pP6/P7/6pB/8 b - - 3 59",
      "8/8/k7/1p1K4/pP6/P7/6pB/8 w - - 4 60",
      "8/8/k7/1pK5/pP6/P7/6pB/8 b - - 5 60",
    ]
    for (index, history) in chess.getMoveHistory().enumerated() {
      XCTAssertEqual(history.fen, fens3[index], "Capablanca(g4): FEN move (index)")
    }

    pgn = pgns.removeFirst()
    chess = try pgn.validate()
    XCTAssertEqual(chess.getTag("Event")?.value, "Capablanca - Marshall", "Capablanca(g5): event")
    XCTAssertEqual(chess.getTag("White")?.value, "Frank James Marshall", "Capablanca(g5): white")
    XCTAssertEqual(chess.getTag("Black")?.value, "Jose Raul Capablanca", "Capablanca(g5): black")
    XCTAssertEqual(chess.getMoveCount(), 50, "Capablanca(g5): move count")
    XCTAssertEqual(
      chess.getMoveHistory().map { $0.pcn }.joined(separator: ","),
      "d2d4,d7d5,c2c4,e7e6,b1c3,c7c5,c4d5,e6d5,g1f3,b8c6,g2g3,c8e6,f1g2,f8e7,e1g1,g8f6,c1g5,f6e4,g5e7,d8e7,f3e5,c6d4,c3e4,d5e4,e2e3,d4f3,e5f3,e4f3,d1f3,e8g8,f1c1,a8b8,f3e4,e7c7,c1c3,b7b5,a2a3,c5c4,g2f3,f8d8,a1d1,d8d1,f3d1,b8d8,d1f3,g7g6,e4c6,c7e5,c6e4,e5e4,f3e4,d8d1,g1g2,a7a5,c3c2,b5b4,a3b4,a5b4,e4f3,d1b1,f3e2,b4b3,c2d2,b1c1,e2d1,c4c3,b2c3,b3b2,d2b2,c1d1,b2c2,e6f5,c2b2,d1c1,b2b3,f5e4,g2h3,c1c2,f2f4,h7h5,g3g4,h5g4,h3g4,c2h2,b3b4,f7f5,g4g3,h2e2,b4c4,e2e3,g3h4,g8g7,c4c7,g7f6,c7d7,e4g2,d7d6,f6g7",
      "Capablanca(g5): PCN move history"
    )
    let fens4 = [
      "rnbqkbnr/pppppppp/8/8/3P4/8/PPP1PPPP/RNBQKBNR b KQkq - 0 1",
      "rnbqkbnr/ppp1pppp/8/3p4/3P4/8/PPP1PPPP/RNBQKBNR w KQkq - 0 2",
      "rnbqkbnr/ppp1pppp/8/3p4/2PP4/8/PP2PPPP/RNBQKBNR b KQkq - 0 2",
      "rnbqkbnr/ppp2ppp/4p3/3p4/2PP4/8/PP2PPPP/RNBQKBNR w KQkq - 0 3",
      "rnbqkbnr/ppp2ppp/4p3/3p4/2PP4/2N5/PP2PPPP/R1BQKBNR b KQkq - 1 3",
      "rnbqkbnr/pp3ppp/4p3/2pp4/2PP4/2N5/PP2PPPP/R1BQKBNR w KQkq - 0 4",
      "rnbqkbnr/pp3ppp/4p3/2pP4/3P4/2N5/PP2PPPP/R1BQKBNR b KQkq - 0 4",
      "rnbqkbnr/pp3ppp/8/2pp4/3P4/2N5/PP2PPPP/R1BQKBNR w KQkq - 0 5",
      "rnbqkbnr/pp3ppp/8/2pp4/3P4/2N2N2/PP2PPPP/R1BQKB1R b KQkq - 1 5",
      "r1bqkbnr/pp3ppp/2n5/2pp4/3P4/2N2N2/PP2PPPP/R1BQKB1R w KQkq - 2 6",
      "r1bqkbnr/pp3ppp/2n5/2pp4/3P4/2N2NP1/PP2PP1P/R1BQKB1R b KQkq - 0 6",
      "r2qkbnr/pp3ppp/2n1b3/2pp4/3P4/2N2NP1/PP2PP1P/R1BQKB1R w KQkq - 1 7",
      "r2qkbnr/pp3ppp/2n1b3/2pp4/3P4/2N2NP1/PP2PPBP/R1BQK2R b KQkq - 2 7",
      "r2qk1nr/pp2bppp/2n1b3/2pp4/3P4/2N2NP1/PP2PPBP/R1BQK2R w KQkq - 3 8",
      "r2qk1nr/pp2bppp/2n1b3/2pp4/3P4/2N2NP1/PP2PPBP/R1BQ1RK1 b kq - 4 8",
      "r2qk2r/pp2bppp/2n1bn2/2pp4/3P4/2N2NP1/PP2PPBP/R1BQ1RK1 w kq - 5 9",
      "r2qk2r/pp2bppp/2n1bn2/2pp2B1/3P4/2N2NP1/PP2PPBP/R2Q1RK1 b kq - 6 9",
      "r2qk2r/pp2bppp/2n1b3/2pp2B1/3Pn3/2N2NP1/PP2PPBP/R2Q1RK1 w kq - 7 10",
      "r2qk2r/pp2Bppp/2n1b3/2pp4/3Pn3/2N2NP1/PP2PPBP/R2Q1RK1 b kq - 0 10",
      "r3k2r/pp2qppp/2n1b3/2pp4/3Pn3/2N2NP1/PP2PPBP/R2Q1RK1 w kq - 0 11",
      "r3k2r/pp2qppp/2n1b3/2ppN3/3Pn3/2N3P1/PP2PPBP/R2Q1RK1 b kq - 1 11",
      "r3k2r/pp2qppp/4b3/2ppN3/3nn3/2N3P1/PP2PPBP/R2Q1RK1 w kq - 0 12",
      "r3k2r/pp2qppp/4b3/2ppN3/3nN3/6P1/PP2PPBP/R2Q1RK1 b kq - 0 12",
      "r3k2r/pp2qppp/4b3/2p1N3/3np3/6P1/PP2PPBP/R2Q1RK1 w kq - 0 13",
      "r3k2r/pp2qppp/4b3/2p1N3/3np3/4P1P1/PP3PBP/R2Q1RK1 b kq - 0 13",
      "r3k2r/pp2qppp/4b3/2p1N3/4p3/4PnP1/PP3PBP/R2Q1RK1 w kq - 1 14",
      "r3k2r/pp2qppp/4b3/2p5/4p3/4PNP1/PP3PBP/R2Q1RK1 b kq - 0 14",
      "r3k2r/pp2qppp/4b3/2p5/8/4PpP1/PP3PBP/R2Q1RK1 w kq - 0 15",
      "r3k2r/pp2qppp/4b3/2p5/8/4PQP1/PP3PBP/R4RK1 b kq - 0 15",
      "r4rk1/pp2qppp/4b3/2p5/8/4PQP1/PP3PBP/R4RK1 w - - 1 16",
      "r4rk1/pp2qppp/4b3/2p5/8/4PQP1/PP3PBP/R1R3K1 b - - 2 16",
      "1r3rk1/pp2qppp/4b3/2p5/8/4PQP1/PP3PBP/R1R3K1 w - - 3 17",
      "1r3rk1/pp2qppp/4b3/2p5/4Q3/4P1P1/PP3PBP/R1R3K1 b - - 4 17",
      "1r3rk1/ppq2ppp/4b3/2p5/4Q3/4P1P1/PP3PBP/R1R3K1 w - - 5 18",
      "1r3rk1/ppq2ppp/4b3/2p5/4Q3/2R1P1P1/PP3PBP/R5K1 b - - 6 18",
      "1r3rk1/p1q2ppp/4b3/1pp5/4Q3/2R1P1P1/PP3PBP/R5K1 w - - 0 19",
      "1r3rk1/p1q2ppp/4b3/1pp5/4Q3/P1R1P1P1/1P3PBP/R5K1 b - - 0 19",
      "1r3rk1/p1q2ppp/4b3/1p6/2p1Q3/P1R1P1P1/1P3PBP/R5K1 w - - 0 20",
      "1r3rk1/p1q2ppp/4b3/1p6/2p1Q3/P1R1PBP1/1P3P1P/R5K1 b - - 1 20",
      "1r1r2k1/p1q2ppp/4b3/1p6/2p1Q3/P1R1PBP1/1P3P1P/R5K1 w - - 2 21",
      "1r1r2k1/p1q2ppp/4b3/1p6/2p1Q3/P1R1PBP1/1P3P1P/3R2K1 b - - 3 21",
      "1r4k1/p1q2ppp/4b3/1p6/2p1Q3/P1R1PBP1/1P3P1P/3r2K1 w - - 0 22",
      "1r4k1/p1q2ppp/4b3/1p6/2p1Q3/P1R1P1P1/1P3P1P/3B2K1 b - - 0 22",
      "3r2k1/p1q2ppp/4b3/1p6/2p1Q3/P1R1P1P1/1P3P1P/3B2K1 w - - 1 23",
      "3r2k1/p1q2ppp/4b3/1p6/2p1Q3/P1R1PBP1/1P3P1P/6K1 b - - 2 23",
      "3r2k1/p1q2p1p/4b1p1/1p6/2p1Q3/P1R1PBP1/1P3P1P/6K1 w - - 0 24",
      "3r2k1/p1q2p1p/2Q1b1p1/1p6/2p5/P1R1PBP1/1P3P1P/6K1 b - - 1 24",
      "3r2k1/p4p1p/2Q1b1p1/1p2q3/2p5/P1R1PBP1/1P3P1P/6K1 w - - 2 25",
      "3r2k1/p4p1p/4b1p1/1p2q3/2p1Q3/P1R1PBP1/1P3P1P/6K1 b - - 3 25",
      "3r2k1/p4p1p/4b1p1/1p6/2p1q3/P1R1PBP1/1P3P1P/6K1 w - - 0 26",
      "3r2k1/p4p1p/4b1p1/1p6/2p1B3/P1R1P1P1/1P3P1P/6K1 b - - 0 26",
      "6k1/p4p1p/4b1p1/1p6/2p1B3/P1R1P1P1/1P3P1P/3r2K1 w - - 1 27",
      "6k1/p4p1p/4b1p1/1p6/2p1B3/P1R1P1P1/1P3PKP/3r4 b - - 2 27",
      "6k1/5p1p/4b1p1/pp6/2p1B3/P1R1P1P1/1P3PKP/3r4 w - - 0 28",
      "6k1/5p1p/4b1p1/pp6/2p1B3/P3P1P1/1PR2PKP/3r4 b - - 1 28",
      "6k1/5p1p/4b1p1/p7/1pp1B3/P3P1P1/1PR2PKP/3r4 w - - 0 29",
      "6k1/5p1p/4b1p1/p7/1Pp1B3/4P1P1/1PR2PKP/3r4 b - - 0 29",
      "6k1/5p1p/4b1p1/8/1pp1B3/4P1P1/1PR2PKP/3r4 w - - 0 30",
      "6k1/5p1p/4b1p1/8/1pp5/4PBP1/1PR2PKP/3r4 b - - 1 30",
      "6k1/5p1p/4b1p1/8/1pp5/4PBP1/1PR2PKP/1r6 w - - 2 31",
      "6k1/5p1p/4b1p1/8/1pp5/4P1P1/1PR1BPKP/1r6 b - - 3 31",
      "6k1/5p1p/4b1p1/8/2p5/1p2P1P1/1PR1BPKP/1r6 w - - 0 32",
      "6k1/5p1p/4b1p1/8/2p5/1p2P1P1/1P1RBPKP/1r6 b - - 1 32",
      "6k1/5p1p/4b1p1/8/2p5/1p2P1P1/1P1RBPKP/2r5 w - - 2 33",
      "6k1/5p1p/4b1p1/8/2p5/1p2P1P1/1P1R1PKP/2rB4 b - - 3 33",
      "6k1/5p1p/4b1p1/8/8/1pp1P1P1/1P1R1PKP/2rB4 w - - 0 34",
      "6k1/5p1p/4b1p1/8/8/1pP1P1P1/3R1PKP/2rB4 b - - 0 34",
      "6k1/5p1p/4b1p1/8/8/2P1P1P1/1p1R1PKP/2rB4 w - - 0 35",
      "6k1/5p1p/4b1p1/8/8/2P1P1P1/1R3PKP/2rB4 b - - 0 35",
      "6k1/5p1p/4b1p1/8/8/2P1P1P1/1R3PKP/3r4 w - - 0 36",
      "6k1/5p1p/4b1p1/8/8/2P1P1P1/2R2PKP/3r4 b - - 1 36",
      "6k1/5p1p/6p1/5b2/8/2P1P1P1/2R2PKP/3r4 w - - 2 37",
      "6k1/5p1p/6p1/5b2/8/2P1P1P1/1R3PKP/3r4 b - - 3 37",
      "6k1/5p1p/6p1/5b2/8/2P1P1P1/1R3PKP/2r5 w - - 4 38",
      "6k1/5p1p/6p1/5b2/8/1RP1P1P1/5PKP/2r5 b - - 5 38",
      "6k1/5p1p/6p1/8/4b3/1RP1P1P1/5PKP/2r5 w - - 6 39",
      "6k1/5p1p/6p1/8/4b3/1RP1P1PK/5P1P/2r5 b - - 7 39",
      "6k1/5p1p/6p1/8/4b3/1RP1P1PK/2r2P1P/8 w - - 8 40",
      "6k1/5p1p/6p1/8/4bP2/1RP1P1PK/2r4P/8 b - - 0 40",
      "6k1/5p2/6p1/7p/4bP2/1RP1P1PK/2r4P/8 w - - 0 41",
      "6k1/5p2/6p1/7p/4bPP1/1RP1P2K/2r4P/8 b - - 0 41",
      "6k1/5p2/6p1/8/4bPp1/1RP1P2K/2r4P/8 w - - 0 42",
      "6k1/5p2/6p1/8/4bPK1/1RP1P3/2r4P/8 b - - 0 42",
      "6k1/5p2/6p1/8/4bPK1/1RP1P3/7r/8 w - - 0 43",
      "6k1/5p2/6p1/8/1R2bPK1/2P1P3/7r/8 b - - 1 43",
      "6k1/8/6p1/5p2/1R2bPK1/2P1P3/7r/8 w - - 0 44",
      "6k1/8/6p1/5p2/1R2bP2/2P1P1K1/7r/8 b - - 1 44",
      "6k1/8/6p1/5p2/1R2bP2/2P1P1K1/4r3/8 w - - 2 45",
      "6k1/8/6p1/5p2/2R1bP2/2P1P1K1/4r3/8 b - - 3 45",
      "6k1/8/6p1/5p2/2R1bP2/2P1r1K1/8/8 w - - 0 46",
      "6k1/8/6p1/5p2/2R1bP1K/2P1r3/8/8 b - - 1 46",
      "8/6k1/6p1/5p2/2R1bP1K/2P1r3/8/8 w - - 2 47",
      "8/2R3k1/6p1/5p2/4bP1K/2P1r3/8/8 b - - 3 47",
      "8/2R5/5kp1/5p2/4bP1K/2P1r3/8/8 w - - 4 48",
      "8/3R4/5kp1/5p2/4bP1K/2P1r3/8/8 b - - 5 48",
      "8/3R4/5kp1/5p2/5P1K/2P1r3/6b1/8 w - - 6 49",
      "8/8/3R1kp1/5p2/5P1K/2P1r3/6b1/8 b - - 7 49",
      "8/6k1/3R2p1/5p2/5P1K/2P1r3/6b1/8 w - - 8 50",
    ]
    for (index, history) in chess.getMoveHistory().enumerated() {
      XCTAssertEqual(history.fen, fens4[index], "Capablanca(g5): FEN move (index)")
    }

    pgn = pgns.removeFirst()
    chess = try pgn.validate()
    XCTAssertEqual(chess.getTag("Event")?.value, "New York", "Capablanca(g6): event")
    XCTAssertEqual(chess.getTag("White")?.value, "Savielly Tartakower", "Capablanca(g6): white")
    XCTAssertEqual(chess.getTag("Black")?.value, "Jose Raul Capablanca", "Capablanca(g6): black")
    XCTAssertEqual(chess.getMoveCount(), 31, "Capablanca(g6): move count")
    XCTAssertEqual(
      chess.getMoveHistory().map { $0.pcn }.joined(separator: ","),
      "e2e4,e7e5,f2f4,e5f4,f1e2,d7d5,e4d5,g8f6,c2c4,c7c6,d2d4,f8b4,e1f1,c6d5,c1f4,d5c4,f4b8,f6d5,f1f2,a8b8,e2c4,e8g8,g1f3,d5f6,b1c3,b7b5,c4d3,f6g4,f2g1,c8b7,d3f5,b7f3,g2f3,g4e3,f5h7,g8h8,d1d3,b4c3,b2c3,e3d5,h7e4,d5f4,d3d2,d8h4,g1f1,f7f5,e4c6,f8f6,d4d5,b8d8,a1d1,f6c6,d5c6,d8d2,d1d2,f4e6,d2d6,h4c4,f1g2,c4e2",
      "Capablanca(g6): PCN move history"
    )
    let fens5 = [
      "rnbqkbnr/pppppppp/8/8/4P3/8/PPPP1PPP/RNBQKBNR b KQkq - 0 1",
      "rnbqkbnr/pppp1ppp/8/4p3/4P3/8/PPPP1PPP/RNBQKBNR w KQkq - 0 2",
      "rnbqkbnr/pppp1ppp/8/4p3/4PP2/8/PPPP2PP/RNBQKBNR b KQkq - 0 2",
      "rnbqkbnr/pppp1ppp/8/8/4Pp2/8/PPPP2PP/RNBQKBNR w KQkq - 0 3",
      "rnbqkbnr/pppp1ppp/8/8/4Pp2/8/PPPPB1PP/RNBQK1NR b KQkq - 1 3",
      "rnbqkbnr/ppp2ppp/8/3p4/4Pp2/8/PPPPB1PP/RNBQK1NR w KQkq - 0 4",
      "rnbqkbnr/ppp2ppp/8/3P4/5p2/8/PPPPB1PP/RNBQK1NR b KQkq - 0 4",
      "rnbqkb1r/ppp2ppp/5n2/3P4/5p2/8/PPPPB1PP/RNBQK1NR w KQkq - 1 5",
      "rnbqkb1r/ppp2ppp/5n2/3P4/2P2p2/8/PP1PB1PP/RNBQK1NR b KQkq - 0 5",
      "rnbqkb1r/pp3ppp/2p2n2/3P4/2P2p2/8/PP1PB1PP/RNBQK1NR w KQkq - 0 6",
      "rnbqkb1r/pp3ppp/2p2n2/3P4/2PP1p2/8/PP2B1PP/RNBQK1NR b KQkq - 0 6",
      "rnbqk2r/pp3ppp/2p2n2/3P4/1bPP1p2/8/PP2B1PP/RNBQK1NR w KQkq - 1 7",
      "rnbqk2r/pp3ppp/2p2n2/3P4/1bPP1p2/8/PP2B1PP/RNBQ1KNR b kq - 2 7",
      "rnbqk2r/pp3ppp/5n2/3p4/1bPP1p2/8/PP2B1PP/RNBQ1KNR w kq - 0 8",
      "rnbqk2r/pp3ppp/5n2/3p4/1bPP1B2/8/PP2B1PP/RN1Q1KNR b kq - 0 8",
      "rnbqk2r/pp3ppp/5n2/8/1bpP1B2/8/PP2B1PP/RN1Q1KNR w kq - 0 9",
      "rBbqk2r/pp3ppp/5n2/8/1bpP4/8/PP2B1PP/RN1Q1KNR b kq - 0 9",
      "rBbqk2r/pp3ppp/8/3n4/1bpP4/8/PP2B1PP/RN1Q1KNR w kq - 1 10",
      "rBbqk2r/pp3ppp/8/3n4/1bpP4/8/PP2BKPP/RN1Q2NR b kq - 2 10",
      "1rbqk2r/pp3ppp/8/3n4/1bpP4/8/PP2BKPP/RN1Q2NR w k - 0 11",
      "1rbqk2r/pp3ppp/8/3n4/1bBP4/8/PP3KPP/RN1Q2NR b k - 0 11",
      "1rbq1rk1/pp3ppp/8/3n4/1bBP4/8/PP3KPP/RN1Q2NR w - - 1 12",
      "1rbq1rk1/pp3ppp/8/3n4/1bBP4/5N2/PP3KPP/RN1Q3R b - - 2 12",
      "1rbq1rk1/pp3ppp/5n2/8/1bBP4/5N2/PP3KPP/RN1Q3R w - - 3 13",
      "1rbq1rk1/pp3ppp/5n2/8/1bBP4/2N2N2/PP3KPP/R2Q3R b - - 4 13",
      "1rbq1rk1/p4ppp/5n2/1p6/1bBP4/2N2N2/PP3KPP/R2Q3R w - - 0 14",
      "1rbq1rk1/p4ppp/5n2/1p6/1b1P4/2NB1N2/PP3KPP/R2Q3R b - - 1 14",
      "1rbq1rk1/p4ppp/8/1p6/1b1P2n1/2NB1N2/PP3KPP/R2Q3R w - - 2 15",
      "1rbq1rk1/p4ppp/8/1p6/1b1P2n1/2NB1N2/PP4PP/R2Q2KR b - - 3 15",
      "1r1q1rk1/pb3ppp/8/1p6/1b1P2n1/2NB1N2/PP4PP/R2Q2KR w - - 4 16",
      "1r1q1rk1/pb3ppp/8/1p3B2/1b1P2n1/2N2N2/PP4PP/R2Q2KR b - - 5 16",
      "1r1q1rk1/p4ppp/8/1p3B2/1b1P2n1/2N2b2/PP4PP/R2Q2KR w - - 0 17",
      "1r1q1rk1/p4ppp/8/1p3B2/1b1P2n1/2N2P2/PP5P/R2Q2KR b - - 0 17",
      "1r1q1rk1/p4ppp/8/1p3B2/1b1P4/2N1nP2/PP5P/R2Q2KR w - - 1 18",
      "1r1q1rk1/p4ppB/8/1p6/1b1P4/2N1nP2/PP5P/R2Q2KR b - - 0 18",
      "1r1q1r1k/p4ppB/8/1p6/1b1P4/2N1nP2/PP5P/R2Q2KR w - - 1 19",
      "1r1q1r1k/p4ppB/8/1p6/1b1P4/2NQnP2/PP5P/R5KR b - - 2 19",
      "1r1q1r1k/p4ppB/8/1p6/3P4/2bQnP2/PP5P/R5KR w - - 0 20",
      "1r1q1r1k/p4ppB/8/1p6/3P4/2PQnP2/P6P/R5KR b - - 0 20",
      "1r1q1r1k/p4ppB/8/1p1n4/3P4/2PQ1P2/P6P/R5KR w - - 1 21",
      "1r1q1r1k/p4pp1/8/1p1n4/3PB3/2PQ1P2/P6P/R5KR b - - 2 21",
      "1r1q1r1k/p4pp1/8/1p6/3PBn2/2PQ1P2/P6P/R5KR w - - 3 22",
      "1r1q1r1k/p4pp1/8/1p6/3PBn2/2P2P2/P2Q3P/R5KR b - - 4 22",
      "1r3r1k/p4pp1/8/1p6/3PBn1q/2P2P2/P2Q3P/R5KR w - - 5 23",
      "1r3r1k/p4pp1/8/1p6/3PBn1q/2P2P2/P2Q3P/R4K1R b - - 6 23",
      "1r3r1k/p5p1/8/1p3p2/3PBn1q/2P2P2/P2Q3P/R4K1R w - - 0 24",
      "1r3r1k/p5p1/2B5/1p3p2/3P1n1q/2P2P2/P2Q3P/R4K1R b - - 1 24",
      "1r5k/p5p1/2B2r2/1p3p2/3P1n1q/2P2P2/P2Q3P/R4K1R w - - 2 25",
      "1r5k/p5p1/2B2r2/1p1P1p2/5n1q/2P2P2/P2Q3P/R4K1R b - - 0 25",
      "3r3k/p5p1/2B2r2/1p1P1p2/5n1q/2P2P2/P2Q3P/R4K1R w - - 1 26",
      "3r3k/p5p1/2B2r2/1p1P1p2/5n1q/2P2P2/P2Q3P/3R1K1R b - - 2 26",
      "3r3k/p5p1/2r5/1p1P1p2/5n1q/2P2P2/P2Q3P/3R1K1R w - - 0 27",
      "3r3k/p5p1/2P5/1p3p2/5n1q/2P2P2/P2Q3P/3R1K1R b - - 0 27",
      "7k/p5p1/2P5/1p3p2/5n1q/2P2P2/P2r3P/3R1K1R w - - 0 28",
      "7k/p5p1/2P5/1p3p2/5n1q/2P2P2/P2R3P/5K1R b - - 0 28",
      "7k/p5p1/2P1n3/1p3p2/7q/2P2P2/P2R3P/5K1R w - - 1 29",
      "7k/p5p1/2PRn3/1p3p2/7q/2P2P2/P6P/5K1R b - - 2 29",
      "7k/p5p1/2PRn3/1p3p2/2q5/2P2P2/P6P/5K1R w - - 3 30",
      "7k/p5p1/2PRn3/1p3p2/2q5/2P2P2/P5KP/7R b - - 4 30",
      "7k/p5p1/2PRn3/1p3p2/8/2P2P2/P3q1KP/7R w - - 5 31",
    ]
    for (index, history) in chess.getMoveHistory().enumerated() {
      XCTAssertEqual(history.fen, fens5[index], "Capablanca(g6): FEN move (index)")
    }

    pgn = pgns.removeFirst()
    chess = try pgn.validate()
    XCTAssertEqual(chess.getTag("Event")?.value, "New York", "Capablanca(g7): event")
    XCTAssertEqual(chess.getTag("White")?.value, "Aron Nimzowitsch", "Capablanca(g7): white")
    XCTAssertEqual(chess.getTag("Black")?.value, "Jose Raul Capablanca", "Capablanca(g7): black")
    XCTAssertEqual(chess.getMoveCount(), 42, "Capablanca(g7): move count")
    XCTAssertEqual(
      chess.getMoveHistory().map { $0.pcn }.joined(separator: ","),
      "c2c4,g8f6,g1f3,e7e6,d2d4,d7d5,e2e3,f8e7,b1d2,e8g8,f1d3,c7c5,d4c5,b8a6,e1g1,a6c5,d3e2,b7b6,c4d5,f6d5,d2b3,c8b7,b3c5,e7c5,d1a4,d8f6,e2a6,b7a6,a4a6,d5b4,a6e2,f8d8,a2a3,b4d3,f3e1,d3e1,f1e1,a8c8,a1b1,f6e5,g2g3,e5d5,b2b4,c5f8,c1b2,d5a2,b1a1,a2b3,b2d4,c8c2,e2a6,e6e5,d4e5,d8d2,a6b7,d2f2,g3g4,b3e6,e5g3,f2h2,b7f3,h2g2,f3g2,c2g2,g1g2,e6g4,a1d1,h7h5,d1d4,g4g5,g2h2,a7a5,e1e2,a5b4,a3b4,f8e7,d4e4,e7f6,e2f2,g5d5,e4e8,g8h7",
      "Capablanca(g7): PCN move history"
    )
    let fens6 = [
      "rnbqkbnr/pppppppp/8/8/2P5/8/PP1PPPPP/RNBQKBNR b KQkq - 0 1",
      "rnbqkb1r/pppppppp/5n2/8/2P5/8/PP1PPPPP/RNBQKBNR w KQkq - 1 2",
      "rnbqkb1r/pppppppp/5n2/8/2P5/5N2/PP1PPPPP/RNBQKB1R b KQkq - 2 2",
      "rnbqkb1r/pppp1ppp/4pn2/8/2P5/5N2/PP1PPPPP/RNBQKB1R w KQkq - 0 3",
      "rnbqkb1r/pppp1ppp/4pn2/8/2PP4/5N2/PP2PPPP/RNBQKB1R b KQkq - 0 3",
      "rnbqkb1r/ppp2ppp/4pn2/3p4/2PP4/5N2/PP2PPPP/RNBQKB1R w KQkq - 0 4",
      "rnbqkb1r/ppp2ppp/4pn2/3p4/2PP4/4PN2/PP3PPP/RNBQKB1R b KQkq - 0 4",
      "rnbqk2r/ppp1bppp/4pn2/3p4/2PP4/4PN2/PP3PPP/RNBQKB1R w KQkq - 1 5",
      "rnbqk2r/ppp1bppp/4pn2/3p4/2PP4/4PN2/PP1N1PPP/R1BQKB1R b KQkq - 2 5",
      "rnbq1rk1/ppp1bppp/4pn2/3p4/2PP4/4PN2/PP1N1PPP/R1BQKB1R w KQ - 3 6",
      "rnbq1rk1/ppp1bppp/4pn2/3p4/2PP4/3BPN2/PP1N1PPP/R1BQK2R b KQ - 4 6",
      "rnbq1rk1/pp2bppp/4pn2/2pp4/2PP4/3BPN2/PP1N1PPP/R1BQK2R w KQ - 0 7",
      "rnbq1rk1/pp2bppp/4pn2/2Pp4/2P5/3BPN2/PP1N1PPP/R1BQK2R b KQ - 0 7",
      "r1bq1rk1/pp2bppp/n3pn2/2Pp4/2P5/3BPN2/PP1N1PPP/R1BQK2R w KQ - 1 8",
      "r1bq1rk1/pp2bppp/n3pn2/2Pp4/2P5/3BPN2/PP1N1PPP/R1BQ1RK1 b - - 2 8",
      "r1bq1rk1/pp2bppp/4pn2/2np4/2P5/3BPN2/PP1N1PPP/R1BQ1RK1 w - - 0 9",
      "r1bq1rk1/pp2bppp/4pn2/2np4/2P5/4PN2/PP1NBPPP/R1BQ1RK1 b - - 1 9",
      "r1bq1rk1/p3bppp/1p2pn2/2np4/2P5/4PN2/PP1NBPPP/R1BQ1RK1 w - - 0 10",
      "r1bq1rk1/p3bppp/1p2pn2/2nP4/8/4PN2/PP1NBPPP/R1BQ1RK1 b - - 0 10",
      "r1bq1rk1/p3bppp/1p2p3/2nn4/8/4PN2/PP1NBPPP/R1BQ1RK1 w - - 0 11",
      "r1bq1rk1/p3bppp/1p2p3/2nn4/8/1N2PN2/PP2BPPP/R1BQ1RK1 b - - 1 11",
      "r2q1rk1/pb2bppp/1p2p3/2nn4/8/1N2PN2/PP2BPPP/R1BQ1RK1 w - - 2 12",
      "r2q1rk1/pb2bppp/1p2p3/2Nn4/8/4PN2/PP2BPPP/R1BQ1RK1 b - - 0 12",
      "r2q1rk1/pb3ppp/1p2p3/2bn4/8/4PN2/PP2BPPP/R1BQ1RK1 w - - 0 13",
      "r2q1rk1/pb3ppp/1p2p3/2bn4/Q7/4PN2/PP2BPPP/R1B2RK1 b - - 1 13",
      "r4rk1/pb3ppp/1p2pq2/2bn4/Q7/4PN2/PP2BPPP/R1B2RK1 w - - 2 14",
      "r4rk1/pb3ppp/Bp2pq2/2bn4/Q7/4PN2/PP3PPP/R1B2RK1 b - - 3 14",
      "r4rk1/p4ppp/bp2pq2/2bn4/Q7/4PN2/PP3PPP/R1B2RK1 w - - 0 15",
      "r4rk1/p4ppp/Qp2pq2/2bn4/8/4PN2/PP3PPP/R1B2RK1 b - - 0 15",
      "r4rk1/p4ppp/Qp2pq2/2b5/1n6/4PN2/PP3PPP/R1B2RK1 w - - 1 16",
      "r4rk1/p4ppp/1p2pq2/2b5/1n6/4PN2/PP2QPPP/R1B2RK1 b - - 2 16",
      "r2r2k1/p4ppp/1p2pq2/2b5/1n6/4PN2/PP2QPPP/R1B2RK1 w - - 3 17",
      "r2r2k1/p4ppp/1p2pq2/2b5/1n6/P3PN2/1P2QPPP/R1B2RK1 b - - 0 17",
      "r2r2k1/p4ppp/1p2pq2/2b5/8/P2nPN2/1P2QPPP/R1B2RK1 w - - 1 18",
      "r2r2k1/p4ppp/1p2pq2/2b5/8/P2nP3/1P2QPPP/R1B1NRK1 b - - 2 18",
      "r2r2k1/p4ppp/1p2pq2/2b5/8/P3P3/1P2QPPP/R1B1nRK1 w - - 0 19",
      "r2r2k1/p4ppp/1p2pq2/2b5/8/P3P3/1P2QPPP/R1B1R1K1 b - - 0 19",
      "2rr2k1/p4ppp/1p2pq2/2b5/8/P3P3/1P2QPPP/R1B1R1K1 w - - 1 20",
      "2rr2k1/p4ppp/1p2pq2/2b5/8/P3P3/1P2QPPP/1RB1R1K1 b - - 2 20",
      "2rr2k1/p4ppp/1p2p3/2b1q3/8/P3P3/1P2QPPP/1RB1R1K1 w - - 3 21",
      "2rr2k1/p4ppp/1p2p3/2b1q3/8/P3P1P1/1P2QP1P/1RB1R1K1 b - - 0 21",
      "2rr2k1/p4ppp/1p2p3/2bq4/8/P3P1P1/1P2QP1P/1RB1R1K1 w - - 1 22",
      "2rr2k1/p4ppp/1p2p3/2bq4/1P6/P3P1P1/4QP1P/1RB1R1K1 b - - 0 22",
      "2rr1bk1/p4ppp/1p2p3/3q4/1P6/P3P1P1/4QP1P/1RB1R1K1 w - - 1 23",
      "2rr1bk1/p4ppp/1p2p3/3q4/1P6/P3P1P1/1B2QP1P/1R2R1K1 b - - 2 23",
      "2rr1bk1/p4ppp/1p2p3/8/1P6/P3P1P1/qB2QP1P/1R2R1K1 w - - 3 24",
      "2rr1bk1/p4ppp/1p2p3/8/1P6/P3P1P1/qB2QP1P/R3R1K1 b - - 4 24",
      "2rr1bk1/p4ppp/1p2p3/8/1P6/Pq2P1P1/1B2QP1P/R3R1K1 w - - 5 25",
      "2rr1bk1/p4ppp/1p2p3/8/1P1B4/Pq2P1P1/4QP1P/R3R1K1 b - - 6 25",
      "3r1bk1/p4ppp/1p2p3/8/1P1B4/Pq2P1P1/2r1QP1P/R3R1K1 w - - 7 26",
      "3r1bk1/p4ppp/Qp2p3/8/1P1B4/Pq2P1P1/2r2P1P/R3R1K1 b - - 8 26",
      "3r1bk1/p4ppp/Qp6/4p3/1P1B4/Pq2P1P1/2r2P1P/R3R1K1 w - - 0 27",
      "3r1bk1/p4ppp/Qp6/4B3/1P6/Pq2P1P1/2r2P1P/R3R1K1 b - - 0 27",
      "5bk1/p4ppp/Qp6/4B3/1P6/Pq2P1P1/2rr1P1P/R3R1K1 w - - 1 28",
      "5bk1/pQ3ppp/1p6/4B3/1P6/Pq2P1P1/2rr1P1P/R3R1K1 b - - 2 28",
      "5bk1/pQ3ppp/1p6/4B3/1P6/Pq2P1P1/2r2r1P/R3R1K1 w - - 0 29",
      "5bk1/pQ3ppp/1p6/4B3/1P4P1/Pq2P3/2r2r1P/R3R1K1 b - - 0 29",
      "5bk1/pQ3ppp/1p2q3/4B3/1P4P1/P3P3/2r2r1P/R3R1K1 w - - 1 30",
      "5bk1/pQ3ppp/1p2q3/8/1P4P1/P3P1B1/2r2r1P/R3R1K1 b - - 2 30",
      "5bk1/pQ3ppp/1p2q3/8/1P4P1/P3P1B1/2r4r/R3R1K1 w - - 0 31",
      "5bk1/p4ppp/1p2q3/8/1P4P1/P3PQB1/2r4r/R3R1K1 b - - 1 31",
      "5bk1/p4ppp/1p2q3/8/1P4P1/P3PQB1/2r3r1/R3R1K1 w - - 2 32",
      "5bk1/p4ppp/1p2q3/8/1P4P1/P3P1B1/2r3Q1/R3R1K1 b - - 0 32",
      "5bk1/p4ppp/1p2q3/8/1P4P1/P3P1B1/6r1/R3R1K1 w - - 0 33",
      "5bk1/p4ppp/1p2q3/8/1P4P1/P3P1B1/6K1/R3R3 b - - 0 33",
      "5bk1/p4ppp/1p6/8/1P4q1/P3P1B1/6K1/R3R3 w - - 0 34",
      "5bk1/p4ppp/1p6/8/1P4q1/P3P1B1/6K1/3RR3 b - - 1 34",
      "5bk1/p4pp1/1p6/7p/1P4q1/P3P1B1/6K1/3RR3 w - - 0 35",
      "5bk1/p4pp1/1p6/7p/1P1R2q1/P3P1B1/6K1/4R3 b - - 1 35",
      "5bk1/p4pp1/1p6/6qp/1P1R4/P3P1B1/6K1/4R3 w - - 2 36",
      "5bk1/p4pp1/1p6/6qp/1P1R4/P3P1B1/7K/4R3 b - - 3 36",
      "5bk1/5pp1/1p6/p5qp/1P1R4/P3P1B1/7K/4R3 w - - 0 37",
      "5bk1/5pp1/1p6/p5qp/1P1R4/P3P1B1/4R2K/8 b - - 1 37",
      "5bk1/5pp1/1p6/6qp/1p1R4/P3P1B1/4R2K/8 w - - 0 38",
      "5bk1/5pp1/1p6/6qp/1P1R4/4P1B1/4R2K/8 b - - 0 38",
      "6k1/4bpp1/1p6/6qp/1P1R4/4P1B1/4R2K/8 w - - 1 39",
      "6k1/4bpp1/1p6/6qp/1P2R3/4P1B1/4R2K/8 b - - 2 39",
      "6k1/5pp1/1p3b2/6qp/1P2R3/4P1B1/4R2K/8 w - - 3 40",
      "6k1/5pp1/1p3b2/6qp/1P2R3/4P1B1/5R1K/8 b - - 4 40",
      "6k1/5pp1/1p3b2/3q3p/1P2R3/4P1B1/5R1K/8 w - - 5 41",
      "4R1k1/5pp1/1p3b2/3q3p/1P6/4P1B1/5R1K/8 b - - 6 41",
      "4R3/5ppk/1p3b2/3q3p/1P6/4P1B1/5R1K/8 w - - 7 42",
    ]
    for (index, history) in chess.getMoveHistory().enumerated() {
      XCTAssertEqual(history.fen, fens6[index], "Capablanca(g7): FEN move (index)")
    }

    pgn = pgns.removeFirst()
    chess = try pgn.validate()
    XCTAssertEqual(chess.getTag("Event")?.value, "Margate", "Capablanca(g8): event")
    XCTAssertEqual(chess.getTag("White")?.value, "Edward G Sergeant", "Capablanca(g8): white")
    XCTAssertEqual(chess.getTag("Black")?.value, "Jose Raul Capablanca", "Capablanca(g8): black")
    XCTAssertEqual(chess.getMoveCount(), 40, "Capablanca(g8): move count")
    XCTAssertEqual(
      chess.getMoveHistory().map { $0.pcn }.joined(separator: ","),
      "e2e4,e7e6,d2d4,d7d5,b1c3,f8b4,e4d5,e6d5,f1d3,g8e7,g1f3,c8g4,e1g1,b8c6,c3e2,b4d6,c2c3,d8d7,e2g3,h7h5,f1e1,e8c8,h2h3,h5h4,g3f1,g4h5,d3e2,e7g6,f3g5,h5e2,e1e2,d8e8,e2e8,h8e8,c1e3,g6f4,d1g4,d7g4,h3g4,f7f6,e3f4,d6f4,g5f3,e8e2,a1b1,g7g5,f3e1,c6a5,e1d3,a5c4,b2b3,c4d6,b1b2,e2b2,d3b2,c8d7,f2f3,b7b6,g1f2,d6b5,b2d1,c7c5,a2a4,b5c7,f2e2,c7e6,e2d3,d7c6,d1e3,f4c7,f1d2,e6f4,d3c2,f4g2,e3g2,h4h3,g2e3,h3h2",
      "Capablanca(g8): PCN move history"
    )
    let fens7 = [
      "rnbqkbnr/pppppppp/8/8/4P3/8/PPPP1PPP/RNBQKBNR b KQkq - 0 1",
      "rnbqkbnr/pppp1ppp/4p3/8/4P3/8/PPPP1PPP/RNBQKBNR w KQkq - 0 2",
      "rnbqkbnr/pppp1ppp/4p3/8/3PP3/8/PPP2PPP/RNBQKBNR b KQkq - 0 2",
      "rnbqkbnr/ppp2ppp/4p3/3p4/3PP3/8/PPP2PPP/RNBQKBNR w KQkq - 0 3",
      "rnbqkbnr/ppp2ppp/4p3/3p4/3PP3/2N5/PPP2PPP/R1BQKBNR b KQkq - 1 3",
      "rnbqk1nr/ppp2ppp/4p3/3p4/1b1PP3/2N5/PPP2PPP/R1BQKBNR w KQkq - 2 4",
      "rnbqk1nr/ppp2ppp/4p3/3P4/1b1P4/2N5/PPP2PPP/R1BQKBNR b KQkq - 0 4",
      "rnbqk1nr/ppp2ppp/8/3p4/1b1P4/2N5/PPP2PPP/R1BQKBNR w KQkq - 0 5",
      "rnbqk1nr/ppp2ppp/8/3p4/1b1P4/2NB4/PPP2PPP/R1BQK1NR b KQkq - 1 5",
      "rnbqk2r/ppp1nppp/8/3p4/1b1P4/2NB4/PPP2PPP/R1BQK1NR w KQkq - 2 6",
      "rnbqk2r/ppp1nppp/8/3p4/1b1P4/2NB1N2/PPP2PPP/R1BQK2R b KQkq - 3 6",
      "rn1qk2r/ppp1nppp/8/3p4/1b1P2b1/2NB1N2/PPP2PPP/R1BQK2R w KQkq - 4 7",
      "rn1qk2r/ppp1nppp/8/3p4/1b1P2b1/2NB1N2/PPP2PPP/R1BQ1RK1 b kq - 5 7",
      "r2qk2r/ppp1nppp/2n5/3p4/1b1P2b1/2NB1N2/PPP2PPP/R1BQ1RK1 w kq - 6 8",
      "r2qk2r/ppp1nppp/2n5/3p4/1b1P2b1/3B1N2/PPP1NPPP/R1BQ1RK1 b kq - 7 8",
      "r2qk2r/ppp1nppp/2nb4/3p4/3P2b1/3B1N2/PPP1NPPP/R1BQ1RK1 w kq - 8 9",
      "r2qk2r/ppp1nppp/2nb4/3p4/3P2b1/2PB1N2/PP2NPPP/R1BQ1RK1 b kq - 0 9",
      "r3k2r/pppqnppp/2nb4/3p4/3P2b1/2PB1N2/PP2NPPP/R1BQ1RK1 w kq - 1 10",
      "r3k2r/pppqnppp/2nb4/3p4/3P2b1/2PB1NN1/PP3PPP/R1BQ1RK1 b kq - 2 10",
      "r3k2r/pppqnpp1/2nb4/3p3p/3P2b1/2PB1NN1/PP3PPP/R1BQ1RK1 w kq - 0 11",
      "r3k2r/pppqnpp1/2nb4/3p3p/3P2b1/2PB1NN1/PP3PPP/R1BQR1K1 b kq - 1 11",
      "2kr3r/pppqnpp1/2nb4/3p3p/3P2b1/2PB1NN1/PP3PPP/R1BQR1K1 w - - 2 12",
      "2kr3r/pppqnpp1/2nb4/3p3p/3P2b1/2PB1NNP/PP3PP1/R1BQR1K1 b - - 0 12",
      "2kr3r/pppqnpp1/2nb4/3p4/3P2bp/2PB1NNP/PP3PP1/R1BQR1K1 w - - 0 13",
      "2kr3r/pppqnpp1/2nb4/3p4/3P2bp/2PB1N1P/PP3PP1/R1BQRNK1 b - - 1 13",
      "2kr3r/pppqnpp1/2nb4/3p3b/3P3p/2PB1N1P/PP3PP1/R1BQRNK1 w - - 2 14",
      "2kr3r/pppqnpp1/2nb4/3p3b/3P3p/2P2N1P/PP2BPP1/R1BQRNK1 b - - 3 14",
      "2kr3r/pppq1pp1/2nb2n1/3p3b/3P3p/2P2N1P/PP2BPP1/R1BQRNK1 w - - 4 15",
      "2kr3r/pppq1pp1/2nb2n1/3p2Nb/3P3p/2P4P/PP2BPP1/R1BQRNK1 b - - 5 15",
      "2kr3r/pppq1pp1/2nb2n1/3p2N1/3P3p/2P4P/PP2bPP1/R1BQRNK1 w - - 0 16",
      "2kr3r/pppq1pp1/2nb2n1/3p2N1/3P3p/2P4P/PP2RPP1/R1BQ1NK1 b - - 0 16",
      "2k1r2r/pppq1pp1/2nb2n1/3p2N1/3P3p/2P4P/PP2RPP1/R1BQ1NK1 w - - 1 17",
      "2k1R2r/pppq1pp1/2nb2n1/3p2N1/3P3p/2P4P/PP3PP1/R1BQ1NK1 b - - 0 17",
      "2k1r3/pppq1pp1/2nb2n1/3p2N1/3P3p/2P4P/PP3PP1/R1BQ1NK1 w - - 0 18",
      "2k1r3/pppq1pp1/2nb2n1/3p2N1/3P3p/2P1B2P/PP3PP1/R2Q1NK1 b - - 1 18",
      "2k1r3/pppq1pp1/2nb4/3p2N1/3P1n1p/2P1B2P/PP3PP1/R2Q1NK1 w - - 2 19",
      "2k1r3/pppq1pp1/2nb4/3p2N1/3P1nQp/2P1B2P/PP3PP1/R4NK1 b - - 3 19",
      "2k1r3/ppp2pp1/2nb4/3p2N1/3P1nqp/2P1B2P/PP3PP1/R4NK1 w - - 0 20",
      "2k1r3/ppp2pp1/2nb4/3p2N1/3P1nPp/2P1B3/PP3PP1/R4NK1 b - - 0 20",
      "2k1r3/ppp3p1/2nb1p2/3p2N1/3P1nPp/2P1B3/PP3PP1/R4NK1 w - - 0 21",
      "2k1r3/ppp3p1/2nb1p2/3p2N1/3P1BPp/2P5/PP3PP1/R4NK1 b - - 0 21",
      "2k1r3/ppp3p1/2n2p2/3p2N1/3P1bPp/2P5/PP3PP1/R4NK1 w - - 0 22",
      "2k1r3/ppp3p1/2n2p2/3p4/3P1bPp/2P2N2/PP3PP1/R4NK1 b - - 1 22",
      "2k5/ppp3p1/2n2p2/3p4/3P1bPp/2P2N2/PP2rPP1/R4NK1 w - - 2 23",
      "2k5/ppp3p1/2n2p2/3p4/3P1bPp/2P2N2/PP2rPP1/1R3NK1 b - - 3 23",
      "2k5/ppp5/2n2p2/3p2p1/3P1bPp/2P2N2/PP2rPP1/1R3NK1 w - - 0 24",
      "2k5/ppp5/2n2p2/3p2p1/3P1bPp/2P5/PP2rPP1/1R2NNK1 b - - 1 24",
      "2k5/ppp5/5p2/n2p2p1/3P1bPp/2P5/PP2rPP1/1R2NNK1 w - - 2 25",
      "2k5/ppp5/5p2/n2p2p1/3P1bPp/2PN4/PP2rPP1/1R3NK1 b - - 3 25",
      "2k5/ppp5/5p2/3p2p1/2nP1bPp/2PN4/PP2rPP1/1R3NK1 w - - 4 26",
      "2k5/ppp5/5p2/3p2p1/2nP1bPp/1PPN4/P3rPP1/1R3NK1 b - - 0 26",
      "2k5/ppp5/3n1p2/3p2p1/3P1bPp/1PPN4/P3rPP1/1R3NK1 w - - 1 27",
      "2k5/ppp5/3n1p2/3p2p1/3P1bPp/1PPN4/PR2rPP1/5NK1 b - - 2 27",
      "2k5/ppp5/3n1p2/3p2p1/3P1bPp/1PPN4/Pr3PP1/5NK1 w - - 0 28",
      "2k5/ppp5/3n1p2/3p2p1/3P1bPp/1PP5/PN3PP1/5NK1 b - - 0 28",
      "8/pppk4/3n1p2/3p2p1/3P1bPp/1PP5/PN3PP1/5NK1 w - - 1 29",
      "8/pppk4/3n1p2/3p2p1/3P1bPp/1PP2P2/PN4P1/5NK1 b - - 0 29",
      "8/p1pk4/1p1n1p2/3p2p1/3P1bPp/1PP2P2/PN4P1/5NK1 w - - 0 30",
      "8/p1pk4/1p1n1p2/3p2p1/3P1bPp/1PP2P2/PN3KP1/5N2 b - - 1 30",
      "8/p1pk4/1p3p2/1n1p2p1/3P1bPp/1PP2P2/PN3KP1/5N2 w - - 2 31",
      "8/p1pk4/1p3p2/1n1p2p1/3P1bPp/1PP2P2/P4KP1/3N1N2 b - - 3 31",
      "8/p2k4/1p3p2/1npp2p1/3P1bPp/1PP2P2/P4KP1/3N1N2 w - - 0 32",
      "8/p2k4/1p3p2/1npp2p1/P2P1bPp/1PP2P2/5KP1/3N1N2 b - - 0 32",
      "8/p1nk4/1p3p2/2pp2p1/P2P1bPp/1PP2P2/5KP1/3N1N2 w - - 1 33",
      "8/p1nk4/1p3p2/2pp2p1/P2P1bPp/1PP2P2/4K1P1/3N1N2 b - - 2 33",
      "8/p2k4/1p2np2/2pp2p1/P2P1bPp/1PP2P2/4K1P1/3N1N2 w - - 3 34",
      "8/p2k4/1p2np2/2pp2p1/P2P1bPp/1PPK1P2/6P1/3N1N2 b - - 4 34",
      "8/p7/1pk1np2/2pp2p1/P2P1bPp/1PPK1P2/6P1/3N1N2 w - - 5 35",
      "8/p7/1pk1np2/2pp2p1/P2P1bPp/1PPKNP2/6P1/5N2 b - - 6 35",
      "8/p1b5/1pk1np2/2pp2p1/P2P2Pp/1PPKNP2/6P1/5N2 w - - 7 36",
      "8/p1b5/1pk1np2/2pp2p1/P2P2Pp/1PPKNP2/3N2P1/8 b - - 8 36",
      "8/p1b5/1pk2p2/2pp2p1/P2P1nPp/1PPKNP2/3N2P1/8 w - - 9 37",
      "8/p1b5/1pk2p2/2pp2p1/P2P1nPp/1PP1NP2/2KN2P1/8 b - - 10 37",
      "8/p1b5/1pk2p2/2pp2p1/P2P2Pp/1PP1NP2/2KN2n1/8 w - - 0 38",
      "8/p1b5/1pk2p2/2pp2p1/P2P2Pp/1PP2P2/2KN2N1/8 b - - 0 38",
      "8/p1b5/1pk2p2/2pp2p1/P2P2P1/1PP2P1p/2KN2N1/8 w - - 0 39",
      "8/p1b5/1pk2p2/2pp2p1/P2P2P1/1PP1NP1p/2KN4/8 b - - 1 39",
      "8/p1b5/1pk2p2/2pp2p1/P2P2P1/1PP1NP2/2KN3p/8 w - - 0 40",
    ]
    for (index, history) in chess.getMoveHistory().enumerated() {
      XCTAssertEqual(history.fen, fens7[index], "Capablanca(g8): FEN move (index)")
    }

    pgn = pgns.removeFirst()
    chess = try pgn.validate()
    XCTAssertEqual(chess.getTag("Event")?.value, "Moscow", "Capablanca(g9): event")
    XCTAssertEqual(chess.getTag("White")?.value, "Emanuel Lasker", "Capablanca(g9): white")
    XCTAssertEqual(chess.getTag("Black")?.value, "Jose Raul Capablanca", "Capablanca(g9): black")
    XCTAssertEqual(chess.getMoveCount(), 59, "Capablanca(g9): move count")
    XCTAssertEqual(
      chess.getMoveHistory().map { $0.pcn }.joined(separator: ","),
      "e2e4,c7c5,g1f3,b8c6,d2d4,c5d4,f3d4,g8f6,b1c3,d7d6,f1e2,c8d7,c1e3,e7e6,d1d2,a7a6,f2f4,d8c7,d4b3,b7b5,e2f3,a8b8,c3e2,f8e7,e1g1,e8g8,e2g3,a6a5,b3d4,a5a4,a1e1,f8c8,f1f2,f6e8,d4c6,d7c6,f4f5,e6e5,g3h5,c7b7,e3g5,f7f6,g5e3,e8c7,d2d1,c8d8,f2d2,g8h8,a2a3,b8c8,e3f2,d6d5,e4d5,c7d5,f3d5,d8d5,d1g4,e7c5,e1d1,c5f2,g1f2,c8d8,d2d5,d8d5,d1d5,c6d5,g4b4,b7a7,f2e2,d5c4,e2f3,a7a8,f3f2,a8d8,b4c3,d8d1,h5g3,h7h6,b2b3,a4b3,c2b3,c4b3,g3f1,d1b1,g2g4,b3c4,f1e3,b1h1,e3c4,h1h2,f2e1,h2g1,e1d2,g1f2,d2c1,f2f1,c1d2,b5c4,a3a4,f1f4,d2c2,f4g4,a4a5,g4f5,c2c1,f5f2,c3a3,h8h7,a5a6,e5e4,a6a7,c4c3,a7a8q,f2d2,c1b1,c3c2",
      "Capablanca(g9): PCN move history"
    )
    let fens8 = [
      "rnbqkbnr/pppppppp/8/8/4P3/8/PPPP1PPP/RNBQKBNR b KQkq - 0 1",
      "rnbqkbnr/pp1ppppp/8/2p5/4P3/8/PPPP1PPP/RNBQKBNR w KQkq - 0 2",
      "rnbqkbnr/pp1ppppp/8/2p5/4P3/5N2/PPPP1PPP/RNBQKB1R b KQkq - 1 2",
      "r1bqkbnr/pp1ppppp/2n5/2p5/4P3/5N2/PPPP1PPP/RNBQKB1R w KQkq - 2 3",
      "r1bqkbnr/pp1ppppp/2n5/2p5/3PP3/5N2/PPP2PPP/RNBQKB1R b KQkq - 0 3",
      "r1bqkbnr/pp1ppppp/2n5/8/3pP3/5N2/PPP2PPP/RNBQKB1R w KQkq - 0 4",
      "r1bqkbnr/pp1ppppp/2n5/8/3NP3/8/PPP2PPP/RNBQKB1R b KQkq - 0 4",
      "r1bqkb1r/pp1ppppp/2n2n2/8/3NP3/8/PPP2PPP/RNBQKB1R w KQkq - 1 5",
      "r1bqkb1r/pp1ppppp/2n2n2/8/3NP3/2N5/PPP2PPP/R1BQKB1R b KQkq - 2 5",
      "r1bqkb1r/pp2pppp/2np1n2/8/3NP3/2N5/PPP2PPP/R1BQKB1R w KQkq - 0 6",
      "r1bqkb1r/pp2pppp/2np1n2/8/3NP3/2N5/PPP1BPPP/R1BQK2R b KQkq - 1 6",
      "r2qkb1r/pp1bpppp/2np1n2/8/3NP3/2N5/PPP1BPPP/R1BQK2R w KQkq - 2 7",
      "r2qkb1r/pp1bpppp/2np1n2/8/3NP3/2N1B3/PPP1BPPP/R2QK2R b KQkq - 3 7",
      "r2qkb1r/pp1b1ppp/2nppn2/8/3NP3/2N1B3/PPP1BPPP/R2QK2R w KQkq - 0 8",
      "r2qkb1r/pp1b1ppp/2nppn2/8/3NP3/2N1B3/PPPQBPPP/R3K2R b KQkq - 1 8",
      "r2qkb1r/1p1b1ppp/p1nppn2/8/3NP3/2N1B3/PPPQBPPP/R3K2R w KQkq - 0 9",
      "r2qkb1r/1p1b1ppp/p1nppn2/8/3NPP2/2N1B3/PPPQB1PP/R3K2R b KQkq - 0 9",
      "r3kb1r/1pqb1ppp/p1nppn2/8/3NPP2/2N1B3/PPPQB1PP/R3K2R w KQkq - 1 10",
      "r3kb1r/1pqb1ppp/p1nppn2/8/4PP2/1NN1B3/PPPQB1PP/R3K2R b KQkq - 2 10",
      "r3kb1r/2qb1ppp/p1nppn2/1p6/4PP2/1NN1B3/PPPQB1PP/R3K2R w KQkq - 0 11",
      "r3kb1r/2qb1ppp/p1nppn2/1p6/4PP2/1NN1BB2/PPPQ2PP/R3K2R b KQkq - 1 11",
      "1r2kb1r/2qb1ppp/p1nppn2/1p6/4PP2/1NN1BB2/PPPQ2PP/R3K2R w KQk - 2 12",
      "1r2kb1r/2qb1ppp/p1nppn2/1p6/4PP2/1N2BB2/PPPQN1PP/R3K2R b KQk - 3 12",
      "1r2k2r/2qbbppp/p1nppn2/1p6/4PP2/1N2BB2/PPPQN1PP/R3K2R w KQk - 4 13",
      "1r2k2r/2qbbppp/p1nppn2/1p6/4PP2/1N2BB2/PPPQN1PP/R4RK1 b k - 5 13",
      "1r3rk1/2qbbppp/p1nppn2/1p6/4PP2/1N2BB2/PPPQN1PP/R4RK1 w - - 6 14",
      "1r3rk1/2qbbppp/p1nppn2/1p6/4PP2/1N2BBN1/PPPQ2PP/R4RK1 b - - 7 14",
      "1r3rk1/2qbbppp/2nppn2/pp6/4PP2/1N2BBN1/PPPQ2PP/R4RK1 w - - 0 15",
      "1r3rk1/2qbbppp/2nppn2/pp6/3NPP2/4BBN1/PPPQ2PP/R4RK1 b - - 1 15",
      "1r3rk1/2qbbppp/2nppn2/1p6/p2NPP2/4BBN1/PPPQ2PP/R4RK1 w - - 0 16",
      "1r3rk1/2qbbppp/2nppn2/1p6/p2NPP2/4BBN1/PPPQ2PP/4RRK1 b - - 1 16",
      "1rr3k1/2qbbppp/2nppn2/1p6/p2NPP2/4BBN1/PPPQ2PP/4RRK1 w - - 2 17",
      "1rr3k1/2qbbppp/2nppn2/1p6/p2NPP2/4BBN1/PPPQ1RPP/4R1K1 b - - 3 17",
      "1rr1n1k1/2qbbppp/2npp3/1p6/p2NPP2/4BBN1/PPPQ1RPP/4R1K1 w - - 4 18",
      "1rr1n1k1/2qbbppp/2Npp3/1p6/p3PP2/4BBN1/PPPQ1RPP/4R1K1 b - - 0 18",
      "1rr1n1k1/2q1bppp/2bpp3/1p6/p3PP2/4BBN1/PPPQ1RPP/4R1K1 w - - 0 19",
      "1rr1n1k1/2q1bppp/2bpp3/1p3P2/p3P3/4BBN1/PPPQ1RPP/4R1K1 b - - 0 19",
      "1rr1n1k1/2q1bppp/2bp4/1p2pP2/p3P3/4BBN1/PPPQ1RPP/4R1K1 w - - 0 20",
      "1rr1n1k1/2q1bppp/2bp4/1p2pP1N/p3P3/4BB2/PPPQ1RPP/4R1K1 b - - 1 20",
      "1rr1n1k1/1q2bppp/2bp4/1p2pP1N/p3P3/4BB2/PPPQ1RPP/4R1K1 w - - 2 21",
      "1rr1n1k1/1q2bppp/2bp4/1p2pPBN/p3P3/5B2/PPPQ1RPP/4R1K1 b - - 3 21",
      "1rr1n1k1/1q2b1pp/2bp1p2/1p2pPBN/p3P3/5B2/PPPQ1RPP/4R1K1 w - - 0 22",
      "1rr1n1k1/1q2b1pp/2bp1p2/1p2pP1N/p3P3/4BB2/PPPQ1RPP/4R1K1 b - - 1 22",
      "1rr3k1/1qn1b1pp/2bp1p2/1p2pP1N/p3P3/4BB2/PPPQ1RPP/4R1K1 w - - 2 23",
      "1rr3k1/1qn1b1pp/2bp1p2/1p2pP1N/p3P3/4BB2/PPP2RPP/3QR1K1 b - - 3 23",
      "1r1r2k1/1qn1b1pp/2bp1p2/1p2pP1N/p3P3/4BB2/PPP2RPP/3QR1K1 w - - 4 24",
      "1r1r2k1/1qn1b1pp/2bp1p2/1p2pP1N/p3P3/4BB2/PPPR2PP/3QR1K1 b - - 5 24",
      "1r1r3k/1qn1b1pp/2bp1p2/1p2pP1N/p3P3/4BB2/PPPR2PP/3QR1K1 w - - 6 25",
      "1r1r3k/1qn1b1pp/2bp1p2/1p2pP1N/p3P3/P3BB2/1PPR2PP/3QR1K1 b - - 0 25",
      "2rr3k/1qn1b1pp/2bp1p2/1p2pP1N/p3P3/P3BB2/1PPR2PP/3QR1K1 w - - 1 26",
      "2rr3k/1qn1b1pp/2bp1p2/1p2pP1N/p3P3/P4B2/1PPR1BPP/3QR1K1 b - - 2 26",
      "2rr3k/1qn1b1pp/2b2p2/1p1ppP1N/p3P3/P4B2/1PPR1BPP/3QR1K1 w - - 0 27",
      "2rr3k/1qn1b1pp/2b2p2/1p1PpP1N/p7/P4B2/1PPR1BPP/3QR1K1 b - - 0 27",
      "2rr3k/1q2b1pp/2b2p2/1p1npP1N/p7/P4B2/1PPR1BPP/3QR1K1 w - - 0 28",
      "2rr3k/1q2b1pp/2b2p2/1p1BpP1N/p7/P7/1PPR1BPP/3QR1K1 b - - 0 28",
      "2r4k/1q2b1pp/2b2p2/1p1rpP1N/p7/P7/1PPR1BPP/3QR1K1 w - - 0 29",
      "2r4k/1q2b1pp/2b2p2/1p1rpP1N/p5Q1/P7/1PPR1BPP/4R1K1 b - - 1 29",
      "2r4k/1q4pp/2b2p2/1pbrpP1N/p5Q1/P7/1PPR1BPP/4R1K1 w - - 2 30",
      "2r4k/1q4pp/2b2p2/1pbrpP1N/p5Q1/P7/1PPR1BPP/3R2K1 b - - 3 30",
      "2r4k/1q4pp/2b2p2/1p1rpP1N/p5Q1/P7/1PPR1bPP/3R2K1 w - - 0 31",
      "2r4k/1q4pp/2b2p2/1p1rpP1N/p5Q1/P7/1PPR1KPP/3R4 b - - 0 31",
      "3r3k/1q4pp/2b2p2/1p1rpP1N/p5Q1/P7/1PPR1KPP/3R4 w - - 1 32",
      "3r3k/1q4pp/2b2p2/1p1RpP1N/p5Q1/P7/1PP2KPP/3R4 b - - 0 32",
      "7k/1q4pp/2b2p2/1p1rpP1N/p5Q1/P7/1PP2KPP/3R4 w - - 0 33",
      "7k/1q4pp/2b2p2/1p1RpP1N/p5Q1/P7/1PP2KPP/8 b - - 0 33",
      "7k/1q4pp/5p2/1p1bpP1N/p5Q1/P7/1PP2KPP/8 w - - 0 34",
      "7k/1q4pp/5p2/1p1bpP1N/pQ6/P7/1PP2KPP/8 b - - 1 34",
      "7k/q5pp/5p2/1p1bpP1N/pQ6/P7/1PP2KPP/8 w - - 2 35",
      "7k/q5pp/5p2/1p1bpP1N/pQ6/P7/1PP1K1PP/8 b - - 3 35",
      "7k/q5pp/5p2/1p2pP1N/pQb5/P7/1PP1K1PP/8 w - - 4 36",
      "7k/q5pp/5p2/1p2pP1N/pQb5/P4K2/1PP3PP/8 b - - 5 36",
      "q6k/6pp/5p2/1p2pP1N/pQb5/P4K2/1PP3PP/8 w - - 6 37",
      "q6k/6pp/5p2/1p2pP1N/pQb5/P7/1PP2KPP/8 b - - 7 37",
      "3q3k/6pp/5p2/1p2pP1N/pQb5/P7/1PP2KPP/8 w - - 8 38",
      "3q3k/6pp/5p2/1p2pP1N/p1b5/P1Q5/1PP2KPP/8 b - - 9 38",
      "7k/6pp/5p2/1p2pP1N/p1b5/P1Q5/1PP2KPP/3q4 w - - 10 39",
      "7k/6pp/5p2/1p2pP2/p1b5/P1Q3N1/1PP2KPP/3q4 b - - 11 39",
      "7k/6p1/5p1p/1p2pP2/p1b5/P1Q3N1/1PP2KPP/3q4 w - - 0 40",
      "7k/6p1/5p1p/1p2pP2/p1b5/PPQ3N1/2P2KPP/3q4 b - - 0 40",
      "7k/6p1/5p1p/1p2pP2/2b5/PpQ3N1/2P2KPP/3q4 w - - 0 41",
      "7k/6p1/5p1p/1p2pP2/2b5/PPQ3N1/5KPP/3q4 b - - 0 41",
      "7k/6p1/5p1p/1p2pP2/8/PbQ3N1/5KPP/3q4 w - - 0 42",
      "7k/6p1/5p1p/1p2pP2/8/PbQ5/5KPP/3q1N2 b - - 1 42",
      "7k/6p1/5p1p/1p2pP2/8/PbQ5/5KPP/1q3N2 w - - 2 43",
      "7k/6p1/5p1p/1p2pP2/6P1/PbQ5/5K1P/1q3N2 b - - 0 43",
      "7k/6p1/5p1p/1p2pP2/2b3P1/P1Q5/5K1P/1q3N2 w - - 1 44",
      "7k/6p1/5p1p/1p2pP2/2b3P1/P1Q1N3/5K1P/1q6 b - - 2 44",
      "7k/6p1/5p1p/1p2pP2/2b3P1/P1Q1N3/5K1P/7q w - - 3 45",
      "7k/6p1/5p1p/1p2pP2/2N3P1/P1Q5/5K1P/7q b - - 0 45",
      "7k/6p1/5p1p/1p2pP2/2N3P1/P1Q5/5K1q/8 w - - 0 46",
      "7k/6p1/5p1p/1p2pP2/2N3P1/P1Q5/7q/4K3 b - - 1 46",
      "7k/6p1/5p1p/1p2pP2/2N3P1/P1Q5/8/4K1q1 w - - 2 47",
      "7k/6p1/5p1p/1p2pP2/2N3P1/P1Q5/3K4/6q1 b - - 3 47",
      "7k/6p1/5p1p/1p2pP2/2N3P1/P1Q5/3K1q2/8 w - - 4 48",
      "7k/6p1/5p1p/1p2pP2/2N3P1/P1Q5/5q2/2K5 b - - 5 48",
      "7k/6p1/5p1p/1p2pP2/2N3P1/P1Q5/8/2K2q2 w - - 6 49",
      "7k/6p1/5p1p/1p2pP2/2N3P1/P1Q5/3K4/5q2 b - - 7 49",
      "7k/6p1/5p1p/4pP2/2p3P1/P1Q5/3K4/5q2 w - - 0 50",
      "7k/6p1/5p1p/4pP2/P1p3P1/2Q5/3K4/5q2 b - - 0 50",
      "7k/6p1/5p1p/4pP2/P1p2qP1/2Q5/3K4/8 w - - 1 51",
      "7k/6p1/5p1p/4pP2/P1p2qP1/2Q5/2K5/8 b - - 2 51",
      "7k/6p1/5p1p/4pP2/P1p3q1/2Q5/2K5/8 w - - 0 52",
      "7k/6p1/5p1p/P3pP2/2p3q1/2Q5/2K5/8 b - - 0 52",
      "7k/6p1/5p1p/P3pq2/2p5/2Q5/2K5/8 w - - 0 53",
      "7k/6p1/5p1p/P3pq2/2p5/2Q5/8/2K5 b - - 1 53",
      "7k/6p1/5p1p/P3p3/2p5/2Q5/5q2/2K5 w - - 2 54",
      "7k/6p1/5p1p/P3p3/2p5/Q7/5q2/2K5 b - - 3 54",
      "8/6pk/5p1p/P3p3/2p5/Q7/5q2/2K5 w - - 4 55",
      "8/6pk/P4p1p/4p3/2p5/Q7/5q2/2K5 b - - 0 55",
      "8/6pk/P4p1p/8/2p1p3/Q7/5q2/2K5 w - - 0 56",
      "8/P5pk/5p1p/8/2p1p3/Q7/5q2/2K5 b - - 0 56",
      "8/P5pk/5p1p/8/4p3/Q1p5/5q2/2K5 w - - 0 57",
      "Q7/6pk/5p1p/8/4p3/Q1p5/5q2/2K5 b - - 0 57",
      "Q7/6pk/5p1p/8/4p3/Q1p5/3q4/2K5 w - - 1 58",
      "Q7/6pk/5p1p/8/4p3/Q1p5/3q4/1K6 b - - 2 58",
      "Q7/6pk/5p1p/8/4p3/Q7/2pq4/1K6 w - - 0 59",
    ]
    for (index, history) in chess.getMoveHistory().enumerated() {
      XCTAssertEqual(history.fen, fens8[index], "Capablanca(g9): FEN move (index)")
    }

    pgn = pgns.removeFirst()
    chess = try pgn.validate()
    XCTAssertEqual(chess.getTag("Event")?.value, "Hastings", "Capablanca(g10): event")
    XCTAssertEqual(chess.getTag("White")?.value, "Jose Raul Capablanca", "Capablanca(g10): white")
    XCTAssertEqual(chess.getTag("Black")?.value, "Fred Dewhurst Yates", "Capablanca(g10): black")
    XCTAssertEqual(chess.getMoveCount(), 61, "Capablanca(g10): move count")
    XCTAssertEqual(
      chess.getMoveHistory().map { $0.pcn }.joined(separator: ","),
      "e2e4,e7e5,g1f3,b8c6,f1b5,a7a6,b5a4,g8f6,e1g1,f8e7,f1e1,b7b5,a4b3,d7d6,c2c3,c6a5,b3c2,c7c5,d2d4,d8c7,b1d2,c8g4,d4d5,g7g5,d2f1,h7h6,f1g3,a8d8,a2a4,b5b4,c3b4,c5b4,c2d3,g4c8,c1e3,f6g4,a1c1,c7b8,e3d2,b8b6,d1e2,a5b3,c1c6,b6a5,d3a6,c8d7,a6b5,d7c6,b5c6,e8f8,e2c4,b3d2,f3d2,a5a7,c4e2,h6h5,g3f5,e7f6,d2c4,a7c5,b2b3,g4h6,f5h6,h8h6,e2e3,d8c8,e1c1,f6d8,e3c5,d6c5,c4e5,f8e7,c1c5,f7f5,c5c4,d8a5,c6b5,c8c4,e5c4,a5c7,e4e5,c7b8,c4e3,h6h7,e3f5,e7f7,e5e6,f7f6,e6e7,h7e7,f5e7,f6e7,g2g3,b8c7,g1g2,e7d6,b5e8,h5h4,e8f7,d6e5,g2h3,c7d8,h3g4,h4g3,f2g3,e5f6,f7e6,f6g6,d5d6,g6f6,e6f5,d8b6,d6d7,b6d8,h2h4,g5h4,g3h4,d8c7,h4h5,f6g7,f5e4",
      "Capablanca(g10): PCN move history"
    )
    let fens9 = [
      "rnbqkbnr/pppppppp/8/8/4P3/8/PPPP1PPP/RNBQKBNR b KQkq - 0 1",
      "rnbqkbnr/pppp1ppp/8/4p3/4P3/8/PPPP1PPP/RNBQKBNR w KQkq - 0 2",
      "rnbqkbnr/pppp1ppp/8/4p3/4P3/5N2/PPPP1PPP/RNBQKB1R b KQkq - 1 2",
      "r1bqkbnr/pppp1ppp/2n5/4p3/4P3/5N2/PPPP1PPP/RNBQKB1R w KQkq - 2 3",
      "r1bqkbnr/pppp1ppp/2n5/1B2p3/4P3/5N2/PPPP1PPP/RNBQK2R b KQkq - 3 3",
      "r1bqkbnr/1ppp1ppp/p1n5/1B2p3/4P3/5N2/PPPP1PPP/RNBQK2R w KQkq - 0 4",
      "r1bqkbnr/1ppp1ppp/p1n5/4p3/B3P3/5N2/PPPP1PPP/RNBQK2R b KQkq - 1 4",
      "r1bqkb1r/1ppp1ppp/p1n2n2/4p3/B3P3/5N2/PPPP1PPP/RNBQK2R w KQkq - 2 5",
      "r1bqkb1r/1ppp1ppp/p1n2n2/4p3/B3P3/5N2/PPPP1PPP/RNBQ1RK1 b kq - 3 5",
      "r1bqk2r/1pppbppp/p1n2n2/4p3/B3P3/5N2/PPPP1PPP/RNBQ1RK1 w kq - 4 6",
      "r1bqk2r/1pppbppp/p1n2n2/4p3/B3P3/5N2/PPPP1PPP/RNBQR1K1 b kq - 5 6",
      "r1bqk2r/2ppbppp/p1n2n2/1p2p3/B3P3/5N2/PPPP1PPP/RNBQR1K1 w kq - 0 7",
      "r1bqk2r/2ppbppp/p1n2n2/1p2p3/4P3/1B3N2/PPPP1PPP/RNBQR1K1 b kq - 1 7",
      "r1bqk2r/2p1bppp/p1np1n2/1p2p3/4P3/1B3N2/PPPP1PPP/RNBQR1K1 w kq - 0 8",
      "r1bqk2r/2p1bppp/p1np1n2/1p2p3/4P3/1BP2N2/PP1P1PPP/RNBQR1K1 b kq - 0 8",
      "r1bqk2r/2p1bppp/p2p1n2/np2p3/4P3/1BP2N2/PP1P1PPP/RNBQR1K1 w kq - 1 9",
      "r1bqk2r/2p1bppp/p2p1n2/np2p3/4P3/2P2N2/PPBP1PPP/RNBQR1K1 b kq - 2 9",
      "r1bqk2r/4bppp/p2p1n2/npp1p3/4P3/2P2N2/PPBP1PPP/RNBQR1K1 w kq - 0 10",
      "r1bqk2r/4bppp/p2p1n2/npp1p3/3PP3/2P2N2/PPB2PPP/RNBQR1K1 b kq - 0 10",
      "r1b1k2r/2q1bppp/p2p1n2/npp1p3/3PP3/2P2N2/PPB2PPP/RNBQR1K1 w kq - 1 11",
      "r1b1k2r/2q1bppp/p2p1n2/npp1p3/3PP3/2P2N2/PPBN1PPP/R1BQR1K1 b kq - 2 11",
      "r3k2r/2q1bppp/p2p1n2/npp1p3/3PP1b1/2P2N2/PPBN1PPP/R1BQR1K1 w kq - 3 12",
      "r3k2r/2q1bppp/p2p1n2/nppPp3/4P1b1/2P2N2/PPBN1PPP/R1BQR1K1 b kq - 0 12",
      "r3k2r/2q1bp1p/p2p1n2/nppPp1p1/4P1b1/2P2N2/PPBN1PPP/R1BQR1K1 w kq - 0 13",
      "r3k2r/2q1bp1p/p2p1n2/nppPp1p1/4P1b1/2P2N2/PPB2PPP/R1BQRNK1 b kq - 1 13",
      "r3k2r/2q1bp2/p2p1n1p/nppPp1p1/4P1b1/2P2N2/PPB2PPP/R1BQRNK1 w kq - 0 14",
      "r3k2r/2q1bp2/p2p1n1p/nppPp1p1/4P1b1/2P2NN1/PPB2PPP/R1BQR1K1 b kq - 1 14",
      "3rk2r/2q1bp2/p2p1n1p/nppPp1p1/4P1b1/2P2NN1/PPB2PPP/R1BQR1K1 w k - 2 15",
      "3rk2r/2q1bp2/p2p1n1p/nppPp1p1/P3P1b1/2P2NN1/1PB2PPP/R1BQR1K1 b k - 0 15",
      "3rk2r/2q1bp2/p2p1n1p/n1pPp1p1/Pp2P1b1/2P2NN1/1PB2PPP/R1BQR1K1 w k - 0 16",
      "3rk2r/2q1bp2/p2p1n1p/n1pPp1p1/PP2P1b1/5NN1/1PB2PPP/R1BQR1K1 b k - 0 16",
      "3rk2r/2q1bp2/p2p1n1p/n2Pp1p1/Pp2P1b1/5NN1/1PB2PPP/R1BQR1K1 w k - 0 17",
      "3rk2r/2q1bp2/p2p1n1p/n2Pp1p1/Pp2P1b1/3B1NN1/1P3PPP/R1BQR1K1 b k - 1 17",
      "2brk2r/2q1bp2/p2p1n1p/n2Pp1p1/Pp2P3/3B1NN1/1P3PPP/R1BQR1K1 w k - 2 18",
      "2brk2r/2q1bp2/p2p1n1p/n2Pp1p1/Pp2P3/3BBNN1/1P3PPP/R2QR1K1 b k - 3 18",
      "2brk2r/2q1bp2/p2p3p/n2Pp1p1/Pp2P1n1/3BBNN1/1P3PPP/R2QR1K1 w k - 4 19",
      "2brk2r/2q1bp2/p2p3p/n2Pp1p1/Pp2P1n1/3BBNN1/1P3PPP/2RQR1K1 b k - 5 19",
      "1qbrk2r/4bp2/p2p3p/n2Pp1p1/Pp2P1n1/3BBNN1/1P3PPP/2RQR1K1 w k - 6 20",
      "1qbrk2r/4bp2/p2p3p/n2Pp1p1/Pp2P1n1/3B1NN1/1P1B1PPP/2RQR1K1 b k - 7 20",
      "2brk2r/4bp2/pq1p3p/n2Pp1p1/Pp2P1n1/3B1NN1/1P1B1PPP/2RQR1K1 w k - 8 21",
      "2brk2r/4bp2/pq1p3p/n2Pp1p1/Pp2P1n1/3B1NN1/1P1BQPPP/2R1R1K1 b k - 9 21",
      "2brk2r/4bp2/pq1p3p/3Pp1p1/Pp2P1n1/1n1B1NN1/1P1BQPPP/2R1R1K1 w k - 10 22",
      "2brk2r/4bp2/pqRp3p/3Pp1p1/Pp2P1n1/1n1B1NN1/1P1BQPPP/4R1K1 b k - 11 22",
      "2brk2r/4bp2/p1Rp3p/q2Pp1p1/Pp2P1n1/1n1B1NN1/1P1BQPPP/4R1K1 w k - 12 23",
      "2brk2r/4bp2/B1Rp3p/q2Pp1p1/Pp2P1n1/1n3NN1/1P1BQPPP/4R1K1 b k - 0 23",
      "3rk2r/3bbp2/B1Rp3p/q2Pp1p1/Pp2P1n1/1n3NN1/1P1BQPPP/4R1K1 w k - 1 24",
      "3rk2r/3bbp2/2Rp3p/qB1Pp1p1/Pp2P1n1/1n3NN1/1P1BQPPP/4R1K1 b k - 2 24",
      "3rk2r/4bp2/2bp3p/qB1Pp1p1/Pp2P1n1/1n3NN1/1P1BQPPP/4R1K1 w k - 0 25",
      "3rk2r/4bp2/2Bp3p/q2Pp1p1/Pp2P1n1/1n3NN1/1P1BQPPP/4R1K1 b k - 0 25",
      "3r1k1r/4bp2/2Bp3p/q2Pp1p1/Pp2P1n1/1n3NN1/1P1BQPPP/4R1K1 w - - 1 26",
      "3r1k1r/4bp2/2Bp3p/q2Pp1p1/PpQ1P1n1/1n3NN1/1P1B1PPP/4R1K1 b - - 2 26",
      "3r1k1r/4bp2/2Bp3p/q2Pp1p1/PpQ1P1n1/5NN1/1P1n1PPP/4R1K1 w - - 0 27",
      "3r1k1r/4bp2/2Bp3p/q2Pp1p1/PpQ1P1n1/6N1/1P1N1PPP/4R1K1 b - - 0 27",
      "3r1k1r/q3bp2/2Bp3p/3Pp1p1/PpQ1P1n1/6N1/1P1N1PPP/4R1K1 w - - 1 28",
      "3r1k1r/q3bp2/2Bp3p/3Pp1p1/Pp2P1n1/6N1/1P1NQPPP/4R1K1 b - - 2 28",
      "3r1k1r/q3bp2/2Bp4/3Pp1pp/Pp2P1n1/6N1/1P1NQPPP/4R1K1 w - - 0 29",
      "3r1k1r/q3bp2/2Bp4/3PpNpp/Pp2P1n1/8/1P1NQPPP/4R1K1 b - - 1 29",
      "3r1k1r/q4p2/2Bp1b2/3PpNpp/Pp2P1n1/8/1P1NQPPP/4R1K1 w - - 2 30",
      "3r1k1r/q4p2/2Bp1b2/3PpNpp/PpN1P1n1/8/1P2QPPP/4R1K1 b - - 3 30",
      "3r1k1r/5p2/2Bp1b2/2qPpNpp/PpN1P1n1/8/1P2QPPP/4R1K1 w - - 4 31",
      "3r1k1r/5p2/2Bp1b2/2qPpNpp/PpN1P1n1/1P6/4QPPP/4R1K1 b - - 0 31",
      "3r1k1r/5p2/2Bp1b1n/2qPpNpp/PpN1P3/1P6/4QPPP/4R1K1 w - - 1 32",
      "3r1k1r/5p2/2Bp1b1N/2qPp1pp/PpN1P3/1P6/4QPPP/4R1K1 b - - 0 32",
      "3r1k2/5p2/2Bp1b1r/2qPp1pp/PpN1P3/1P6/4QPPP/4R1K1 w - - 0 33",
      "3r1k2/5p2/2Bp1b1r/2qPp1pp/PpN1P3/1P2Q3/5PPP/4R1K1 b - - 1 33",
      "2r2k2/5p2/2Bp1b1r/2qPp1pp/PpN1P3/1P2Q3/5PPP/4R1K1 w - - 2 34",
      "2r2k2/5p2/2Bp1b1r/2qPp1pp/PpN1P3/1P2Q3/5PPP/2R3K1 b - - 3 34",
      "2rb1k2/5p2/2Bp3r/2qPp1pp/PpN1P3/1P2Q3/5PPP/2R3K1 w - - 4 35",
      "2rb1k2/5p2/2Bp3r/2QPp1pp/PpN1P3/1P6/5PPP/2R3K1 b - - 0 35",
      "2rb1k2/5p2/2B4r/2pPp1pp/PpN1P3/1P6/5PPP/2R3K1 w - - 0 36",
      "2rb1k2/5p2/2B4r/2pPN1pp/Pp2P3/1P6/5PPP/2R3K1 b - - 0 36",
      "2rb4/4kp2/2B4r/2pPN1pp/Pp2P3/1P6/5PPP/2R3K1 w - - 1 37",
      "2rb4/4kp2/2B4r/2RPN1pp/Pp2P3/1P6/5PPP/6K1 b - - 0 37",
      "2rb4/4k3/2B4r/2RPNppp/Pp2P3/1P6/5PPP/6K1 w - - 0 38",
      "2rb4/4k3/2B4r/3PNppp/PpR1P3/1P6/5PPP/6K1 b - - 1 38",
      "2r5/4k3/2B4r/b2PNppp/PpR1P3/1P6/5PPP/6K1 w - - 2 39",
      "2r5/4k3/7r/bB1PNppp/PpR1P3/1P6/5PPP/6K1 b - - 3 39",
      "8/4k3/7r/bB1PNppp/Ppr1P3/1P6/5PPP/6K1 w - - 0 40",
      "8/4k3/7r/bB1P1ppp/PpN1P3/1P6/5PPP/6K1 b - - 0 40",
      "8/2b1k3/7r/1B1P1ppp/PpN1P3/1P6/5PPP/6K1 w - - 1 41",
      "8/2b1k3/7r/1B1PPppp/PpN5/1P6/5PPP/6K1 b - - 0 41",
      "1b6/4k3/7r/1B1PPppp/PpN5/1P6/5PPP/6K1 w - - 1 42",
      "1b6/4k3/7r/1B1PPppp/Pp6/1P2N3/5PPP/6K1 b - - 2 42",
      "1b6/4k2r/8/1B1PPppp/Pp6/1P2N3/5PPP/6K1 w - - 3 43",
      "1b6/4k2r/8/1B1PPNpp/Pp6/1P6/5PPP/6K1 b - - 0 43",
      "1b6/5k1r/8/1B1PPNpp/Pp6/1P6/5PPP/6K1 w - - 1 44",
      "1b6/5k1r/4P3/1B1P1Npp/Pp6/1P6/5PPP/6K1 b - - 0 44",
      "1b6/7r/4Pk2/1B1P1Npp/Pp6/1P6/5PPP/6K1 w - - 1 45",
      "1b6/4P2r/5k2/1B1P1Npp/Pp6/1P6/5PPP/6K1 b - - 0 45",
      "1b6/4r3/5k2/1B1P1Npp/Pp6/1P6/5PPP/6K1 w - - 0 46",
      "1b6/4N3/5k2/1B1P2pp/Pp6/1P6/5PPP/6K1 b - - 0 46",
      "1b6/4k3/8/1B1P2pp/Pp6/1P6/5PPP/6K1 w - - 0 47",
      "1b6/4k3/8/1B1P2pp/Pp6/1P4P1/5P1P/6K1 b - - 0 47",
      "8/2b1k3/8/1B1P2pp/Pp6/1P4P1/5P1P/6K1 w - - 1 48",
      "8/2b1k3/8/1B1P2pp/Pp6/1P4P1/5PKP/8 b - - 2 48",
      "8/2b5/3k4/1B1P2pp/Pp6/1P4P1/5PKP/8 w - - 3 49",
      "4B3/2b5/3k4/3P2pp/Pp6/1P4P1/5PKP/8 b - - 4 49",
      "4B3/2b5/3k4/3P2p1/Pp5p/1P4P1/5PKP/8 w - - 0 50",
      "8/2b2B2/3k4/3P2p1/Pp5p/1P4P1/5PKP/8 b - - 1 50",
      "8/2b2B2/8/3Pk1p1/Pp5p/1P4P1/5PKP/8 w - - 2 51",
      "8/2b2B2/8/3Pk1p1/Pp5p/1P4PK/5P1P/8 b - - 3 51",
      "3b4/5B2/8/3Pk1p1/Pp5p/1P4PK/5P1P/8 w - - 4 52",
      "3b4/5B2/8/3Pk1p1/Pp4Kp/1P4P1/5P1P/8 b - - 5 52",
      "3b4/5B2/8/3Pk1p1/Pp4K1/1P4p1/5P1P/8 w - - 0 53",
      "3b4/5B2/8/3Pk1p1/Pp4K1/1P4P1/7P/8 b - - 0 53",
      "3b4/5B2/5k2/3P2p1/Pp4K1/1P4P1/7P/8 w - - 1 54",
      "3b4/8/4Bk2/3P2p1/Pp4K1/1P4P1/7P/8 b - - 2 54",
      "3b4/8/4B1k1/3P2p1/Pp4K1/1P4P1/7P/8 w - - 3 55",
      "3b4/8/3PB1k1/6p1/Pp4K1/1P4P1/7P/8 b - - 0 55",
      "3b4/8/3PBk2/6p1/Pp4K1/1P4P1/7P/8 w - - 1 56",
      "3b4/8/3P1k2/5Bp1/Pp4K1/1P4P1/7P/8 b - - 2 56",
      "8/8/1b1P1k2/5Bp1/Pp4K1/1P4P1/7P/8 w - - 3 57",
      "8/3P4/1b3k2/5Bp1/Pp4K1/1P4P1/7P/8 b - - 0 57",
      "3b4/3P4/5k2/5Bp1/Pp4K1/1P4P1/7P/8 w - - 1 58",
      "3b4/3P4/5k2/5Bp1/Pp4KP/1P4P1/8/8 b - - 0 58",
      "3b4/3P4/5k2/5B2/Pp4Kp/1P4P1/8/8 w - - 0 59",
      "3b4/3P4/5k2/5B2/Pp4KP/1P6/8/8 b - - 0 59",
      "8/2bP4/5k2/5B2/Pp4KP/1P6/8/8 w - - 1 60",
      "8/2bP4/5k2/5B1P/Pp4K1/1P6/8/8 b - - 0 60",
      "8/2bP2k1/8/5B1P/Pp4K1/1P6/8/8 w - - 1 61",
      "8/2bP2k1/8/7P/Pp2B1K1/1P6/8/8 b - - 2 61",
    ]
    for (index, history) in chess.getMoveHistory().enumerated() {
      XCTAssertEqual(history.fen, fens9[index], "Capablanca(g10): FEN move (index)")
    }

    pgn = pgns.removeFirst()
    chess = try pgn.validate()
    XCTAssertEqual(chess.getTag("Event")?.value, "New York", "Capablanca(g11): event")
    XCTAssertEqual(chess.getTag("White")?.value, "Alexander Alekhine", "Capablanca(g11): white")
    XCTAssertEqual(chess.getTag("Black")?.value, "Jose Raul Capablanca", "Capablanca(g11): black")
    XCTAssertEqual(chess.getMoveCount(), 43, "Capablanca(g11): move count")
    XCTAssertEqual(
      chess.getMoveHistory().map { $0.pcn }.joined(separator: ","),
      "d2d4,g8f6,c2c4,e7e6,g1f3,b7b6,g2g3,c8b7,f1g2,c7c5,d4d5,e6d5,f3h4,g7g6,b1c3,f8g7,e1g1,e8g8,c1f4,d7d6,c4d5,f6h5,f4d2,b8d7,f2f4,a7a6,g2f3,h5f6,a2a4,c5c4,d2e3,d8c7,g3g4,d7c5,g4g5,f6d7,f4f5,f8e8,e3f4,g7e5,f3g4,c5b3,f5g6,h7g6,a1b1,e5c3,b2c3,c7c5,e2e3,d7e5,g4f3,e5d3,g1h1,b7d5,b1b3,d3f4,b3b1,e8e3,h4g2,e3f3,f1f3,f4g2,h1g2,a8e8,g2f1,d5f3,d1f3,c5g5,b1e1,e8e1,f1e1,g5g1,e1d2,g1h2,d2c1,h2e5,c1b2,g8g7,f3f2,b6b5,f2b6,b5a4,b6a6,e5e2",
      "Capablanca(g11): PCN move history"
    )
    let fens10 = [
      "rnbqkbnr/pppppppp/8/8/3P4/8/PPP1PPPP/RNBQKBNR b KQkq - 0 1",
      "rnbqkb1r/pppppppp/5n2/8/3P4/8/PPP1PPPP/RNBQKBNR w KQkq - 1 2",
      "rnbqkb1r/pppppppp/5n2/8/2PP4/8/PP2PPPP/RNBQKBNR b KQkq - 0 2",
      "rnbqkb1r/pppp1ppp/4pn2/8/2PP4/8/PP2PPPP/RNBQKBNR w KQkq - 0 3",
      "rnbqkb1r/pppp1ppp/4pn2/8/2PP4/5N2/PP2PPPP/RNBQKB1R b KQkq - 1 3",
      "rnbqkb1r/p1pp1ppp/1p2pn2/8/2PP4/5N2/PP2PPPP/RNBQKB1R w KQkq - 0 4",
      "rnbqkb1r/p1pp1ppp/1p2pn2/8/2PP4/5NP1/PP2PP1P/RNBQKB1R b KQkq - 0 4",
      "rn1qkb1r/pbpp1ppp/1p2pn2/8/2PP4/5NP1/PP2PP1P/RNBQKB1R w KQkq - 1 5",
      "rn1qkb1r/pbpp1ppp/1p2pn2/8/2PP4/5NP1/PP2PPBP/RNBQK2R b KQkq - 2 5",
      "rn1qkb1r/pb1p1ppp/1p2pn2/2p5/2PP4/5NP1/PP2PPBP/RNBQK2R w KQkq - 0 6",
      "rn1qkb1r/pb1p1ppp/1p2pn2/2pP4/2P5/5NP1/PP2PPBP/RNBQK2R b KQkq - 0 6",
      "rn1qkb1r/pb1p1ppp/1p3n2/2pp4/2P5/5NP1/PP2PPBP/RNBQK2R w KQkq - 0 7",
      "rn1qkb1r/pb1p1ppp/1p3n2/2pp4/2P4N/6P1/PP2PPBP/RNBQK2R b KQkq - 1 7",
      "rn1qkb1r/pb1p1p1p/1p3np1/2pp4/2P4N/6P1/PP2PPBP/RNBQK2R w KQkq - 0 8",
      "rn1qkb1r/pb1p1p1p/1p3np1/2pp4/2P4N/2N3P1/PP2PPBP/R1BQK2R b KQkq - 1 8",
      "rn1qk2r/pb1p1pbp/1p3np1/2pp4/2P4N/2N3P1/PP2PPBP/R1BQK2R w KQkq - 2 9",
      "rn1qk2r/pb1p1pbp/1p3np1/2pp4/2P4N/2N3P1/PP2PPBP/R1BQ1RK1 b kq - 3 9",
      "rn1q1rk1/pb1p1pbp/1p3np1/2pp4/2P4N/2N3P1/PP2PPBP/R1BQ1RK1 w - - 4 10",
      "rn1q1rk1/pb1p1pbp/1p3np1/2pp4/2P2B1N/2N3P1/PP2PPBP/R2Q1RK1 b - - 5 10",
      "rn1q1rk1/pb3pbp/1p1p1np1/2pp4/2P2B1N/2N3P1/PP2PPBP/R2Q1RK1 w - - 0 11",
      "rn1q1rk1/pb3pbp/1p1p1np1/2pP4/5B1N/2N3P1/PP2PPBP/R2Q1RK1 b - - 0 11",
      "rn1q1rk1/pb3pbp/1p1p2p1/2pP3n/5B1N/2N3P1/PP2PPBP/R2Q1RK1 w - - 1 12",
      "rn1q1rk1/pb3pbp/1p1p2p1/2pP3n/7N/2N3P1/PP1BPPBP/R2Q1RK1 b - - 2 12",
      "r2q1rk1/pb1n1pbp/1p1p2p1/2pP3n/7N/2N3P1/PP1BPPBP/R2Q1RK1 w - - 3 13",
      "r2q1rk1/pb1n1pbp/1p1p2p1/2pP3n/5P1N/2N3P1/PP1BP1BP/R2Q1RK1 b - - 0 13",
      "r2q1rk1/1b1n1pbp/pp1p2p1/2pP3n/5P1N/2N3P1/PP1BP1BP/R2Q1RK1 w - - 0 14",
      "r2q1rk1/1b1n1pbp/pp1p2p1/2pP3n/5P1N/2N2BP1/PP1BP2P/R2Q1RK1 b - - 1 14",
      "r2q1rk1/1b1n1pbp/pp1p1np1/2pP4/5P1N/2N2BP1/PP1BP2P/R2Q1RK1 w - - 2 15",
      "r2q1rk1/1b1n1pbp/pp1p1np1/2pP4/P4P1N/2N2BP1/1P1BP2P/R2Q1RK1 b - - 0 15",
      "r2q1rk1/1b1n1pbp/pp1p1np1/3P4/P1p2P1N/2N2BP1/1P1BP2P/R2Q1RK1 w - - 0 16",
      "r2q1rk1/1b1n1pbp/pp1p1np1/3P4/P1p2P1N/2N1BBP1/1P2P2P/R2Q1RK1 b - - 1 16",
      "r4rk1/1bqn1pbp/pp1p1np1/3P4/P1p2P1N/2N1BBP1/1P2P2P/R2Q1RK1 w - - 2 17",
      "r4rk1/1bqn1pbp/pp1p1np1/3P4/P1p2PPN/2N1BB2/1P2P2P/R2Q1RK1 b - - 0 17",
      "r4rk1/1bq2pbp/pp1p1np1/2nP4/P1p2PPN/2N1BB2/1P2P2P/R2Q1RK1 w - - 1 18",
      "r4rk1/1bq2pbp/pp1p1np1/2nP2P1/P1p2P1N/2N1BB2/1P2P2P/R2Q1RK1 b - - 0 18",
      "r4rk1/1bqn1pbp/pp1p2p1/2nP2P1/P1p2P1N/2N1BB2/1P2P2P/R2Q1RK1 w - - 1 19",
      "r4rk1/1bqn1pbp/pp1p2p1/2nP1PP1/P1p4N/2N1BB2/1P2P2P/R2Q1RK1 b - - 0 19",
      "r3r1k1/1bqn1pbp/pp1p2p1/2nP1PP1/P1p4N/2N1BB2/1P2P2P/R2Q1RK1 w - - 1 20",
      "r3r1k1/1bqn1pbp/pp1p2p1/2nP1PP1/P1p2B1N/2N2B2/1P2P2P/R2Q1RK1 b - - 2 20",
      "r3r1k1/1bqn1p1p/pp1p2p1/2nPbPP1/P1p2B1N/2N2B2/1P2P2P/R2Q1RK1 w - - 3 21",
      "r3r1k1/1bqn1p1p/pp1p2p1/2nPbPP1/P1p2BBN/2N5/1P2P2P/R2Q1RK1 b - - 4 21",
      "r3r1k1/1bqn1p1p/pp1p2p1/3PbPP1/P1p2BBN/1nN5/1P2P2P/R2Q1RK1 w - - 5 22",
      "r3r1k1/1bqn1p1p/pp1p2P1/3Pb1P1/P1p2BBN/1nN5/1P2P2P/R2Q1RK1 b - - 0 22",
      "r3r1k1/1bqn1p2/pp1p2p1/3Pb1P1/P1p2BBN/1nN5/1P2P2P/R2Q1RK1 w - - 0 23",
      "r3r1k1/1bqn1p2/pp1p2p1/3Pb1P1/P1p2BBN/1nN5/1P2P2P/1R1Q1RK1 b - - 1 23",
      "r3r1k1/1bqn1p2/pp1p2p1/3P2P1/P1p2BBN/1nb5/1P2P2P/1R1Q1RK1 w - - 0 24",
      "r3r1k1/1bqn1p2/pp1p2p1/3P2P1/P1p2BBN/1nP5/4P2P/1R1Q1RK1 b - - 0 24",
      "r3r1k1/1b1n1p2/pp1p2p1/2qP2P1/P1p2BBN/1nP5/4P2P/1R1Q1RK1 w - - 1 25",
      "r3r1k1/1b1n1p2/pp1p2p1/2qP2P1/P1p2BBN/1nP1P3/7P/1R1Q1RK1 b - - 0 25",
      "r3r1k1/1b3p2/pp1p2p1/2qPn1P1/P1p2BBN/1nP1P3/7P/1R1Q1RK1 w - - 1 26",
      "r3r1k1/1b3p2/pp1p2p1/2qPn1P1/P1p2B1N/1nP1PB2/7P/1R1Q1RK1 b - - 2 26",
      "r3r1k1/1b3p2/pp1p2p1/2qP2P1/P1p2B1N/1nPnPB2/7P/1R1Q1RK1 w - - 3 27",
      "r3r1k1/1b3p2/pp1p2p1/2qP2P1/P1p2B1N/1nPnPB2/7P/1R1Q1R1K b - - 4 27",
      "r3r1k1/5p2/pp1p2p1/2qb2P1/P1p2B1N/1nPnPB2/7P/1R1Q1R1K w - - 0 28",
      "r3r1k1/5p2/pp1p2p1/2qb2P1/P1p2B1N/1RPnPB2/7P/3Q1R1K b - - 0 28",
      "r3r1k1/5p2/pp1p2p1/2qb2P1/P1p2n1N/1RP1PB2/7P/3Q1R1K w - - 0 29",
      "r3r1k1/5p2/pp1p2p1/2qb2P1/P1p2n1N/2P1PB2/7P/1R1Q1R1K b - - 1 29",
      "r5k1/5p2/pp1p2p1/2qb2P1/P1p2n1N/2P1rB2/7P/1R1Q1R1K w - - 0 30",
      "r5k1/5p2/pp1p2p1/2qb2P1/P1p2n2/2P1rB2/6NP/1R1Q1R1K b - - 1 30",
      "r5k1/5p2/pp1p2p1/2qb2P1/P1p2n2/2P2r2/6NP/1R1Q1R1K w - - 0 31",
      "r5k1/5p2/pp1p2p1/2qb2P1/P1p2n2/2P2R2/6NP/1R1Q3K b - - 0 31",
      "r5k1/5p2/pp1p2p1/2qb2P1/P1p5/2P2R2/6nP/1R1Q3K w - - 0 32",
      "r5k1/5p2/pp1p2p1/2qb2P1/P1p5/2P2R2/6KP/1R1Q4 b - - 0 32",
      "4r1k1/5p2/pp1p2p1/2qb2P1/P1p5/2P2R2/6KP/1R1Q4 w - - 1 33",
      "4r1k1/5p2/pp1p2p1/2qb2P1/P1p5/2P2R2/7P/1R1Q1K2 b - - 2 33",
      "4r1k1/5p2/pp1p2p1/2q3P1/P1p5/2P2b2/7P/1R1Q1K2 w - - 0 34",
      "4r1k1/5p2/pp1p2p1/2q3P1/P1p5/2P2Q2/7P/1R3K2 b - - 0 34",
      "4r1k1/5p2/pp1p2p1/6q1/P1p5/2P2Q2/7P/1R3K2 w - - 0 35",
      "4r1k1/5p2/pp1p2p1/6q1/P1p5/2P2Q2/7P/4RK2 b - - 1 35",
      "6k1/5p2/pp1p2p1/6q1/P1p5/2P2Q2/7P/4rK2 w - - 0 36",
      "6k1/5p2/pp1p2p1/6q1/P1p5/2P2Q2/7P/4K3 b - - 0 36",
      "6k1/5p2/pp1p2p1/8/P1p5/2P2Q2/7P/4K1q1 w - - 1 37",
      "6k1/5p2/pp1p2p1/8/P1p5/2P2Q2/3K3P/6q1 b - - 2 37",
      "6k1/5p2/pp1p2p1/8/P1p5/2P2Q2/3K3q/8 w - - 0 38",
      "6k1/5p2/pp1p2p1/8/P1p5/2P2Q2/7q/2K5 b - - 1 38",
      "6k1/5p2/pp1p2p1/4q3/P1p5/2P2Q2/8/2K5 w - - 2 39",
      "6k1/5p2/pp1p2p1/4q3/P1p5/2P2Q2/1K6/8 b - - 3 39",
      "8/5pk1/pp1p2p1/4q3/P1p5/2P2Q2/1K6/8 w - - 4 40",
      "8/5pk1/pp1p2p1/4q3/P1p5/2P5/1K3Q2/8 b - - 5 40",
      "8/5pk1/p2p2p1/1p2q3/P1p5/2P5/1K3Q2/8 w - - 0 41",
      "8/5pk1/pQ1p2p1/1p2q3/P1p5/2P5/1K6/8 b - - 1 41",
      "8/5pk1/pQ1p2p1/4q3/p1p5/2P5/1K6/8 w - - 0 42",
      "8/5pk1/Q2p2p1/4q3/p1p5/2P5/1K6/8 b - - 0 42",
      "8/5pk1/Q2p2p1/8/p1p5/2P5/1K2q3/8 w - - 1 43",
    ]
    for (index, history) in chess.getMoveHistory().enumerated() {
      XCTAssertEqual(history.fen, fens10[index], "Capablanca(g11): FEN move (index)")
    }
  }

  func testSinquefield() throws {
    let text = try String(contentsOfFile: "./Tests/PGN/Sinquefield.pgn", encoding: .utf8)
    var pgns = Pgn.parseMultiGame(text)
    var chess: Chess
    var pgn: Pgn
    XCTAssertEqual(pgns.count, 45, "Sinquefield: game count matches")

    pgn = pgns.removeFirst()
    chess = try pgn.validate()
    XCTAssertEqual(chess.getTag("Event")?.value, "Sinquefield Cup", "Sinquefield(g1): event")
    XCTAssertEqual(
      chess.getTag("White")?.value, "Vachier-Lagrave, Maxime", "Sinquefield(g1): white")
    XCTAssertEqual(chess.getTag("Black")?.value, "Carlsen, Magnus", "Sinquefield(g1): black")
    XCTAssertEqual(chess.getMoveCount(), 38, "Sinquefield(g1): move count")
    XCTAssertEqual(
      chess.getMoveHistory().map { $0.pcn }.joined(separator: ","),
      "e2e4,c7c5,g1f3,b8c6,b1c3,e7e5,f1c4,g7g6,h2h4,h7h6,h4h5,g6g5,f3h2,g8f6,d2d3,d7d6,h2f1,c8g4,f2f3,g4e6,f1e3,f8g7,c3d5,e8g8,c2c3,a8b8,a2a4,a7a6,g2g4,b7b5,a4b5,a6b5,c4b3,c6e7,d5e7,d8e7,e1g1,e7b7,b3e6,f7e6,c3c4,b5b4,b2b3,f6d7,d1e2,b8d8,e3c2,d7b8,c1e3,b8c6,g1g2,f8f7,a1a4,d8f8,e3g1,g7f6,f1a1,f6d8,a4a8,f7f3,e2f3,f8f3,g2f3,g8g7,f3e2,d8b6,a8a6,g7f7,a6a8,f7g7,a8a6,g7f7,a6a8,f7g7",
      "Sinquefield(g1): PCN move history"
    )
    let fens0 = [
      "rnbqkbnr/pppppppp/8/8/4P3/8/PPPP1PPP/RNBQKBNR b KQkq - 0 1",
      "rnbqkbnr/pp1ppppp/8/2p5/4P3/8/PPPP1PPP/RNBQKBNR w KQkq - 0 2",
      "rnbqkbnr/pp1ppppp/8/2p5/4P3/5N2/PPPP1PPP/RNBQKB1R b KQkq - 1 2",
      "r1bqkbnr/pp1ppppp/2n5/2p5/4P3/5N2/PPPP1PPP/RNBQKB1R w KQkq - 2 3",
      "r1bqkbnr/pp1ppppp/2n5/2p5/4P3/2N2N2/PPPP1PPP/R1BQKB1R b KQkq - 3 3",
      "r1bqkbnr/pp1p1ppp/2n5/2p1p3/4P3/2N2N2/PPPP1PPP/R1BQKB1R w KQkq - 0 4",
      "r1bqkbnr/pp1p1ppp/2n5/2p1p3/2B1P3/2N2N2/PPPP1PPP/R1BQK2R b KQkq - 1 4",
      "r1bqkbnr/pp1p1p1p/2n3p1/2p1p3/2B1P3/2N2N2/PPPP1PPP/R1BQK2R w KQkq - 0 5",
      "r1bqkbnr/pp1p1p1p/2n3p1/2p1p3/2B1P2P/2N2N2/PPPP1PP1/R1BQK2R b KQkq - 0 5",
      "r1bqkbnr/pp1p1p2/2n3pp/2p1p3/2B1P2P/2N2N2/PPPP1PP1/R1BQK2R w KQkq - 0 6",
      "r1bqkbnr/pp1p1p2/2n3pp/2p1p2P/2B1P3/2N2N2/PPPP1PP1/R1BQK2R b KQkq - 0 6",
      "r1bqkbnr/pp1p1p2/2n4p/2p1p1pP/2B1P3/2N2N2/PPPP1PP1/R1BQK2R w KQkq - 0 7",
      "r1bqkbnr/pp1p1p2/2n4p/2p1p1pP/2B1P3/2N5/PPPP1PPN/R1BQK2R b KQkq - 1 7",
      "r1bqkb1r/pp1p1p2/2n2n1p/2p1p1pP/2B1P3/2N5/PPPP1PPN/R1BQK2R w KQkq - 2 8",
      "r1bqkb1r/pp1p1p2/2n2n1p/2p1p1pP/2B1P3/2NP4/PPP2PPN/R1BQK2R b KQkq - 0 8",
      "r1bqkb1r/pp3p2/2np1n1p/2p1p1pP/2B1P3/2NP4/PPP2PPN/R1BQK2R w KQkq - 0 9",
      "r1bqkb1r/pp3p2/2np1n1p/2p1p1pP/2B1P3/2NP4/PPP2PP1/R1BQKN1R b KQkq - 1 9",
      "r2qkb1r/pp3p2/2np1n1p/2p1p1pP/2B1P1b1/2NP4/PPP2PP1/R1BQKN1R w KQkq - 2 10",
      "r2qkb1r/pp3p2/2np1n1p/2p1p1pP/2B1P1b1/2NP1P2/PPP3P1/R1BQKN1R b KQkq - 0 10",
      "r2qkb1r/pp3p2/2npbn1p/2p1p1pP/2B1P3/2NP1P2/PPP3P1/R1BQKN1R w KQkq - 1 11",
      "r2qkb1r/pp3p2/2npbn1p/2p1p1pP/2B1P3/2NPNP2/PPP3P1/R1BQK2R b KQkq - 2 11",
      "r2qk2r/pp3pb1/2npbn1p/2p1p1pP/2B1P3/2NPNP2/PPP3P1/R1BQK2R w KQkq - 3 12",
      "r2qk2r/pp3pb1/2npbn1p/2pNp1pP/2B1P3/3PNP2/PPP3P1/R1BQK2R b KQkq - 4 12",
      "r2q1rk1/pp3pb1/2npbn1p/2pNp1pP/2B1P3/3PNP2/PPP3P1/R1BQK2R w KQ - 5 13",
      "r2q1rk1/pp3pb1/2npbn1p/2pNp1pP/2B1P3/2PPNP2/PP4P1/R1BQK2R b KQ - 0 13",
      "1r1q1rk1/pp3pb1/2npbn1p/2pNp1pP/2B1P3/2PPNP2/PP4P1/R1BQK2R w KQ - 1 14",
      "1r1q1rk1/pp3pb1/2npbn1p/2pNp1pP/P1B1P3/2PPNP2/1P4P1/R1BQK2R b KQ - 0 14",
      "1r1q1rk1/1p3pb1/p1npbn1p/2pNp1pP/P1B1P3/2PPNP2/1P4P1/R1BQK2R w KQ - 0 15",
      "1r1q1rk1/1p3pb1/p1npbn1p/2pNp1pP/P1B1P1P1/2PPNP2/1P6/R1BQK2R b KQ - 0 15",
      "1r1q1rk1/5pb1/p1npbn1p/1ppNp1pP/P1B1P1P1/2PPNP2/1P6/R1BQK2R w KQ - 0 16",
      "1r1q1rk1/5pb1/p1npbn1p/1PpNp1pP/2B1P1P1/2PPNP2/1P6/R1BQK2R b KQ - 0 16",
      "1r1q1rk1/5pb1/2npbn1p/1ppNp1pP/2B1P1P1/2PPNP2/1P6/R1BQK2R w KQ - 0 17",
      "1r1q1rk1/5pb1/2npbn1p/1ppNp1pP/4P1P1/1BPPNP2/1P6/R1BQK2R b KQ - 1 17",
      "1r1q1rk1/4npb1/3pbn1p/1ppNp1pP/4P1P1/1BPPNP2/1P6/R1BQK2R w KQ - 2 18",
      "1r1q1rk1/4Npb1/3pbn1p/1pp1p1pP/4P1P1/1BPPNP2/1P6/R1BQK2R b KQ - 0 18",
      "1r3rk1/4qpb1/3pbn1p/1pp1p1pP/4P1P1/1BPPNP2/1P6/R1BQK2R w KQ - 0 19",
      "1r3rk1/4qpb1/3pbn1p/1pp1p1pP/4P1P1/1BPPNP2/1P6/R1BQ1RK1 b - - 1 19",
      "1r3rk1/1q3pb1/3pbn1p/1pp1p1pP/4P1P1/1BPPNP2/1P6/R1BQ1RK1 w - - 2 20",
      "1r3rk1/1q3pb1/3pBn1p/1pp1p1pP/4P1P1/2PPNP2/1P6/R1BQ1RK1 b - - 0 20",
      "1r3rk1/1q4b1/3ppn1p/1pp1p1pP/4P1P1/2PPNP2/1P6/R1BQ1RK1 w - - 0 21",
      "1r3rk1/1q4b1/3ppn1p/1pp1p1pP/2P1P1P1/3PNP2/1P6/R1BQ1RK1 b - - 0 21",
      "1r3rk1/1q4b1/3ppn1p/2p1p1pP/1pP1P1P1/3PNP2/1P6/R1BQ1RK1 w - - 0 22",
      "1r3rk1/1q4b1/3ppn1p/2p1p1pP/1pP1P1P1/1P1PNP2/8/R1BQ1RK1 b - - 0 22",
      "1r3rk1/1q1n2b1/3pp2p/2p1p1pP/1pP1P1P1/1P1PNP2/8/R1BQ1RK1 w - - 1 23",
      "1r3rk1/1q1n2b1/3pp2p/2p1p1pP/1pP1P1P1/1P1PNP2/4Q3/R1B2RK1 b - - 2 23",
      "3r1rk1/1q1n2b1/3pp2p/2p1p1pP/1pP1P1P1/1P1PNP2/4Q3/R1B2RK1 w - - 3 24",
      "3r1rk1/1q1n2b1/3pp2p/2p1p1pP/1pP1P1P1/1P1P1P2/2N1Q3/R1B2RK1 b - - 4 24",
      "1n1r1rk1/1q4b1/3pp2p/2p1p1pP/1pP1P1P1/1P1P1P2/2N1Q3/R1B2RK1 w - - 5 25",
      "1n1r1rk1/1q4b1/3pp2p/2p1p1pP/1pP1P1P1/1P1PBP2/2N1Q3/R4RK1 b - - 6 25",
      "3r1rk1/1q4b1/2npp2p/2p1p1pP/1pP1P1P1/1P1PBP2/2N1Q3/R4RK1 w - - 7 26",
      "3r1rk1/1q4b1/2npp2p/2p1p1pP/1pP1P1P1/1P1PBP2/2N1Q1K1/R4R2 b - - 8 26",
      "3r2k1/1q3rb1/2npp2p/2p1p1pP/1pP1P1P1/1P1PBP2/2N1Q1K1/R4R2 w - - 9 27",
      "3r2k1/1q3rb1/2npp2p/2p1p1pP/RpP1P1P1/1P1PBP2/2N1Q1K1/5R2 b - - 10 27",
      "5rk1/1q3rb1/2npp2p/2p1p1pP/RpP1P1P1/1P1PBP2/2N1Q1K1/5R2 w - - 11 28",
      "5rk1/1q3rb1/2npp2p/2p1p1pP/RpP1P1P1/1P1P1P2/2N1Q1K1/5RB1 b - - 12 28",
      "5rk1/1q3r2/2nppb1p/2p1p1pP/RpP1P1P1/1P1P1P2/2N1Q1K1/5RB1 w - - 13 29",
      "5rk1/1q3r2/2nppb1p/2p1p1pP/RpP1P1P1/1P1P1P2/2N1Q1K1/R5B1 b - - 14 29",
      "3b1rk1/1q3r2/2npp2p/2p1p1pP/RpP1P1P1/1P1P1P2/2N1Q1K1/R5B1 w - - 15 30",
      "R2b1rk1/1q3r2/2npp2p/2p1p1pP/1pP1P1P1/1P1P1P2/2N1Q1K1/R5B1 b - - 16 30",
      "R2b1rk1/1q6/2npp2p/2p1p1pP/1pP1P1P1/1P1P1r2/2N1Q1K1/R5B1 w - - 0 31",
      "R2b1rk1/1q6/2npp2p/2p1p1pP/1pP1P1P1/1P1P1Q2/2N3K1/R5B1 b - - 0 31",
      "R2b2k1/1q6/2npp2p/2p1p1pP/1pP1P1P1/1P1P1r2/2N3K1/R5B1 w - - 0 32",
      "R2b2k1/1q6/2npp2p/2p1p1pP/1pP1P1P1/1P1P1K2/2N5/R5B1 b - - 0 32",
      "R2b4/1q4k1/2npp2p/2p1p1pP/1pP1P1P1/1P1P1K2/2N5/R5B1 w - - 1 33",
      "R2b4/1q4k1/2npp2p/2p1p1pP/1pP1P1P1/1P1P4/2N1K3/R5B1 b - - 2 33",
      "R7/1q4k1/1bnpp2p/2p1p1pP/1pP1P1P1/1P1P4/2N1K3/R5B1 w - - 3 34",
      "8/1q4k1/Rbnpp2p/2p1p1pP/1pP1P1P1/1P1P4/2N1K3/R5B1 b - - 4 34",
      "8/1q3k2/Rbnpp2p/2p1p1pP/1pP1P1P1/1P1P4/2N1K3/R5B1 w - - 5 35",
      "R7/1q3k2/1bnpp2p/2p1p1pP/1pP1P1P1/1P1P4/2N1K3/R5B1 b - - 6 35",
      "R7/1q4k1/1bnpp2p/2p1p1pP/1pP1P1P1/1P1P4/2N1K3/R5B1 w - - 7 36",
      "8/1q4k1/Rbnpp2p/2p1p1pP/1pP1P1P1/1P1P4/2N1K3/R5B1 b - - 8 36",
      "8/1q3k2/Rbnpp2p/2p1p1pP/1pP1P1P1/1P1P4/2N1K3/R5B1 w - - 9 37",
      "R7/1q3k2/1bnpp2p/2p1p1pP/1pP1P1P1/1P1P4/2N1K3/R5B1 b - - 10 37",
      "R7/1q4k1/1bnpp2p/2p1p1pP/1pP1P1P1/1P1P4/2N1K3/R5B1 w - - 11 38",
    ]
    for (index, history) in chess.getMoveHistory().enumerated() {
      XCTAssertEqual(history.fen, fens0[index], "Sinquefield(g1): FEN move (index)")
    }

    pgn = pgns.removeFirst()
    chess = try pgn.validate()
    XCTAssertEqual(chess.getTag("Event")?.value, "Sinquefield Cup", "Sinquefield(g2): event")
    XCTAssertEqual(chess.getTag("White")?.value, "Caruana, Fabiano", "Sinquefield(g2): white")
    XCTAssertEqual(chess.getTag("Black")?.value, "Grischuk, Alexander", "Sinquefield(g2): black")
    XCTAssertEqual(chess.getMoveCount(), 67, "Sinquefield(g2): move count")
    XCTAssertEqual(
      chess.getMoveHistory().map { $0.pcn }.joined(separator: ","),
      "e2e4,e7e5,g1f3,b8c6,f1c4,g8f6,d2d3,f8e7,e1g1,e8g8,f1e1,d7d6,a2a4,g8h8,b1c3,f6g8,c3d5,f7f5,h2h3,f5e4,d3e4,g8f6,a4a5,a7a6,a1a3,c8e6,d5f6,e6c4,f6d5,c4b5,c1e3,d8d7,f3d2,c6d8,c2c4,b5c6,d1g4,d8e6,b2b4,a8e8,d2f3,e7d8,h3h4,h7h6,h4h5,e6d4,g4d7,d4f3,g2f3,c6d7,g1g2,f8f7,e1h1,e8f8,e3c1,c7c6,d5b6,d7e6,h1d1,d8b6,a5b6,f7f6,a3d3,e6c4,d3d6,f6f3,c1e3,f3f7,d1d2,h8h7,d6d7,f7d7,d2d7,f8f7,d7c7,c4e6,e3d2,g7g6,d2c3,g6g5,c3e5,h7g8,f2f3,e6b3,g2f2,b3e6,f2e3,g8f8,f3f4,g5f4,e5f4,f8e8,f4h6,e6g4,h6f4,g4h5,c7c8,e8d7,c8h8,h5g4,f4c7,f7f3,e3d4,f3h3,h8b8,c6c5,b4c5,d7c6,c7d6,g4d7,d4e5,h3h6,b8g8,a6a5,e5f4,a5a4,g8a8,h6h4,f4e3,c6b5,e4e5,d7c6,e3d3,h4h3,d3d2,h3h2,d2d3,h2h3,d3d2,h3h2,d2d3,h2h3,d3d2",
      "Sinquefield(g2): PCN move history"
    )
    let fens1 = [
      "rnbqkbnr/pppppppp/8/8/4P3/8/PPPP1PPP/RNBQKBNR b KQkq - 0 1",
      "rnbqkbnr/pppp1ppp/8/4p3/4P3/8/PPPP1PPP/RNBQKBNR w KQkq - 0 2",
      "rnbqkbnr/pppp1ppp/8/4p3/4P3/5N2/PPPP1PPP/RNBQKB1R b KQkq - 1 2",
      "r1bqkbnr/pppp1ppp/2n5/4p3/4P3/5N2/PPPP1PPP/RNBQKB1R w KQkq - 2 3",
      "r1bqkbnr/pppp1ppp/2n5/4p3/2B1P3/5N2/PPPP1PPP/RNBQK2R b KQkq - 3 3",
      "r1bqkb1r/pppp1ppp/2n2n2/4p3/2B1P3/5N2/PPPP1PPP/RNBQK2R w KQkq - 4 4",
      "r1bqkb1r/pppp1ppp/2n2n2/4p3/2B1P3/3P1N2/PPP2PPP/RNBQK2R b KQkq - 0 4",
      "r1bqk2r/ppppbppp/2n2n2/4p3/2B1P3/3P1N2/PPP2PPP/RNBQK2R w KQkq - 1 5",
      "r1bqk2r/ppppbppp/2n2n2/4p3/2B1P3/3P1N2/PPP2PPP/RNBQ1RK1 b kq - 2 5",
      "r1bq1rk1/ppppbppp/2n2n2/4p3/2B1P3/3P1N2/PPP2PPP/RNBQ1RK1 w - - 3 6",
      "r1bq1rk1/ppppbppp/2n2n2/4p3/2B1P3/3P1N2/PPP2PPP/RNBQR1K1 b - - 4 6",
      "r1bq1rk1/ppp1bppp/2np1n2/4p3/2B1P3/3P1N2/PPP2PPP/RNBQR1K1 w - - 0 7",
      "r1bq1rk1/ppp1bppp/2np1n2/4p3/P1B1P3/3P1N2/1PP2PPP/RNBQR1K1 b - - 0 7",
      "r1bq1r1k/ppp1bppp/2np1n2/4p3/P1B1P3/3P1N2/1PP2PPP/RNBQR1K1 w - - 1 8",
      "r1bq1r1k/ppp1bppp/2np1n2/4p3/P1B1P3/2NP1N2/1PP2PPP/R1BQR1K1 b - - 2 8",
      "r1bq1rnk/ppp1bppp/2np4/4p3/P1B1P3/2NP1N2/1PP2PPP/R1BQR1K1 w - - 3 9",
      "r1bq1rnk/ppp1bppp/2np4/3Np3/P1B1P3/3P1N2/1PP2PPP/R1BQR1K1 b - - 4 9",
      "r1bq1rnk/ppp1b1pp/2np4/3Npp2/P1B1P3/3P1N2/1PP2PPP/R1BQR1K1 w - - 0 10",
      "r1bq1rnk/ppp1b1pp/2np4/3Npp2/P1B1P3/3P1N1P/1PP2PP1/R1BQR1K1 b - - 0 10",
      "r1bq1rnk/ppp1b1pp/2np4/3Np3/P1B1p3/3P1N1P/1PP2PP1/R1BQR1K1 w - - 0 11",
      "r1bq1rnk/ppp1b1pp/2np4/3Np3/P1B1P3/5N1P/1PP2PP1/R1BQR1K1 b - - 0 11",
      "r1bq1r1k/ppp1b1pp/2np1n2/3Np3/P1B1P3/5N1P/1PP2PP1/R1BQR1K1 w - - 1 12",
      "r1bq1r1k/ppp1b1pp/2np1n2/P2Np3/2B1P3/5N1P/1PP2PP1/R1BQR1K1 b - - 0 12",
      "r1bq1r1k/1pp1b1pp/p1np1n2/P2Np3/2B1P3/5N1P/1PP2PP1/R1BQR1K1 w - - 0 13",
      "r1bq1r1k/1pp1b1pp/p1np1n2/P2Np3/2B1P3/R4N1P/1PP2PP1/2BQR1K1 b - - 1 13",
      "r2q1r1k/1pp1b1pp/p1npbn2/P2Np3/2B1P3/R4N1P/1PP2PP1/2BQR1K1 w - - 2 14",
      "r2q1r1k/1pp1b1pp/p1npbN2/P3p3/2B1P3/R4N1P/1PP2PP1/2BQR1K1 b - - 0 14",
      "r2q1r1k/1pp1b1pp/p1np1N2/P3p3/2b1P3/R4N1P/1PP2PP1/2BQR1K1 w - - 0 15",
      "r2q1r1k/1pp1b1pp/p1np4/P2Np3/2b1P3/R4N1P/1PP2PP1/2BQR1K1 b - - 1 15",
      "r2q1r1k/1pp1b1pp/p1np4/Pb1Np3/4P3/R4N1P/1PP2PP1/2BQR1K1 w - - 2 16",
      "r2q1r1k/1pp1b1pp/p1np4/Pb1Np3/4P3/R3BN1P/1PP2PP1/3QR1K1 b - - 3 16",
      "r4r1k/1ppqb1pp/p1np4/Pb1Np3/4P3/R3BN1P/1PP2PP1/3QR1K1 w - - 4 17",
      "r4r1k/1ppqb1pp/p1np4/Pb1Np3/4P3/R3B2P/1PPN1PP1/3QR1K1 b - - 5 17",
      "r2n1r1k/1ppqb1pp/p2p4/Pb1Np3/4P3/R3B2P/1PPN1PP1/3QR1K1 w - - 6 18",
      "r2n1r1k/1ppqb1pp/p2p4/Pb1Np3/2P1P3/R3B2P/1P1N1PP1/3QR1K1 b - - 0 18",
      "r2n1r1k/1ppqb1pp/p1bp4/P2Np3/2P1P3/R3B2P/1P1N1PP1/3QR1K1 w - - 1 19",
      "r2n1r1k/1ppqb1pp/p1bp4/P2Np3/2P1P1Q1/R3B2P/1P1N1PP1/4R1K1 b - - 2 19",
      "r4r1k/1ppqb1pp/p1bpn3/P2Np3/2P1P1Q1/R3B2P/1P1N1PP1/4R1K1 w - - 3 20",
      "r4r1k/1ppqb1pp/p1bpn3/P2Np3/1PP1P1Q1/R3B2P/3N1PP1/4R1K1 b - - 0 20",
      "4rr1k/1ppqb1pp/p1bpn3/P2Np3/1PP1P1Q1/R3B2P/3N1PP1/4R1K1 w - - 1 21",
      "4rr1k/1ppqb1pp/p1bpn3/P2Np3/1PP1P1Q1/R3BN1P/5PP1/4R1K1 b - - 2 21",
      "3brr1k/1ppq2pp/p1bpn3/P2Np3/1PP1P1Q1/R3BN1P/5PP1/4R1K1 w - - 3 22",
      "3brr1k/1ppq2pp/p1bpn3/P2Np3/1PP1P1QP/R3BN2/5PP1/4R1K1 b - - 0 22",
      "3brr1k/1ppq2p1/p1bpn2p/P2Np3/1PP1P1QP/R3BN2/5PP1/4R1K1 w - - 0 23",
      "3brr1k/1ppq2p1/p1bpn2p/P2Np2P/1PP1P1Q1/R3BN2/5PP1/4R1K1 b - - 0 23",
      "3brr1k/1ppq2p1/p1bp3p/P2Np2P/1PPnP1Q1/R3BN2/5PP1/4R1K1 w - - 1 24",
      "3brr1k/1ppQ2p1/p1bp3p/P2Np2P/1PPnP3/R3BN2/5PP1/4R1K1 b - - 0 24",
      "3brr1k/1ppQ2p1/p1bp3p/P2Np2P/1PP1P3/R3Bn2/5PP1/4R1K1 w - - 0 25",
      "3brr1k/1ppQ2p1/p1bp3p/P2Np2P/1PP1P3/R3BP2/5P2/4R1K1 b - - 0 25",
      "3brr1k/1ppb2p1/p2p3p/P2Np2P/1PP1P3/R3BP2/5P2/4R1K1 w - - 0 26",
      "3brr1k/1ppb2p1/p2p3p/P2Np2P/1PP1P3/R3BP2/5PK1/4R3 b - - 1 26",
      "3br2k/1ppb1rp1/p2p3p/P2Np2P/1PP1P3/R3BP2/5PK1/4R3 w - - 2 27",
      "3br2k/1ppb1rp1/p2p3p/P2Np2P/1PP1P3/R3BP2/5PK1/7R b - - 3 27",
      "3b1r1k/1ppb1rp1/p2p3p/P2Np2P/1PP1P3/R3BP2/5PK1/7R w - - 4 28",
      "3b1r1k/1ppb1rp1/p2p3p/P2Np2P/1PP1P3/R4P2/5PK1/2B4R b - - 5 28",
      "3b1r1k/1p1b1rp1/p1pp3p/P2Np2P/1PP1P3/R4P2/5PK1/2B4R w - - 0 29",
      "3b1r1k/1p1b1rp1/pNpp3p/P3p2P/1PP1P3/R4P2/5PK1/2B4R b - - 1 29",
      "3b1r1k/1p3rp1/pNppb2p/P3p2P/1PP1P3/R4P2/5PK1/2B4R w - - 2 30",
      "3b1r1k/1p3rp1/pNppb2p/P3p2P/1PP1P3/R4P2/5PK1/2BR4 b - - 3 30",
      "5r1k/1p3rp1/pbppb2p/P3p2P/1PP1P3/R4P2/5PK1/2BR4 w - - 0 31",
      "5r1k/1p3rp1/pPppb2p/4p2P/1PP1P3/R4P2/5PK1/2BR4 b - - 0 31",
      "5r1k/1p4p1/pPppbr1p/4p2P/1PP1P3/R4P2/5PK1/2BR4 w - - 1 32",
      "5r1k/1p4p1/pPppbr1p/4p2P/1PP1P3/3R1P2/5PK1/2BR4 b - - 2 32",
      "5r1k/1p4p1/pPpp1r1p/4p2P/1Pb1P3/3R1P2/5PK1/2BR4 w - - 0 33",
      "5r1k/1p4p1/pPpR1r1p/4p2P/1Pb1P3/5P2/5PK1/2BR4 b - - 0 33",
      "5r1k/1p4p1/pPpR3p/4p2P/1Pb1P3/5r2/5PK1/2BR4 w - - 0 34",
      "5r1k/1p4p1/pPpR3p/4p2P/1Pb1P3/4Br2/5PK1/3R4 b - - 1 34",
      "5r1k/1p3rp1/pPpR3p/4p2P/1Pb1P3/4B3/5PK1/3R4 w - - 2 35",
      "5r1k/1p3rp1/pPpR3p/4p2P/1Pb1P3/4B3/3R1PK1/8 b - - 3 35",
      "5r2/1p3rpk/pPpR3p/4p2P/1Pb1P3/4B3/3R1PK1/8 w - - 4 36",
      "5r2/1p1R1rpk/pPp4p/4p2P/1Pb1P3/4B3/3R1PK1/8 b - - 5 36",
      "5r2/1p1r2pk/pPp4p/4p2P/1Pb1P3/4B3/3R1PK1/8 w - - 0 37",
      "5r2/1p1R2pk/pPp4p/4p2P/1Pb1P3/4B3/5PK1/8 b - - 0 37",
      "8/1p1R1rpk/pPp4p/4p2P/1Pb1P3/4B3/5PK1/8 w - - 1 38",
      "8/1pR2rpk/pPp4p/4p2P/1Pb1P3/4B3/5PK1/8 b - - 2 38",
      "8/1pR2rpk/pPp1b2p/4p2P/1P2P3/4B3/5PK1/8 w - - 3 39",
      "8/1pR2rpk/pPp1b2p/4p2P/1P2P3/8/3B1PK1/8 b - - 4 39",
      "8/1pR2r1k/pPp1b1pp/4p2P/1P2P3/8/3B1PK1/8 w - - 0 40",
      "8/1pR2r1k/pPp1b1pp/4p2P/1P2P3/2B5/5PK1/8 b - - 1 40",
      "8/1pR2r1k/pPp1b2p/4p1pP/1P2P3/2B5/5PK1/8 w - - 0 41",
      "8/1pR2r1k/pPp1b2p/4B1pP/1P2P3/8/5PK1/8 b - - 0 41",
      "6k1/1pR2r2/pPp1b2p/4B1pP/1P2P3/8/5PK1/8 w - - 1 42",
      "6k1/1pR2r2/pPp1b2p/4B1pP/1P2P3/5P2/6K1/8 b - - 0 42",
      "6k1/1pR2r2/pPp4p/4B1pP/1P2P3/1b3P2/6K1/8 w - - 1 43",
      "6k1/1pR2r2/pPp4p/4B1pP/1P2P3/1b3P2/5K2/8 b - - 2 43",
      "6k1/1pR2r2/pPp1b2p/4B1pP/1P2P3/5P2/5K2/8 w - - 3 44",
      "6k1/1pR2r2/pPp1b2p/4B1pP/1P2P3/4KP2/8/8 b - - 4 44",
      "5k2/1pR2r2/pPp1b2p/4B1pP/1P2P3/4KP2/8/8 w - - 5 45",
      "5k2/1pR2r2/pPp1b2p/4B1pP/1P2PP2/4K3/8/8 b - - 0 45",
      "5k2/1pR2r2/pPp1b2p/4B2P/1P2Pp2/4K3/8/8 w - - 0 46",
      "5k2/1pR2r2/pPp1b2p/7P/1P2PB2/4K3/8/8 b - - 0 46",
      "4k3/1pR2r2/pPp1b2p/7P/1P2PB2/4K3/8/8 w - - 1 47",
      "4k3/1pR2r2/pPp1b2B/7P/1P2P3/4K3/8/8 b - - 0 47",
      "4k3/1pR2r2/pPp4B/7P/1P2P1b1/4K3/8/8 w - - 1 48",
      "4k3/1pR2r2/pPp5/7P/1P2PBb1/4K3/8/8 b - - 2 48",
      "4k3/1pR2r2/pPp5/7b/1P2PB2/4K3/8/8 w - - 0 49",
      "2R1k3/1p3r2/pPp5/7b/1P2PB2/4K3/8/8 b - - 1 49",
      "2R5/1p1k1r2/pPp5/7b/1P2PB2/4K3/8/8 w - - 2 50",
      "7R/1p1k1r2/pPp5/7b/1P2PB2/4K3/8/8 b - - 3 50",
      "7R/1p1k1r2/pPp5/8/1P2PBb1/4K3/8/8 w - - 4 51",
      "7R/1pBk1r2/pPp5/8/1P2P1b1/4K3/8/8 b - - 5 51",
      "7R/1pBk4/pPp5/8/1P2P1b1/4Kr2/8/8 w - - 6 52",
      "7R/1pBk4/pPp5/8/1P1KP1b1/5r2/8/8 b - - 7 52",
      "7R/1pBk4/pPp5/8/1P1KP1b1/7r/8/8 w - - 8 53",
      "1R6/1pBk4/pPp5/8/1P1KP1b1/7r/8/8 b - - 9 53",
      "1R6/1pBk4/pP6/2p5/1P1KP1b1/7r/8/8 w - - 0 54",
      "1R6/1pBk4/pP6/2P5/3KP1b1/7r/8/8 b - - 0 54",
      "1R6/1pB5/pPk5/2P5/3KP1b1/7r/8/8 w - - 1 55",
      "1R6/1p6/pPkB4/2P5/3KP1b1/7r/8/8 b - - 2 55",
      "1R6/1p1b4/pPkB4/2P5/3KP3/7r/8/8 w - - 3 56",
      "1R6/1p1b4/pPkB4/2P1K3/4P3/7r/8/8 b - - 4 56",
      "1R6/1p1b4/pPkB3r/2P1K3/4P3/8/8/8 w - - 5 57",
      "6R1/1p1b4/pPkB3r/2P1K3/4P3/8/8/8 b - - 6 57",
      "6R1/1p1b4/1PkB3r/p1P1K3/4P3/8/8/8 w - - 0 58",
      "6R1/1p1b4/1PkB3r/p1P5/4PK2/8/8/8 b - - 1 58",
      "6R1/1p1b4/1PkB3r/2P5/p3PK2/8/8/8 w - - 0 59",
      "R7/1p1b4/1PkB3r/2P5/p3PK2/8/8/8 b - - 1 59",
      "R7/1p1b4/1PkB4/2P5/p3PK1r/8/8/8 w - - 2 60",
      "R7/1p1b4/1PkB4/2P5/p3P2r/4K3/8/8 b - - 3 60",
      "R7/1p1b4/1P1B4/1kP5/p3P2r/4K3/8/8 w - - 4 61",
      "R7/1p1b4/1P1B4/1kP1P3/p6r/4K3/8/8 b - - 0 61",
      "R7/1p6/1PbB4/1kP1P3/p6r/4K3/8/8 w - - 1 62",
      "R7/1p6/1PbB4/1kP1P3/p6r/3K4/8/8 b - - 2 62",
      "R7/1p6/1PbB4/1kP1P3/p7/3K3r/8/8 w - - 3 63",
      "R7/1p6/1PbB4/1kP1P3/p7/7r/3K4/8 b - - 4 63",
      "R7/1p6/1PbB4/1kP1P3/p7/8/3K3r/8 w - - 5 64",
      "R7/1p6/1PbB4/1kP1P3/p7/3K4/7r/8 b - - 6 64",
      "R7/1p6/1PbB4/1kP1P3/p7/3K3r/8/8 w - - 7 65",
      "R7/1p6/1PbB4/1kP1P3/p7/7r/3K4/8 b - - 8 65",
      "R7/1p6/1PbB4/1kP1P3/p7/8/3K3r/8 w - - 9 66",
      "R7/1p6/1PbB4/1kP1P3/p7/3K4/7r/8 b - - 10 66",
      "R7/1p6/1PbB4/1kP1P3/p7/3K3r/8/8 w - - 11 67",
      "R7/1p6/1PbB4/1kP1P3/p7/7r/3K4/8 b - - 12 67",
    ]
    for (index, history) in chess.getMoveHistory().enumerated() {
      XCTAssertEqual(history.fen, fens1[index], "Sinquefield(g2): FEN move (index)")
    }

    pgn = pgns.removeFirst()
    chess = try pgn.validate()
    XCTAssertEqual(chess.getTag("Event")?.value, "Sinquefield Cup", "Sinquefield(g3): event")
    XCTAssertEqual(chess.getTag("White")?.value, "Mamedyarov, Shakhriyar", "Sinquefield(g3): white")
    XCTAssertEqual(chess.getTag("Black")?.value, "So, Wesley", "Sinquefield(g3): black")
    XCTAssertEqual(chess.getMoveCount(), 51, "Sinquefield(g3): move count")
    XCTAssertEqual(
      chess.getMoveHistory().map { $0.pcn }.joined(separator: ","),
      "d2d4,g8f6,c2c4,e7e6,g1f3,d7d5,c1g5,f8e7,e2e3,e8g8,d1c2,h7h6,g5f6,e7f6,h2h4,g7g6,b1c3,c7c5,d4c5,d5c4,h4h5,g6g5,f1c4,d8a5,a1c1,b8d7,e1g1,f6c3,c2c3,a5c3,c1c3,d7c5,f3e5,b7b6,f2f4,c5e4,c3d3,e4g3,f1f3,g3e4,d3d4,c8b7,f4f5,e4f6,f3f1,a8e8,f5e6,f7e6,e5g6,f8f7,g6e5,f7f8,d4d6,b7d5,f1f6,f8f6,c4d5,e6d5,d6f6,e8e5,f6h6,e5e3,h6g6,g8h7,g6g5,e3e2,g5d5,e2b2,g1h2,b2a2,h2h3,a7a5,g2g4,a5a4,g4g5,a4a3,d5d7,h7g8,d7d8,g8h7,d8d7,h7g8,d7d8,g8h7,g5g6,h7h6,d8h8,h6g7,h8h7,g7g8,h7a7,a2a1,h3g2,a1c1,h5h6,c1c8,a7a3,b6b5,a3a7,c8b8,g2g3",
      "Sinquefield(g3): PCN move history"
    )
    let fens2 = [
      "rnbqkbnr/pppppppp/8/8/3P4/8/PPP1PPPP/RNBQKBNR b KQkq - 0 1",
      "rnbqkb1r/pppppppp/5n2/8/3P4/8/PPP1PPPP/RNBQKBNR w KQkq - 1 2",
      "rnbqkb1r/pppppppp/5n2/8/2PP4/8/PP2PPPP/RNBQKBNR b KQkq - 0 2",
      "rnbqkb1r/pppp1ppp/4pn2/8/2PP4/8/PP2PPPP/RNBQKBNR w KQkq - 0 3",
      "rnbqkb1r/pppp1ppp/4pn2/8/2PP4/5N2/PP2PPPP/RNBQKB1R b KQkq - 1 3",
      "rnbqkb1r/ppp2ppp/4pn2/3p4/2PP4/5N2/PP2PPPP/RNBQKB1R w KQkq - 0 4",
      "rnbqkb1r/ppp2ppp/4pn2/3p2B1/2PP4/5N2/PP2PPPP/RN1QKB1R b KQkq - 1 4",
      "rnbqk2r/ppp1bppp/4pn2/3p2B1/2PP4/5N2/PP2PPPP/RN1QKB1R w KQkq - 2 5",
      "rnbqk2r/ppp1bppp/4pn2/3p2B1/2PP4/4PN2/PP3PPP/RN1QKB1R b KQkq - 0 5",
      "rnbq1rk1/ppp1bppp/4pn2/3p2B1/2PP4/4PN2/PP3PPP/RN1QKB1R w KQ - 1 6",
      "rnbq1rk1/ppp1bppp/4pn2/3p2B1/2PP4/4PN2/PPQ2PPP/RN2KB1R b KQ - 2 6",
      "rnbq1rk1/ppp1bpp1/4pn1p/3p2B1/2PP4/4PN2/PPQ2PPP/RN2KB1R w KQ - 0 7",
      "rnbq1rk1/ppp1bpp1/4pB1p/3p4/2PP4/4PN2/PPQ2PPP/RN2KB1R b KQ - 0 7",
      "rnbq1rk1/ppp2pp1/4pb1p/3p4/2PP4/4PN2/PPQ2PPP/RN2KB1R w KQ - 0 8",
      "rnbq1rk1/ppp2pp1/4pb1p/3p4/2PP3P/4PN2/PPQ2PP1/RN2KB1R b KQ - 0 8",
      "rnbq1rk1/ppp2p2/4pbpp/3p4/2PP3P/4PN2/PPQ2PP1/RN2KB1R w KQ - 0 9",
      "rnbq1rk1/ppp2p2/4pbpp/3p4/2PP3P/2N1PN2/PPQ2PP1/R3KB1R b KQ - 1 9",
      "rnbq1rk1/pp3p2/4pbpp/2pp4/2PP3P/2N1PN2/PPQ2PP1/R3KB1R w KQ - 0 10",
      "rnbq1rk1/pp3p2/4pbpp/2Pp4/2P4P/2N1PN2/PPQ2PP1/R3KB1R b KQ - 0 10",
      "rnbq1rk1/pp3p2/4pbpp/2P5/2p4P/2N1PN2/PPQ2PP1/R3KB1R w KQ - 0 11",
      "rnbq1rk1/pp3p2/4pbpp/2P4P/2p5/2N1PN2/PPQ2PP1/R3KB1R b KQ - 0 11",
      "rnbq1rk1/pp3p2/4pb1p/2P3pP/2p5/2N1PN2/PPQ2PP1/R3KB1R w KQ - 0 12",
      "rnbq1rk1/pp3p2/4pb1p/2P3pP/2B5/2N1PN2/PPQ2PP1/R3K2R b KQ - 0 12",
      "rnb2rk1/pp3p2/4pb1p/q1P3pP/2B5/2N1PN2/PPQ2PP1/R3K2R w KQ - 1 13",
      "rnb2rk1/pp3p2/4pb1p/q1P3pP/2B5/2N1PN2/PPQ2PP1/2R1K2R b K - 2 13",
      "r1b2rk1/pp1n1p2/4pb1p/q1P3pP/2B5/2N1PN2/PPQ2PP1/2R1K2R w K - 3 14",
      "r1b2rk1/pp1n1p2/4pb1p/q1P3pP/2B5/2N1PN2/PPQ2PP1/2R2RK1 b - - 4 14",
      "r1b2rk1/pp1n1p2/4p2p/q1P3pP/2B5/2b1PN2/PPQ2PP1/2R2RK1 w - - 0 15",
      "r1b2rk1/pp1n1p2/4p2p/q1P3pP/2B5/2Q1PN2/PP3PP1/2R2RK1 b - - 0 15",
      "r1b2rk1/pp1n1p2/4p2p/2P3pP/2B5/2q1PN2/PP3PP1/2R2RK1 w - - 0 16",
      "r1b2rk1/pp1n1p2/4p2p/2P3pP/2B5/2R1PN2/PP3PP1/5RK1 b - - 0 16",
      "r1b2rk1/pp3p2/4p2p/2n3pP/2B5/2R1PN2/PP3PP1/5RK1 w - - 0 17",
      "r1b2rk1/pp3p2/4p2p/2n1N1pP/2B5/2R1P3/PP3PP1/5RK1 b - - 1 17",
      "r1b2rk1/p4p2/1p2p2p/2n1N1pP/2B5/2R1P3/PP3PP1/5RK1 w - - 0 18",
      "r1b2rk1/p4p2/1p2p2p/2n1N1pP/2B2P2/2R1P3/PP4P1/5RK1 b - - 0 18",
      "r1b2rk1/p4p2/1p2p2p/4N1pP/2B1nP2/2R1P3/PP4P1/5RK1 w - - 1 19",
      "r1b2rk1/p4p2/1p2p2p/4N1pP/2B1nP2/3RP3/PP4P1/5RK1 b - - 2 19",
      "r1b2rk1/p4p2/1p2p2p/4N1pP/2B2P2/3RP1n1/PP4P1/5RK1 w - - 3 20",
      "r1b2rk1/p4p2/1p2p2p/4N1pP/2B2P2/3RPRn1/PP4P1/6K1 b - - 4 20",
      "r1b2rk1/p4p2/1p2p2p/4N1pP/2B1nP2/3RPR2/PP4P1/6K1 w - - 5 21",
      "r1b2rk1/p4p2/1p2p2p/4N1pP/2BRnP2/4PR2/PP4P1/6K1 b - - 6 21",
      "r4rk1/pb3p2/1p2p2p/4N1pP/2BRnP2/4PR2/PP4P1/6K1 w - - 7 22",
      "r4rk1/pb3p2/1p2p2p/4NPpP/2BRn3/4PR2/PP4P1/6K1 b - - 0 22",
      "r4rk1/pb3p2/1p2pn1p/4NPpP/2BR4/4PR2/PP4P1/6K1 w - - 1 23",
      "r4rk1/pb3p2/1p2pn1p/4NPpP/2BR4/4P3/PP4P1/5RK1 b - - 2 23",
      "4rrk1/pb3p2/1p2pn1p/4NPpP/2BR4/4P3/PP4P1/5RK1 w - - 3 24",
      "4rrk1/pb3p2/1p2Pn1p/4N1pP/2BR4/4P3/PP4P1/5RK1 b - - 0 24",
      "4rrk1/pb6/1p2pn1p/4N1pP/2BR4/4P3/PP4P1/5RK1 w - - 0 25",
      "4rrk1/pb6/1p2pnNp/6pP/2BR4/4P3/PP4P1/5RK1 b - - 1 25",
      "4r1k1/pb3r2/1p2pnNp/6pP/2BR4/4P3/PP4P1/5RK1 w - - 2 26",
      "4r1k1/pb3r2/1p2pn1p/4N1pP/2BR4/4P3/PP4P1/5RK1 b - - 3 26",
      "4rrk1/pb6/1p2pn1p/4N1pP/2BR4/4P3/PP4P1/5RK1 w - - 4 27",
      "4rrk1/pb6/1p1Rpn1p/4N1pP/2B5/4P3/PP4P1/5RK1 b - - 5 27",
      "4rrk1/p7/1p1Rpn1p/3bN1pP/2B5/4P3/PP4P1/5RK1 w - - 6 28",
      "4rrk1/p7/1p1RpR1p/3bN1pP/2B5/4P3/PP4P1/6K1 b - - 0 28",
      "4r1k1/p7/1p1Rpr1p/3bN1pP/2B5/4P3/PP4P1/6K1 w - - 0 29",
      "4r1k1/p7/1p1Rpr1p/3BN1pP/8/4P3/PP4P1/6K1 b - - 0 29",
      "4r1k1/p7/1p1R1r1p/3pN1pP/8/4P3/PP4P1/6K1 w - - 0 30",
      "4r1k1/p7/1p3R1p/3pN1pP/8/4P3/PP4P1/6K1 b - - 0 30",
      "6k1/p7/1p3R1p/3pr1pP/8/4P3/PP4P1/6K1 w - - 0 31",
      "6k1/p7/1p5R/3pr1pP/8/4P3/PP4P1/6K1 b - - 0 31",
      "6k1/p7/1p5R/3p2pP/8/4r3/PP4P1/6K1 w - - 0 32",
      "6k1/p7/1p4R1/3p2pP/8/4r3/PP4P1/6K1 b - - 1 32",
      "8/p6k/1p4R1/3p2pP/8/4r3/PP4P1/6K1 w - - 2 33",
      "8/p6k/1p6/3p2RP/8/4r3/PP4P1/6K1 b - - 0 33",
      "8/p6k/1p6/3p2RP/8/8/PP2r1P1/6K1 w - - 1 34",
      "8/p6k/1p6/3R3P/8/8/PP2r1P1/6K1 b - - 0 34",
      "8/p6k/1p6/3R3P/8/8/Pr4P1/6K1 w - - 0 35",
      "8/p6k/1p6/3R3P/8/8/Pr4PK/8 b - - 1 35",
      "8/p6k/1p6/3R3P/8/8/r5PK/8 w - - 0 36",
      "8/p6k/1p6/3R3P/8/7K/r5P1/8 b - - 1 36",
      "8/7k/1p6/p2R3P/8/7K/r5P1/8 w - - 0 37",
      "8/7k/1p6/p2R3P/6P1/7K/r7/8 b - - 0 37",
      "8/7k/1p6/3R3P/p5P1/7K/r7/8 w - - 0 38",
      "8/7k/1p6/3R2PP/p7/7K/r7/8 b - - 0 38",
      "8/7k/1p6/3R2PP/8/p6K/r7/8 w - - 0 39",
      "8/3R3k/1p6/6PP/8/p6K/r7/8 b - - 1 39",
      "6k1/3R4/1p6/6PP/8/p6K/r7/8 w - - 2 40",
      "3R2k1/8/1p6/6PP/8/p6K/r7/8 b - - 3 40",
      "3R4/7k/1p6/6PP/8/p6K/r7/8 w - - 4 41",
      "8/3R3k/1p6/6PP/8/p6K/r7/8 b - - 5 41",
      "6k1/3R4/1p6/6PP/8/p6K/r7/8 w - - 6 42",
      "3R2k1/8/1p6/6PP/8/p6K/r7/8 b - - 7 42",
      "3R4/7k/1p6/6PP/8/p6K/r7/8 w - - 8 43",
      "3R4/7k/1p4P1/7P/8/p6K/r7/8 b - - 0 43",
      "3R4/8/1p4Pk/7P/8/p6K/r7/8 w - - 1 44",
      "7R/8/1p4Pk/7P/8/p6K/r7/8 b - - 2 44",
      "7R/6k1/1p4P1/7P/8/p6K/r7/8 w - - 3 45",
      "8/6kR/1p4P1/7P/8/p6K/r7/8 b - - 4 45",
      "6k1/7R/1p4P1/7P/8/p6K/r7/8 w - - 5 46",
      "6k1/R7/1p4P1/7P/8/p6K/r7/8 b - - 6 46",
      "6k1/R7/1p4P1/7P/8/p6K/8/r7 w - - 7 47",
      "6k1/R7/1p4P1/7P/8/p7/6K1/r7 b - - 8 47",
      "6k1/R7/1p4P1/7P/8/p7/6K1/2r5 w - - 9 48",
      "6k1/R7/1p4PP/8/8/p7/6K1/2r5 b - - 0 48",
      "2r3k1/R7/1p4PP/8/8/p7/6K1/8 w - - 1 49",
      "2r3k1/8/1p4PP/8/8/R7/6K1/8 b - - 0 49",
      "2r3k1/8/6PP/1p6/8/R7/6K1/8 w - - 0 50",
      "2r3k1/R7/6PP/1p6/8/8/6K1/8 b - - 1 50",
      "1r4k1/R7/6PP/1p6/8/8/6K1/8 w - - 2 51",
      "1r4k1/R7/6PP/1p6/8/6K1/8/8 b - - 3 51",
    ]
    for (index, history) in chess.getMoveHistory().enumerated() {
      XCTAssertEqual(history.fen, fens2[index], "Sinquefield(g3): FEN move (index)")
    }

    pgn = pgns.removeFirst()
    chess = try pgn.validate()
    XCTAssertEqual(chess.getTag("Event")?.value, "Sinquefield Cup", "Sinquefield(g4): event")
    XCTAssertEqual(chess.getTag("White")?.value, "Nakamura, Hikaru", "Sinquefield(g4): white")
    XCTAssertEqual(chess.getTag("Black")?.value, "Anand, Viswanathan", "Sinquefield(g4): black")
    XCTAssertEqual(chess.getMoveCount(), 29, "Sinquefield(g4): move count")
    XCTAssertEqual(
      chess.getMoveHistory().map { $0.pcn }.joined(separator: ","),
      "d2d4,g8f6,c2c4,e7e6,g1f3,d7d5,b1c3,f8e7,c1f4,e8g8,e2e3,c7c5,d4c5,e7c5,c4d5,f6d5,c3d5,e6d5,a2a3,b8c6,f1d3,c5b6,e1g1,c8g4,h2h3,g4h5,d3b5,a8c8,a1c1,h7h6,b2b4,f8e8,b5d3,h5f3,d1f3,c6e5,f3e2,c8c1,f1c1,e5d3,e2d3,d5d4,e3d4,b6d4,d3d2,d8f6,f4g3,e8d8,d2e2,f6g5,c1d1,g5g3,d1d4,g3c7,d4d8,c7d8,g2g3",
      "Sinquefield(g4): PCN move history"
    )
    let fens3 = [
      "rnbqkbnr/pppppppp/8/8/3P4/8/PPP1PPPP/RNBQKBNR b KQkq - 0 1",
      "rnbqkb1r/pppppppp/5n2/8/3P4/8/PPP1PPPP/RNBQKBNR w KQkq - 1 2",
      "rnbqkb1r/pppppppp/5n2/8/2PP4/8/PP2PPPP/RNBQKBNR b KQkq - 0 2",
      "rnbqkb1r/pppp1ppp/4pn2/8/2PP4/8/PP2PPPP/RNBQKBNR w KQkq - 0 3",
      "rnbqkb1r/pppp1ppp/4pn2/8/2PP4/5N2/PP2PPPP/RNBQKB1R b KQkq - 1 3",
      "rnbqkb1r/ppp2ppp/4pn2/3p4/2PP4/5N2/PP2PPPP/RNBQKB1R w KQkq - 0 4",
      "rnbqkb1r/ppp2ppp/4pn2/3p4/2PP4/2N2N2/PP2PPPP/R1BQKB1R b KQkq - 1 4",
      "rnbqk2r/ppp1bppp/4pn2/3p4/2PP4/2N2N2/PP2PPPP/R1BQKB1R w KQkq - 2 5",
      "rnbqk2r/ppp1bppp/4pn2/3p4/2PP1B2/2N2N2/PP2PPPP/R2QKB1R b KQkq - 3 5",
      "rnbq1rk1/ppp1bppp/4pn2/3p4/2PP1B2/2N2N2/PP2PPPP/R2QKB1R w KQ - 4 6",
      "rnbq1rk1/ppp1bppp/4pn2/3p4/2PP1B2/2N1PN2/PP3PPP/R2QKB1R b KQ - 0 6",
      "rnbq1rk1/pp2bppp/4pn2/2pp4/2PP1B2/2N1PN2/PP3PPP/R2QKB1R w KQ - 0 7",
      "rnbq1rk1/pp2bppp/4pn2/2Pp4/2P2B2/2N1PN2/PP3PPP/R2QKB1R b KQ - 0 7",
      "rnbq1rk1/pp3ppp/4pn2/2bp4/2P2B2/2N1PN2/PP3PPP/R2QKB1R w KQ - 0 8",
      "rnbq1rk1/pp3ppp/4pn2/2bP4/5B2/2N1PN2/PP3PPP/R2QKB1R b KQ - 0 8",
      "rnbq1rk1/pp3ppp/4p3/2bn4/5B2/2N1PN2/PP3PPP/R2QKB1R w KQ - 0 9",
      "rnbq1rk1/pp3ppp/4p3/2bN4/5B2/4PN2/PP3PPP/R2QKB1R b KQ - 0 9",
      "rnbq1rk1/pp3ppp/8/2bp4/5B2/4PN2/PP3PPP/R2QKB1R w KQ - 0 10",
      "rnbq1rk1/pp3ppp/8/2bp4/5B2/P3PN2/1P3PPP/R2QKB1R b KQ - 0 10",
      "r1bq1rk1/pp3ppp/2n5/2bp4/5B2/P3PN2/1P3PPP/R2QKB1R w KQ - 1 11",
      "r1bq1rk1/pp3ppp/2n5/2bp4/5B2/P2BPN2/1P3PPP/R2QK2R b KQ - 2 11",
      "r1bq1rk1/pp3ppp/1bn5/3p4/5B2/P2BPN2/1P3PPP/R2QK2R w KQ - 3 12",
      "r1bq1rk1/pp3ppp/1bn5/3p4/5B2/P2BPN2/1P3PPP/R2Q1RK1 b - - 4 12",
      "r2q1rk1/pp3ppp/1bn5/3p4/5Bb1/P2BPN2/1P3PPP/R2Q1RK1 w - - 5 13",
      "r2q1rk1/pp3ppp/1bn5/3p4/5Bb1/P2BPN1P/1P3PP1/R2Q1RK1 b - - 0 13",
      "r2q1rk1/pp3ppp/1bn5/3p3b/5B2/P2BPN1P/1P3PP1/R2Q1RK1 w - - 1 14",
      "r2q1rk1/pp3ppp/1bn5/1B1p3b/5B2/P3PN1P/1P3PP1/R2Q1RK1 b - - 2 14",
      "2rq1rk1/pp3ppp/1bn5/1B1p3b/5B2/P3PN1P/1P3PP1/R2Q1RK1 w - - 3 15",
      "2rq1rk1/pp3ppp/1bn5/1B1p3b/5B2/P3PN1P/1P3PP1/2RQ1RK1 b - - 4 15",
      "2rq1rk1/pp3pp1/1bn4p/1B1p3b/5B2/P3PN1P/1P3PP1/2RQ1RK1 w - - 0 16",
      "2rq1rk1/pp3pp1/1bn4p/1B1p3b/1P3B2/P3PN1P/5PP1/2RQ1RK1 b - - 0 16",
      "2rqr1k1/pp3pp1/1bn4p/1B1p3b/1P3B2/P3PN1P/5PP1/2RQ1RK1 w - - 1 17",
      "2rqr1k1/pp3pp1/1bn4p/3p3b/1P3B2/P2BPN1P/5PP1/2RQ1RK1 b - - 2 17",
      "2rqr1k1/pp3pp1/1bn4p/3p4/1P3B2/P2BPb1P/5PP1/2RQ1RK1 w - - 0 18",
      "2rqr1k1/pp3pp1/1bn4p/3p4/1P3B2/P2BPQ1P/5PP1/2R2RK1 b - - 0 18",
      "2rqr1k1/pp3pp1/1b5p/3pn3/1P3B2/P2BPQ1P/5PP1/2R2RK1 w - - 1 19",
      "2rqr1k1/pp3pp1/1b5p/3pn3/1P3B2/P2BP2P/4QPP1/2R2RK1 b - - 2 19",
      "3qr1k1/pp3pp1/1b5p/3pn3/1P3B2/P2BP2P/4QPP1/2r2RK1 w - - 0 20",
      "3qr1k1/pp3pp1/1b5p/3pn3/1P3B2/P2BP2P/4QPP1/2R3K1 b - - 0 20",
      "3qr1k1/pp3pp1/1b5p/3p4/1P3B2/P2nP2P/4QPP1/2R3K1 w - - 0 21",
      "3qr1k1/pp3pp1/1b5p/3p4/1P3B2/P2QP2P/5PP1/2R3K1 b - - 0 21",
      "3qr1k1/pp3pp1/1b5p/8/1P1p1B2/P2QP2P/5PP1/2R3K1 w - - 0 22",
      "3qr1k1/pp3pp1/1b5p/8/1P1P1B2/P2Q3P/5PP1/2R3K1 b - - 0 22",
      "3qr1k1/pp3pp1/7p/8/1P1b1B2/P2Q3P/5PP1/2R3K1 w - - 0 23",
      "3qr1k1/pp3pp1/7p/8/1P1b1B2/P6P/3Q1PP1/2R3K1 b - - 1 23",
      "4r1k1/pp3pp1/5q1p/8/1P1b1B2/P6P/3Q1PP1/2R3K1 w - - 2 24",
      "4r1k1/pp3pp1/5q1p/8/1P1b4/P5BP/3Q1PP1/2R3K1 b - - 3 24",
      "3r2k1/pp3pp1/5q1p/8/1P1b4/P5BP/3Q1PP1/2R3K1 w - - 4 25",
      "3r2k1/pp3pp1/5q1p/8/1P1b4/P5BP/4QPP1/2R3K1 b - - 5 25",
      "3r2k1/pp3pp1/7p/6q1/1P1b4/P5BP/4QPP1/2R3K1 w - - 6 26",
      "3r2k1/pp3pp1/7p/6q1/1P1b4/P5BP/4QPP1/3R2K1 b - - 7 26",
      "3r2k1/pp3pp1/7p/8/1P1b4/P5qP/4QPP1/3R2K1 w - - 0 27",
      "3r2k1/pp3pp1/7p/8/1P1R4/P5qP/4QPP1/6K1 b - - 0 27",
      "3r2k1/ppq2pp1/7p/8/1P1R4/P6P/4QPP1/6K1 w - - 1 28",
      "3R2k1/ppq2pp1/7p/8/1P6/P6P/4QPP1/6K1 b - - 0 28",
      "3q2k1/pp3pp1/7p/8/1P6/P6P/4QPP1/6K1 w - - 0 29",
      "3q2k1/pp3pp1/7p/8/1P6/P5PP/4QP2/6K1 b - - 0 29",
    ]
    for (index, history) in chess.getMoveHistory().enumerated() {
      XCTAssertEqual(history.fen, fens3[index], "Sinquefield(g4): FEN move (index)")
    }

    pgn = pgns.removeFirst()
    chess = try pgn.validate()
    XCTAssertEqual(chess.getTag("Event")?.value, "Sinquefield Cup", "Sinquefield(g5): event")
    XCTAssertEqual(chess.getTag("White")?.value, "Aronian, Levon", "Sinquefield(g5): white")
    XCTAssertEqual(chess.getTag("Black")?.value, "Karjakin, Sergey", "Sinquefield(g5): black")
    XCTAssertEqual(chess.getMoveCount(), 69, "Sinquefield(g5): move count")
    XCTAssertEqual(
      chess.getMoveHistory().map { $0.pcn }.joined(separator: ","),
      "e2e4,e7e5,g1f3,b8c6,f1b5,g8f6,e1g1,f6e4,d2d4,e4d6,b5c6,d7c6,d4e5,d6f5,d1d8,e8d8,b1c3,d8e8,h2h3,h7h5,c1g5,c8e6,f1d1,f8e7,d1d2,a8d8,d2d8,e8d8,a1d1,d8e8,b2b3,h5h4,g5c1,a7a5,c3e2,e6d5,f3e1,d5e6,e2f4,e6c8,e1f3,h8h6,f3h2,h6h8,h2g4,f5h6,g4e3,h6f5,e3c4,g7g5,f4e2,b7b6,c4d2,f5g7,d2e4,g7e6,e4f6,e7f6,e5f6,h8g8,f2f3,g8g6,c1b2,c8d7,e2c1,c6c5,b2e5,e8d8,c1d3,d8c8,e5b2,d7e8,d1e1,g6g8,e1e4,c8d8,g1f2,e6f8,d3e5,f8h7,f3f4,g8h8,e5f3,g5f4,e4f4,h7f8,f4h4,h8h4,f3h4,e8c6,f2e3,d8d7,g2g4,f8g6,h4g6,f7g6,b2e5,b6b5,e5c7,a5a4,c7b6,a4b3,c2b3,g6g5,b6c5,d7e6,c5d4,c6g2,h3h4,g5h4,e3f4,e6f7,g4g5,h4h3,f4g3,f7g6,d4e3,g6f7,e3d2,f7g6,a2a4,b5a4,b3a4,g6f7,a4a5,g2f1,d2f4,f7g6,g3g4,g6f7,g4f5,f1d3,f5e5,d3e2,e5d6,e2d3,d6c5",
      "Sinquefield(g5): PCN move history"
    )
    let fens4 = [
      "rnbqkbnr/pppppppp/8/8/4P3/8/PPPP1PPP/RNBQKBNR b KQkq - 0 1",
      "rnbqkbnr/pppp1ppp/8/4p3/4P3/8/PPPP1PPP/RNBQKBNR w KQkq - 0 2",
      "rnbqkbnr/pppp1ppp/8/4p3/4P3/5N2/PPPP1PPP/RNBQKB1R b KQkq - 1 2",
      "r1bqkbnr/pppp1ppp/2n5/4p3/4P3/5N2/PPPP1PPP/RNBQKB1R w KQkq - 2 3",
      "r1bqkbnr/pppp1ppp/2n5/1B2p3/4P3/5N2/PPPP1PPP/RNBQK2R b KQkq - 3 3",
      "r1bqkb1r/pppp1ppp/2n2n2/1B2p3/4P3/5N2/PPPP1PPP/RNBQK2R w KQkq - 4 4",
      "r1bqkb1r/pppp1ppp/2n2n2/1B2p3/4P3/5N2/PPPP1PPP/RNBQ1RK1 b kq - 5 4",
      "r1bqkb1r/pppp1ppp/2n5/1B2p3/4n3/5N2/PPPP1PPP/RNBQ1RK1 w kq - 0 5",
      "r1bqkb1r/pppp1ppp/2n5/1B2p3/3Pn3/5N2/PPP2PPP/RNBQ1RK1 b kq - 0 5",
      "r1bqkb1r/pppp1ppp/2nn4/1B2p3/3P4/5N2/PPP2PPP/RNBQ1RK1 w kq - 1 6",
      "r1bqkb1r/pppp1ppp/2Bn4/4p3/3P4/5N2/PPP2PPP/RNBQ1RK1 b kq - 0 6",
      "r1bqkb1r/ppp2ppp/2pn4/4p3/3P4/5N2/PPP2PPP/RNBQ1RK1 w kq - 0 7",
      "r1bqkb1r/ppp2ppp/2pn4/4P3/8/5N2/PPP2PPP/RNBQ1RK1 b kq - 0 7",
      "r1bqkb1r/ppp2ppp/2p5/4Pn2/8/5N2/PPP2PPP/RNBQ1RK1 w kq - 1 8",
      "r1bQkb1r/ppp2ppp/2p5/4Pn2/8/5N2/PPP2PPP/RNB2RK1 b kq - 0 8",
      "r1bk1b1r/ppp2ppp/2p5/4Pn2/8/5N2/PPP2PPP/RNB2RK1 w - - 0 9",
      "r1bk1b1r/ppp2ppp/2p5/4Pn2/8/2N2N2/PPP2PPP/R1B2RK1 b - - 1 9",
      "r1b1kb1r/ppp2ppp/2p5/4Pn2/8/2N2N2/PPP2PPP/R1B2RK1 w - - 2 10",
      "r1b1kb1r/ppp2ppp/2p5/4Pn2/8/2N2N1P/PPP2PP1/R1B2RK1 b - - 0 10",
      "r1b1kb1r/ppp2pp1/2p5/4Pn1p/8/2N2N1P/PPP2PP1/R1B2RK1 w - - 0 11",
      "r1b1kb1r/ppp2pp1/2p5/4PnBp/8/2N2N1P/PPP2PP1/R4RK1 b - - 1 11",
      "r3kb1r/ppp2pp1/2p1b3/4PnBp/8/2N2N1P/PPP2PP1/R4RK1 w - - 2 12",
      "r3kb1r/ppp2pp1/2p1b3/4PnBp/8/2N2N1P/PPP2PP1/R2R2K1 b - - 3 12",
      "r3k2r/ppp1bpp1/2p1b3/4PnBp/8/2N2N1P/PPP2PP1/R2R2K1 w - - 4 13",
      "r3k2r/ppp1bpp1/2p1b3/4PnBp/8/2N2N1P/PPPR1PP1/R5K1 b - - 5 13",
      "3rk2r/ppp1bpp1/2p1b3/4PnBp/8/2N2N1P/PPPR1PP1/R5K1 w - - 6 14",
      "3Rk2r/ppp1bpp1/2p1b3/4PnBp/8/2N2N1P/PPP2PP1/R5K1 b - - 0 14",
      "3k3r/ppp1bpp1/2p1b3/4PnBp/8/2N2N1P/PPP2PP1/R5K1 w - - 0 15",
      "3k3r/ppp1bpp1/2p1b3/4PnBp/8/2N2N1P/PPP2PP1/3R2K1 b - - 1 15",
      "4k2r/ppp1bpp1/2p1b3/4PnBp/8/2N2N1P/PPP2PP1/3R2K1 w - - 2 16",
      "4k2r/ppp1bpp1/2p1b3/4PnBp/8/1PN2N1P/P1P2PP1/3R2K1 b - - 0 16",
      "4k2r/ppp1bpp1/2p1b3/4PnB1/7p/1PN2N1P/P1P2PP1/3R2K1 w - - 0 17",
      "4k2r/ppp1bpp1/2p1b3/4Pn2/7p/1PN2N1P/P1P2PP1/2BR2K1 b - - 1 17",
      "4k2r/1pp1bpp1/2p1b3/p3Pn2/7p/1PN2N1P/P1P2PP1/2BR2K1 w - - 0 18",
      "4k2r/1pp1bpp1/2p1b3/p3Pn2/7p/1P3N1P/P1P1NPP1/2BR2K1 b - - 1 18",
      "4k2r/1pp1bpp1/2p5/p2bPn2/7p/1P3N1P/P1P1NPP1/2BR2K1 w - - 2 19",
      "4k2r/1pp1bpp1/2p5/p2bPn2/7p/1P5P/P1P1NPP1/2BRN1K1 b - - 3 19",
      "4k2r/1pp1bpp1/2p1b3/p3Pn2/7p/1P5P/P1P1NPP1/2BRN1K1 w - - 4 20",
      "4k2r/1pp1bpp1/2p1b3/p3Pn2/5N1p/1P5P/P1P2PP1/2BRN1K1 b - - 5 20",
      "2b1k2r/1pp1bpp1/2p5/p3Pn2/5N1p/1P5P/P1P2PP1/2BRN1K1 w - - 6 21",
      "2b1k2r/1pp1bpp1/2p5/p3Pn2/5N1p/1P3N1P/P1P2PP1/2BR2K1 b - - 7 21",
      "2b1k3/1pp1bpp1/2p4r/p3Pn2/5N1p/1P3N1P/P1P2PP1/2BR2K1 w - - 8 22",
      "2b1k3/1pp1bpp1/2p4r/p3Pn2/5N1p/1P5P/P1P2PPN/2BR2K1 b - - 9 22",
      "2b1k2r/1pp1bpp1/2p5/p3Pn2/5N1p/1P5P/P1P2PPN/2BR2K1 w - - 10 23",
      "2b1k2r/1pp1bpp1/2p5/p3Pn2/5NNp/1P5P/P1P2PP1/2BR2K1 b - - 11 23",
      "2b1k2r/1pp1bpp1/2p4n/p3P3/5NNp/1P5P/P1P2PP1/2BR2K1 w - - 12 24",
      "2b1k2r/1pp1bpp1/2p4n/p3P3/5N1p/1P2N2P/P1P2PP1/2BR2K1 b - - 13 24",
      "2b1k2r/1pp1bpp1/2p5/p3Pn2/5N1p/1P2N2P/P1P2PP1/2BR2K1 w - - 14 25",
      "2b1k2r/1pp1bpp1/2p5/p3Pn2/2N2N1p/1P5P/P1P2PP1/2BR2K1 b - - 15 25",
      "2b1k2r/1pp1bp2/2p5/p3Pnp1/2N2N1p/1P5P/P1P2PP1/2BR2K1 w - - 0 26",
      "2b1k2r/1pp1bp2/2p5/p3Pnp1/2N4p/1P5P/P1P1NPP1/2BR2K1 b - - 1 26",
      "2b1k2r/2p1bp2/1pp5/p3Pnp1/2N4p/1P5P/P1P1NPP1/2BR2K1 w - - 0 27",
      "2b1k2r/2p1bp2/1pp5/p3Pnp1/7p/1P5P/P1PNNPP1/2BR2K1 b - - 1 27",
      "2b1k2r/2p1bpn1/1pp5/p3P1p1/7p/1P5P/P1PNNPP1/2BR2K1 w - - 2 28",
      "2b1k2r/2p1bpn1/1pp5/p3P1p1/4N2p/1P5P/P1P1NPP1/2BR2K1 b - - 3 28",
      "2b1k2r/2p1bp2/1pp1n3/p3P1p1/4N2p/1P5P/P1P1NPP1/2BR2K1 w - - 4 29",
      "2b1k2r/2p1bp2/1pp1nN2/p3P1p1/7p/1P5P/P1P1NPP1/2BR2K1 b - - 5 29",
      "2b1k2r/2p2p2/1pp1nb2/p3P1p1/7p/1P5P/P1P1NPP1/2BR2K1 w - - 0 30",
      "2b1k2r/2p2p2/1pp1nP2/p5p1/7p/1P5P/P1P1NPP1/2BR2K1 b - - 0 30",
      "2b1k1r1/2p2p2/1pp1nP2/p5p1/7p/1P5P/P1P1NPP1/2BR2K1 w - - 1 31",
      "2b1k1r1/2p2p2/1pp1nP2/p5p1/7p/1P3P1P/P1P1N1P1/2BR2K1 b - - 0 31",
      "2b1k3/2p2p2/1pp1nPr1/p5p1/7p/1P3P1P/P1P1N1P1/2BR2K1 w - - 1 32",
      "2b1k3/2p2p2/1pp1nPr1/p5p1/7p/1P3P1P/PBP1N1P1/3R2K1 b - - 2 32",
      "4k3/2pb1p2/1pp1nPr1/p5p1/7p/1P3P1P/PBP1N1P1/3R2K1 w - - 3 33",
      "4k3/2pb1p2/1pp1nPr1/p5p1/7p/1P3P1P/PBP3P1/2NR2K1 b - - 4 33",
      "4k3/2pb1p2/1p2nPr1/p1p3p1/7p/1P3P1P/PBP3P1/2NR2K1 w - - 0 34",
      "4k3/2pb1p2/1p2nPr1/p1p1B1p1/7p/1P3P1P/P1P3P1/2NR2K1 b - - 1 34",
      "3k4/2pb1p2/1p2nPr1/p1p1B1p1/7p/1P3P1P/P1P3P1/2NR2K1 w - - 2 35",
      "3k4/2pb1p2/1p2nPr1/p1p1B1p1/7p/1P1N1P1P/P1P3P1/3R2K1 b - - 3 35",
      "2k5/2pb1p2/1p2nPr1/p1p1B1p1/7p/1P1N1P1P/P1P3P1/3R2K1 w - - 4 36",
      "2k5/2pb1p2/1p2nPr1/p1p3p1/7p/1P1N1P1P/PBP3P1/3R2K1 b - - 5 36",
      "2k1b3/2p2p2/1p2nPr1/p1p3p1/7p/1P1N1P1P/PBP3P1/3R2K1 w - - 6 37",
      "2k1b3/2p2p2/1p2nPr1/p1p3p1/7p/1P1N1P1P/PBP3P1/4R1K1 b - - 7 37",
      "2k1b1r1/2p2p2/1p2nP2/p1p3p1/7p/1P1N1P1P/PBP3P1/4R1K1 w - - 8 38",
      "2k1b1r1/2p2p2/1p2nP2/p1p3p1/4R2p/1P1N1P1P/PBP3P1/6K1 b - - 9 38",
      "3kb1r1/2p2p2/1p2nP2/p1p3p1/4R2p/1P1N1P1P/PBP3P1/6K1 w - - 10 39",
      "3kb1r1/2p2p2/1p2nP2/p1p3p1/4R2p/1P1N1P1P/PBP2KP1/8 b - - 11 39",
      "3kbnr1/2p2p2/1p3P2/p1p3p1/4R2p/1P1N1P1P/PBP2KP1/8 w - - 12 40",
      "3kbnr1/2p2p2/1p3P2/p1p1N1p1/4R2p/1P3P1P/PBP2KP1/8 b - - 13 40",
      "3kb1r1/2p2p1n/1p3P2/p1p1N1p1/4R2p/1P3P1P/PBP2KP1/8 w - - 14 41",
      "3kb1r1/2p2p1n/1p3P2/p1p1N1p1/4RP1p/1P5P/PBP2KP1/8 b - - 0 41",
      "3kb2r/2p2p1n/1p3P2/p1p1N1p1/4RP1p/1P5P/PBP2KP1/8 w - - 1 42",
      "3kb2r/2p2p1n/1p3P2/p1p3p1/4RP1p/1P3N1P/PBP2KP1/8 b - - 2 42",
      "3kb2r/2p2p1n/1p3P2/p1p5/4Rp1p/1P3N1P/PBP2KP1/8 w - - 0 43",
      "3kb2r/2p2p1n/1p3P2/p1p5/5R1p/1P3N1P/PBP2KP1/8 b - - 0 43",
      "3kbn1r/2p2p2/1p3P2/p1p5/5R1p/1P3N1P/PBP2KP1/8 w - - 1 44",
      "3kbn1r/2p2p2/1p3P2/p1p5/7R/1P3N1P/PBP2KP1/8 b - - 0 44",
      "3kbn2/2p2p2/1p3P2/p1p5/7r/1P3N1P/PBP2KP1/8 w - - 0 45",
      "3kbn2/2p2p2/1p3P2/p1p5/7N/1P5P/PBP2KP1/8 b - - 0 45",
      "3k1n2/2p2p2/1pb2P2/p1p5/7N/1P5P/PBP2KP1/8 w - - 1 46",
      "3k1n2/2p2p2/1pb2P2/p1p5/7N/1P2K2P/PBP3P1/8 b - - 2 46",
      "5n2/2pk1p2/1pb2P2/p1p5/7N/1P2K2P/PBP3P1/8 w - - 3 47",
      "5n2/2pk1p2/1pb2P2/p1p5/6PN/1P2K2P/PBP5/8 b - - 0 47",
      "8/2pk1p2/1pb2Pn1/p1p5/6PN/1P2K2P/PBP5/8 w - - 1 48",
      "8/2pk1p2/1pb2PN1/p1p5/6P1/1P2K2P/PBP5/8 b - - 0 48",
      "8/2pk4/1pb2Pp1/p1p5/6P1/1P2K2P/PBP5/8 w - - 0 49",
      "8/2pk4/1pb2Pp1/p1p1B3/6P1/1P2K2P/P1P5/8 b - - 1 49",
      "8/2pk4/2b2Pp1/ppp1B3/6P1/1P2K2P/P1P5/8 w - - 0 50",
      "8/2Bk4/2b2Pp1/ppp5/6P1/1P2K2P/P1P5/8 b - - 0 50",
      "8/2Bk4/2b2Pp1/1pp5/p5P1/1P2K2P/P1P5/8 w - - 0 51",
      "8/3k4/1Bb2Pp1/1pp5/p5P1/1P2K2P/P1P5/8 b - - 1 51",
      "8/3k4/1Bb2Pp1/1pp5/6P1/1p2K2P/P1P5/8 w - - 0 52",
      "8/3k4/1Bb2Pp1/1pp5/6P1/1P2K2P/P7/8 b - - 0 52",
      "8/3k4/1Bb2P2/1pp3p1/6P1/1P2K2P/P7/8 w - - 0 53",
      "8/3k4/2b2P2/1pB3p1/6P1/1P2K2P/P7/8 b - - 0 53",
      "8/8/2b1kP2/1pB3p1/6P1/1P2K2P/P7/8 w - - 1 54",
      "8/8/2b1kP2/1p4p1/3B2P1/1P2K2P/P7/8 b - - 2 54",
      "8/8/4kP2/1p4p1/3B2P1/1P2K2P/P5b1/8 w - - 3 55",
      "8/8/4kP2/1p4p1/3B2PP/1P2K3/P5b1/8 b - - 0 55",
      "8/8/4kP2/1p6/3B2Pp/1P2K3/P5b1/8 w - - 0 56",
      "8/8/4kP2/1p6/3B1KPp/1P6/P5b1/8 b - - 1 56",
      "8/5k2/5P2/1p6/3B1KPp/1P6/P5b1/8 w - - 2 57",
      "8/5k2/5P2/1p4P1/3B1K1p/1P6/P5b1/8 b - - 0 57",
      "8/5k2/5P2/1p4P1/3B1K2/1P5p/P5b1/8 w - - 0 58",
      "8/5k2/5P2/1p4P1/3B4/1P4Kp/P5b1/8 b - - 1 58",
      "8/8/5Pk1/1p4P1/3B4/1P4Kp/P5b1/8 w - - 2 59",
      "8/8/5Pk1/1p4P1/8/1P2B1Kp/P5b1/8 b - - 3 59",
      "8/5k2/5P2/1p4P1/8/1P2B1Kp/P5b1/8 w - - 4 60",
      "8/5k2/5P2/1p4P1/8/1P4Kp/P2B2b1/8 b - - 5 60",
      "8/8/5Pk1/1p4P1/8/1P4Kp/P2B2b1/8 w - - 6 61",
      "8/8/5Pk1/1p4P1/P7/1P4Kp/3B2b1/8 b - - 0 61",
      "8/8/5Pk1/6P1/p7/1P4Kp/3B2b1/8 w - - 0 62",
      "8/8/5Pk1/6P1/P7/6Kp/3B2b1/8 b - - 0 62",
      "8/5k2/5P2/6P1/P7/6Kp/3B2b1/8 w - - 1 63",
      "8/5k2/5P2/P5P1/8/6Kp/3B2b1/8 b - - 0 63",
      "8/5k2/5P2/P5P1/8/6Kp/3B4/5b2 w - - 1 64",
      "8/5k2/5P2/P5P1/5B2/6Kp/8/5b2 b - - 2 64",
      "8/8/5Pk1/P5P1/5B2/6Kp/8/5b2 w - - 3 65",
      "8/8/5Pk1/P5P1/5BK1/7p/8/5b2 b - - 4 65",
      "8/5k2/5P2/P5P1/5BK1/7p/8/5b2 w - - 5 66",
      "8/5k2/5P2/P4KP1/5B2/7p/8/5b2 b - - 6 66",
      "8/5k2/5P2/P4KP1/5B2/3b3p/8/8 w - - 7 67",
      "8/5k2/5P2/P3K1P1/5B2/3b3p/8/8 b - - 8 67",
      "8/5k2/5P2/P3K1P1/5B2/7p/4b3/8 w - - 9 68",
      "8/5k2/3K1P2/P5P1/5B2/7p/4b3/8 b - - 10 68",
      "8/5k2/3K1P2/P5P1/5B2/3b3p/8/8 w - - 11 69",
      "8/5k2/5P2/P1K3P1/5B2/3b3p/8/8 b - - 12 69",
    ]
    for (index, history) in chess.getMoveHistory().enumerated() {
      XCTAssertEqual(history.fen, fens4[index], "Sinquefield(g5): FEN move (index)")
    }

    pgn = pgns.removeFirst()
    chess = try pgn.validate()
    XCTAssertEqual(chess.getTag("Event")?.value, "Sinquefield Cup", "Sinquefield(g6): event")
    XCTAssertEqual(chess.getTag("White")?.value, "Caruana, Fabiano", "Sinquefield(g6): white")
    XCTAssertEqual(chess.getTag("Black")?.value, "Aronian, Levon", "Sinquefield(g6): black")
    XCTAssertEqual(chess.getMoveCount(), 39, "Sinquefield(g6): move count")
    XCTAssertEqual(
      chess.getMoveHistory().map { $0.pcn }.joined(separator: ","),
      "d2d4,d7d5,c2c4,c7c6,g1f3,g8f6,d1b3,e7e6,g2g3,d5c4,b3c4,b7b5,c4b3,c8b7,f1g2,a7a6,a2a4,c6c5,a4b5,c5c4,b3d1,a6b5,a1a8,b7a8,e1g1,f8e7,b2b3,c4b3,d1b3,b5b4,c1b2,b8d7,b1d2,e8g8,f1a1,d8b8,f3e1,a8g2,g1g2,f8c8,e2e4,h7h5,e1d3,h5h4,a1c1,c8c1,d3c1,b8b5,b3d3,b5d3,c1d3,h4g3,h2g3,d7b6,g2f3,f6d7,d2b3,b6c4,b2c1,e6e5,d4e5,c4e5,d3e5,d7e5,f3e2,g8f8,f2f4,e5g4,e2f3,g4h2,f3g2,h2g4,g2f3,g4h2,f3g2,h2g4",
      "Sinquefield(g6): PCN move history"
    )
    let fens5 = [
      "rnbqkbnr/pppppppp/8/8/3P4/8/PPP1PPPP/RNBQKBNR b KQkq - 0 1",
      "rnbqkbnr/ppp1pppp/8/3p4/3P4/8/PPP1PPPP/RNBQKBNR w KQkq - 0 2",
      "rnbqkbnr/ppp1pppp/8/3p4/2PP4/8/PP2PPPP/RNBQKBNR b KQkq - 0 2",
      "rnbqkbnr/pp2pppp/2p5/3p4/2PP4/8/PP2PPPP/RNBQKBNR w KQkq - 0 3",
      "rnbqkbnr/pp2pppp/2p5/3p4/2PP4/5N2/PP2PPPP/RNBQKB1R b KQkq - 1 3",
      "rnbqkb1r/pp2pppp/2p2n2/3p4/2PP4/5N2/PP2PPPP/RNBQKB1R w KQkq - 2 4",
      "rnbqkb1r/pp2pppp/2p2n2/3p4/2PP4/1Q3N2/PP2PPPP/RNB1KB1R b KQkq - 3 4",
      "rnbqkb1r/pp3ppp/2p1pn2/3p4/2PP4/1Q3N2/PP2PPPP/RNB1KB1R w KQkq - 0 5",
      "rnbqkb1r/pp3ppp/2p1pn2/3p4/2PP4/1Q3NP1/PP2PP1P/RNB1KB1R b KQkq - 0 5",
      "rnbqkb1r/pp3ppp/2p1pn2/8/2pP4/1Q3NP1/PP2PP1P/RNB1KB1R w KQkq - 0 6",
      "rnbqkb1r/pp3ppp/2p1pn2/8/2QP4/5NP1/PP2PP1P/RNB1KB1R b KQkq - 0 6",
      "rnbqkb1r/p4ppp/2p1pn2/1p6/2QP4/5NP1/PP2PP1P/RNB1KB1R w KQkq - 0 7",
      "rnbqkb1r/p4ppp/2p1pn2/1p6/3P4/1Q3NP1/PP2PP1P/RNB1KB1R b KQkq - 1 7",
      "rn1qkb1r/pb3ppp/2p1pn2/1p6/3P4/1Q3NP1/PP2PP1P/RNB1KB1R w KQkq - 2 8",
      "rn1qkb1r/pb3ppp/2p1pn2/1p6/3P4/1Q3NP1/PP2PPBP/RNB1K2R b KQkq - 3 8",
      "rn1qkb1r/1b3ppp/p1p1pn2/1p6/3P4/1Q3NP1/PP2PPBP/RNB1K2R w KQkq - 0 9",
      "rn1qkb1r/1b3ppp/p1p1pn2/1p6/P2P4/1Q3NP1/1P2PPBP/RNB1K2R b KQkq - 0 9",
      "rn1qkb1r/1b3ppp/p3pn2/1pp5/P2P4/1Q3NP1/1P2PPBP/RNB1K2R w KQkq - 0 10",
      "rn1qkb1r/1b3ppp/p3pn2/1Pp5/3P4/1Q3NP1/1P2PPBP/RNB1K2R b KQkq - 0 10",
      "rn1qkb1r/1b3ppp/p3pn2/1P6/2pP4/1Q3NP1/1P2PPBP/RNB1K2R w KQkq - 0 11",
      "rn1qkb1r/1b3ppp/p3pn2/1P6/2pP4/5NP1/1P2PPBP/RNBQK2R b KQkq - 1 11",
      "rn1qkb1r/1b3ppp/4pn2/1p6/2pP4/5NP1/1P2PPBP/RNBQK2R w KQkq - 0 12",
      "Rn1qkb1r/1b3ppp/4pn2/1p6/2pP4/5NP1/1P2PPBP/1NBQK2R b Kk - 0 12",
      "bn1qkb1r/5ppp/4pn2/1p6/2pP4/5NP1/1P2PPBP/1NBQK2R w Kk - 0 13",
      "bn1qkb1r/5ppp/4pn2/1p6/2pP4/5NP1/1P2PPBP/1NBQ1RK1 b k - 1 13",
      "bn1qk2r/4bppp/4pn2/1p6/2pP4/5NP1/1P2PPBP/1NBQ1RK1 w k - 2 14",
      "bn1qk2r/4bppp/4pn2/1p6/2pP4/1P3NP1/4PPBP/1NBQ1RK1 b k - 0 14",
      "bn1qk2r/4bppp/4pn2/1p6/3P4/1p3NP1/4PPBP/1NBQ1RK1 w k - 0 15",
      "bn1qk2r/4bppp/4pn2/1p6/3P4/1Q3NP1/4PPBP/1NB2RK1 b k - 0 15",
      "bn1qk2r/4bppp/4pn2/8/1p1P4/1Q3NP1/4PPBP/1NB2RK1 w k - 0 16",
      "bn1qk2r/4bppp/4pn2/8/1p1P4/1Q3NP1/1B2PPBP/1N3RK1 b k - 1 16",
      "b2qk2r/3nbppp/4pn2/8/1p1P4/1Q3NP1/1B2PPBP/1N3RK1 w k - 2 17",
      "b2qk2r/3nbppp/4pn2/8/1p1P4/1Q3NP1/1B1NPPBP/5RK1 b k - 3 17",
      "b2q1rk1/3nbppp/4pn2/8/1p1P4/1Q3NP1/1B1NPPBP/5RK1 w - - 4 18",
      "b2q1rk1/3nbppp/4pn2/8/1p1P4/1Q3NP1/1B1NPPBP/R5K1 b - - 5 18",
      "bq3rk1/3nbppp/4pn2/8/1p1P4/1Q3NP1/1B1NPPBP/R5K1 w - - 6 19",
      "bq3rk1/3nbppp/4pn2/8/1p1P4/1Q4P1/1B1NPPBP/R3N1K1 b - - 7 19",
      "1q3rk1/3nbppp/4pn2/8/1p1P4/1Q4P1/1B1NPPbP/R3N1K1 w - - 0 20",
      "1q3rk1/3nbppp/4pn2/8/1p1P4/1Q4P1/1B1NPPKP/R3N3 b - - 0 20",
      "1qr3k1/3nbppp/4pn2/8/1p1P4/1Q4P1/1B1NPPKP/R3N3 w - - 1 21",
      "1qr3k1/3nbppp/4pn2/8/1p1PP3/1Q4P1/1B1N1PKP/R3N3 b - - 0 21",
      "1qr3k1/3nbpp1/4pn2/7p/1p1PP3/1Q4P1/1B1N1PKP/R3N3 w - - 0 22",
      "1qr3k1/3nbpp1/4pn2/7p/1p1PP3/1Q1N2P1/1B1N1PKP/R7 b - - 1 22",
      "1qr3k1/3nbpp1/4pn2/8/1p1PP2p/1Q1N2P1/1B1N1PKP/R7 w - - 0 23",
      "1qr3k1/3nbpp1/4pn2/8/1p1PP2p/1Q1N2P1/1B1N1PKP/2R5 b - - 1 23",
      "1q4k1/3nbpp1/4pn2/8/1p1PP2p/1Q1N2P1/1B1N1PKP/2r5 w - - 0 24",
      "1q4k1/3nbpp1/4pn2/8/1p1PP2p/1Q4P1/1B1N1PKP/2N5 b - - 0 24",
      "6k1/3nbpp1/4pn2/1q6/1p1PP2p/1Q4P1/1B1N1PKP/2N5 w - - 1 25",
      "6k1/3nbpp1/4pn2/1q6/1p1PP2p/3Q2P1/1B1N1PKP/2N5 b - - 2 25",
      "6k1/3nbpp1/4pn2/8/1p1PP2p/3q2P1/1B1N1PKP/2N5 w - - 0 26",
      "6k1/3nbpp1/4pn2/8/1p1PP2p/3N2P1/1B1N1PKP/8 b - - 0 26",
      "6k1/3nbpp1/4pn2/8/1p1PP3/3N2p1/1B1N1PKP/8 w - - 0 27",
      "6k1/3nbpp1/4pn2/8/1p1PP3/3N2P1/1B1N1PK1/8 b - - 0 27",
      "6k1/4bpp1/1n2pn2/8/1p1PP3/3N2P1/1B1N1PK1/8 w - - 1 28",
      "6k1/4bpp1/1n2pn2/8/1p1PP3/3N1KP1/1B1N1P2/8 b - - 2 28",
      "6k1/3nbpp1/1n2p3/8/1p1PP3/3N1KP1/1B1N1P2/8 w - - 3 29",
      "6k1/3nbpp1/1n2p3/8/1p1PP3/1N1N1KP1/1B3P2/8 b - - 4 29",
      "6k1/3nbpp1/4p3/8/1pnPP3/1N1N1KP1/1B3P2/8 w - - 5 30",
      "6k1/3nbpp1/4p3/8/1pnPP3/1N1N1KP1/5P2/2B5 b - - 6 30",
      "6k1/3nbpp1/8/4p3/1pnPP3/1N1N1KP1/5P2/2B5 w - - 0 31",
      "6k1/3nbpp1/8/4P3/1pn1P3/1N1N1KP1/5P2/2B5 b - - 0 31",
      "6k1/3nbpp1/8/4n3/1p2P3/1N1N1KP1/5P2/2B5 w - - 0 32",
      "6k1/3nbpp1/8/4N3/1p2P3/1N3KP1/5P2/2B5 b - - 0 32",
      "6k1/4bpp1/8/4n3/1p2P3/1N3KP1/5P2/2B5 w - - 0 33",
      "6k1/4bpp1/8/4n3/1p2P3/1N4P1/4KP2/2B5 b - - 1 33",
      "5k2/4bpp1/8/4n3/1p2P3/1N4P1/4KP2/2B5 w - - 2 34",
      "5k2/4bpp1/8/4n3/1p2PP2/1N4P1/4K3/2B5 b - - 0 34",
      "5k2/4bpp1/8/8/1p2PPn1/1N4P1/4K3/2B5 w - - 1 35",
      "5k2/4bpp1/8/8/1p2PPn1/1N3KP1/8/2B5 b - - 2 35",
      "5k2/4bpp1/8/8/1p2PP2/1N3KP1/7n/2B5 w - - 3 36",
      "5k2/4bpp1/8/8/1p2PP2/1N4P1/6Kn/2B5 b - - 4 36",
      "5k2/4bpp1/8/8/1p2PPn1/1N4P1/6K1/2B5 w - - 5 37",
      "5k2/4bpp1/8/8/1p2PPn1/1N3KP1/8/2B5 b - - 6 37",
      "5k2/4bpp1/8/8/1p2PP2/1N3KP1/7n/2B5 w - - 7 38",
      "5k2/4bpp1/8/8/1p2PP2/1N4P1/6Kn/2B5 b - - 8 38",
      "5k2/4bpp1/8/8/1p2PPn1/1N4P1/6K1/2B5 w - - 9 39",
    ]
    for (index, history) in chess.getMoveHistory().enumerated() {
      XCTAssertEqual(history.fen, fens5[index], "Sinquefield(g6): FEN move (index)")
    }

    pgn = pgns.removeFirst()
    chess = try pgn.validate()
    XCTAssertEqual(chess.getTag("Event")?.value, "Sinquefield Cup", "Sinquefield(g7): event")
    XCTAssertEqual(chess.getTag("White")?.value, "Grischuk, Alexander", "Sinquefield(g7): white")
    XCTAssertEqual(chess.getTag("Black")?.value, "Mamedyarov, Shakhriyar", "Sinquefield(g7): black")
    XCTAssertEqual(chess.getMoveCount(), 25, "Sinquefield(g7): move count")
    XCTAssertEqual(
      chess.getMoveHistory().map { $0.pcn }.joined(separator: ","),
      "e2e4,e7e6,d2d4,d7d5,b1c3,f8b4,e4e5,c7c5,a2a3,b4a5,b2b4,c5d4,d1g4,e8f8,c3b5,a5b6,g1f3,b8c6,c1b2,g8e7,f1d3,e7g6,g4g3,f7f6,d3g6,h7g6,b5d4,c6e5,f3e5,f6e5,d4f3,e5e4,f3e5,f8g8,g3g6,d8e7,e5g4,c8d7,g4f6,g8f8,f6h7,f8g8,h7f6,g8f8,f6h7,f8g8,h7f6,g8f8",
      "Sinquefield(g7): PCN move history"
    )
    let fens6 = [
      "rnbqkbnr/pppppppp/8/8/4P3/8/PPPP1PPP/RNBQKBNR b KQkq - 0 1",
      "rnbqkbnr/pppp1ppp/4p3/8/4P3/8/PPPP1PPP/RNBQKBNR w KQkq - 0 2",
      "rnbqkbnr/pppp1ppp/4p3/8/3PP3/8/PPP2PPP/RNBQKBNR b KQkq - 0 2",
      "rnbqkbnr/ppp2ppp/4p3/3p4/3PP3/8/PPP2PPP/RNBQKBNR w KQkq - 0 3",
      "rnbqkbnr/ppp2ppp/4p3/3p4/3PP3/2N5/PPP2PPP/R1BQKBNR b KQkq - 1 3",
      "rnbqk1nr/ppp2ppp/4p3/3p4/1b1PP3/2N5/PPP2PPP/R1BQKBNR w KQkq - 2 4",
      "rnbqk1nr/ppp2ppp/4p3/3pP3/1b1P4/2N5/PPP2PPP/R1BQKBNR b KQkq - 0 4",
      "rnbqk1nr/pp3ppp/4p3/2ppP3/1b1P4/2N5/PPP2PPP/R1BQKBNR w KQkq - 0 5",
      "rnbqk1nr/pp3ppp/4p3/2ppP3/1b1P4/P1N5/1PP2PPP/R1BQKBNR b KQkq - 0 5",
      "rnbqk1nr/pp3ppp/4p3/b1ppP3/3P4/P1N5/1PP2PPP/R1BQKBNR w KQkq - 1 6",
      "rnbqk1nr/pp3ppp/4p3/b1ppP3/1P1P4/P1N5/2P2PPP/R1BQKBNR b KQkq - 0 6",
      "rnbqk1nr/pp3ppp/4p3/b2pP3/1P1p4/P1N5/2P2PPP/R1BQKBNR w KQkq - 0 7",
      "rnbqk1nr/pp3ppp/4p3/b2pP3/1P1p2Q1/P1N5/2P2PPP/R1B1KBNR b KQkq - 1 7",
      "rnbq1knr/pp3ppp/4p3/b2pP3/1P1p2Q1/P1N5/2P2PPP/R1B1KBNR w KQ - 2 8",
      "rnbq1knr/pp3ppp/4p3/bN1pP3/1P1p2Q1/P7/2P2PPP/R1B1KBNR b KQ - 3 8",
      "rnbq1knr/pp3ppp/1b2p3/1N1pP3/1P1p2Q1/P7/2P2PPP/R1B1KBNR w KQ - 4 9",
      "rnbq1knr/pp3ppp/1b2p3/1N1pP3/1P1p2Q1/P4N2/2P2PPP/R1B1KB1R b KQ - 5 9",
      "r1bq1knr/pp3ppp/1bn1p3/1N1pP3/1P1p2Q1/P4N2/2P2PPP/R1B1KB1R w KQ - 6 10",
      "r1bq1knr/pp3ppp/1bn1p3/1N1pP3/1P1p2Q1/P4N2/1BP2PPP/R3KB1R b KQ - 7 10",
      "r1bq1k1r/pp2nppp/1bn1p3/1N1pP3/1P1p2Q1/P4N2/1BP2PPP/R3KB1R w KQ - 8 11",
      "r1bq1k1r/pp2nppp/1bn1p3/1N1pP3/1P1p2Q1/P2B1N2/1BP2PPP/R3K2R b KQ - 9 11",
      "r1bq1k1r/pp3ppp/1bn1p1n1/1N1pP3/1P1p2Q1/P2B1N2/1BP2PPP/R3K2R w KQ - 10 12",
      "r1bq1k1r/pp3ppp/1bn1p1n1/1N1pP3/1P1p4/P2B1NQ1/1BP2PPP/R3K2R b KQ - 11 12",
      "r1bq1k1r/pp4pp/1bn1ppn1/1N1pP3/1P1p4/P2B1NQ1/1BP2PPP/R3K2R w KQ - 0 13",
      "r1bq1k1r/pp4pp/1bn1ppB1/1N1pP3/1P1p4/P4NQ1/1BP2PPP/R3K2R b KQ - 0 13",
      "r1bq1k1r/pp4p1/1bn1ppp1/1N1pP3/1P1p4/P4NQ1/1BP2PPP/R3K2R w KQ - 0 14",
      "r1bq1k1r/pp4p1/1bn1ppp1/3pP3/1P1N4/P4NQ1/1BP2PPP/R3K2R b KQ - 0 14",
      "r1bq1k1r/pp4p1/1b2ppp1/3pn3/1P1N4/P4NQ1/1BP2PPP/R3K2R w KQ - 0 15",
      "r1bq1k1r/pp4p1/1b2ppp1/3pN3/1P1N4/P5Q1/1BP2PPP/R3K2R b KQ - 0 15",
      "r1bq1k1r/pp4p1/1b2p1p1/3pp3/1P1N4/P5Q1/1BP2PPP/R3K2R w KQ - 0 16",
      "r1bq1k1r/pp4p1/1b2p1p1/3pp3/1P6/P4NQ1/1BP2PPP/R3K2R b KQ - 1 16",
      "r1bq1k1r/pp4p1/1b2p1p1/3p4/1P2p3/P4NQ1/1BP2PPP/R3K2R w KQ - 0 17",
      "r1bq1k1r/pp4p1/1b2p1p1/3pN3/1P2p3/P5Q1/1BP2PPP/R3K2R b KQ - 1 17",
      "r1bq2kr/pp4p1/1b2p1p1/3pN3/1P2p3/P5Q1/1BP2PPP/R3K2R w KQ - 2 18",
      "r1bq2kr/pp4p1/1b2p1Q1/3pN3/1P2p3/P7/1BP2PPP/R3K2R b KQ - 0 18",
      "r1b3kr/pp2q1p1/1b2p1Q1/3pN3/1P2p3/P7/1BP2PPP/R3K2R w KQ - 1 19",
      "r1b3kr/pp2q1p1/1b2p1Q1/3p4/1P2p1N1/P7/1BP2PPP/R3K2R b KQ - 2 19",
      "r5kr/pp1bq1p1/1b2p1Q1/3p4/1P2p1N1/P7/1BP2PPP/R3K2R w KQ - 3 20",
      "r5kr/pp1bq1p1/1b2pNQ1/3p4/1P2p3/P7/1BP2PPP/R3K2R b KQ - 4 20",
      "r4k1r/pp1bq1p1/1b2pNQ1/3p4/1P2p3/P7/1BP2PPP/R3K2R w KQ - 5 21",
      "r4k1r/pp1bq1pN/1b2p1Q1/3p4/1P2p3/P7/1BP2PPP/R3K2R b KQ - 6 21",
      "r5kr/pp1bq1pN/1b2p1Q1/3p4/1P2p3/P7/1BP2PPP/R3K2R w KQ - 7 22",
      "r5kr/pp1bq1p1/1b2pNQ1/3p4/1P2p3/P7/1BP2PPP/R3K2R b KQ - 8 22",
      "r4k1r/pp1bq1p1/1b2pNQ1/3p4/1P2p3/P7/1BP2PPP/R3K2R w KQ - 9 23",
      "r4k1r/pp1bq1pN/1b2p1Q1/3p4/1P2p3/P7/1BP2PPP/R3K2R b KQ - 10 23",
      "r5kr/pp1bq1pN/1b2p1Q1/3p4/1P2p3/P7/1BP2PPP/R3K2R w KQ - 11 24",
      "r5kr/pp1bq1p1/1b2pNQ1/3p4/1P2p3/P7/1BP2PPP/R3K2R b KQ - 12 24",
      "r4k1r/pp1bq1p1/1b2pNQ1/3p4/1P2p3/P7/1BP2PPP/R3K2R w KQ - 13 25",
    ]
    for (index, history) in chess.getMoveHistory().enumerated() {
      XCTAssertEqual(history.fen, fens6[index], "Sinquefield(g7): FEN move (index)")
    }

    pgn = pgns.removeFirst()
    chess = try pgn.validate()
    XCTAssertEqual(chess.getTag("Event")?.value, "Sinquefield Cup", "Sinquefield(g8): event")
    XCTAssertEqual(chess.getTag("White")?.value, "Carlsen, Magnus", "Sinquefield(g8): white")
    XCTAssertEqual(chess.getTag("Black")?.value, "Karjakin, Sergey", "Sinquefield(g8): black")
    XCTAssertEqual(chess.getMoveCount(), 88, "Sinquefield(g8): move count")
    XCTAssertEqual(
      chess.getMoveHistory().map { $0.pcn }.joined(separator: ","),
      "c2c4,e7e6,b1c3,f8b4,g2g3,g8f6,f1g2,e8g8,g1f3,d7d5,a2a3,b4e7,d2d4,d5c4,f3e5,b8c6,g2c6,b7c6,e5c6,d8e8,c6e7,e8e7,d1a4,c7c5,d4c5,e7c5,c1e3,c5c7,a1d1,f6d5,e3d4,f8d8,c3d5,e6d5,a4c2,c7e7,e1g1,c8h3,f1e1,d8d7,d4c3,a8e8,d1d4,e7g5,c2d2,g5d2,d4d2,h3e6,e1d1,d7e7,f2f3,h7h5,g1f2,f7f6,d2d4,g8h7,d1d2,e6f7,h2h3,a7a6,d4f4,h7g8,c3d4,g8h7,d4c3,h7g8,g3g4,h5g4,h3g4,g8h7,f4f5,e7b7,f5d5,f7d5,d2d5,h7g6,d5c5,e8h8,f2g3,b7b6,c5c4,h8h1,c4c7,h1c1,c7d7,b6c6,a3a4,c1g1,g3f2,g1a1,a4a5,a1a4,f2g3,a4c4,d7a7,c6e6,e2e4,c4c8,a7d7,e6c6,f3f4,c8c7,f4f5,g6h7,d7d8,c7c8,d8d3,c8e8,d3d4,c6c7,g3f4,c7e7,d4c4,h7h6,f4f3,e7d7,c3d4,h6h7,b2b4,d7d6,f3e3,h7h6,c4c1,h6h7,d4b6,d6d7,b6c5,e8d8,c1h1,h7g8,e3f4,d8e8,h1e1,g7g5,f5g6,g8g7,g4g5,g7g6,g5f6,g6f6,e1h1,d7f7,f4e3,f6e6,h1h4,f7f6,h4h7,f6f7,h7h5,e6d7,e4e5,f7f1,e3e4,d7c6,h5h6,c6b5,h6b6,b5c4,e5e6,f1e1,e4f5,e1f1,f5e5,f1e1,e5f6,e1f1,f6g7,e8a8,e6e7,f1e1,g7f7,e1e4,b6d6,a8h8,d6a6",
      "Sinquefield(g8): PCN move history"
    )
    let fens7 = [
      "rnbqkbnr/pppppppp/8/8/2P5/8/PP1PPPPP/RNBQKBNR b KQkq - 0 1",
      "rnbqkbnr/pppp1ppp/4p3/8/2P5/8/PP1PPPPP/RNBQKBNR w KQkq - 0 2",
      "rnbqkbnr/pppp1ppp/4p3/8/2P5/2N5/PP1PPPPP/R1BQKBNR b KQkq - 1 2",
      "rnbqk1nr/pppp1ppp/4p3/8/1bP5/2N5/PP1PPPPP/R1BQKBNR w KQkq - 2 3",
      "rnbqk1nr/pppp1ppp/4p3/8/1bP5/2N3P1/PP1PPP1P/R1BQKBNR b KQkq - 0 3",
      "rnbqk2r/pppp1ppp/4pn2/8/1bP5/2N3P1/PP1PPP1P/R1BQKBNR w KQkq - 1 4",
      "rnbqk2r/pppp1ppp/4pn2/8/1bP5/2N3P1/PP1PPPBP/R1BQK1NR b KQkq - 2 4",
      "rnbq1rk1/pppp1ppp/4pn2/8/1bP5/2N3P1/PP1PPPBP/R1BQK1NR w KQ - 3 5",
      "rnbq1rk1/pppp1ppp/4pn2/8/1bP5/2N2NP1/PP1PPPBP/R1BQK2R b KQ - 4 5",
      "rnbq1rk1/ppp2ppp/4pn2/3p4/1bP5/2N2NP1/PP1PPPBP/R1BQK2R w KQ - 0 6",
      "rnbq1rk1/ppp2ppp/4pn2/3p4/1bP5/P1N2NP1/1P1PPPBP/R1BQK2R b KQ - 0 6",
      "rnbq1rk1/ppp1bppp/4pn2/3p4/2P5/P1N2NP1/1P1PPPBP/R1BQK2R w KQ - 1 7",
      "rnbq1rk1/ppp1bppp/4pn2/3p4/2PP4/P1N2NP1/1P2PPBP/R1BQK2R b KQ - 0 7",
      "rnbq1rk1/ppp1bppp/4pn2/8/2pP4/P1N2NP1/1P2PPBP/R1BQK2R w KQ - 0 8",
      "rnbq1rk1/ppp1bppp/4pn2/4N3/2pP4/P1N3P1/1P2PPBP/R1BQK2R b KQ - 1 8",
      "r1bq1rk1/ppp1bppp/2n1pn2/4N3/2pP4/P1N3P1/1P2PPBP/R1BQK2R w KQ - 2 9",
      "r1bq1rk1/ppp1bppp/2B1pn2/4N3/2pP4/P1N3P1/1P2PP1P/R1BQK2R b KQ - 0 9",
      "r1bq1rk1/p1p1bppp/2p1pn2/4N3/2pP4/P1N3P1/1P2PP1P/R1BQK2R w KQ - 0 10",
      "r1bq1rk1/p1p1bppp/2N1pn2/8/2pP4/P1N3P1/1P2PP1P/R1BQK2R b KQ - 0 10",
      "r1b1qrk1/p1p1bppp/2N1pn2/8/2pP4/P1N3P1/1P2PP1P/R1BQK2R w KQ - 1 11",
      "r1b1qrk1/p1p1Nppp/4pn2/8/2pP4/P1N3P1/1P2PP1P/R1BQK2R b KQ - 0 11",
      "r1b2rk1/p1p1qppp/4pn2/8/2pP4/P1N3P1/1P2PP1P/R1BQK2R w KQ - 0 12",
      "r1b2rk1/p1p1qppp/4pn2/8/Q1pP4/P1N3P1/1P2PP1P/R1B1K2R b KQ - 1 12",
      "r1b2rk1/p3qppp/4pn2/2p5/Q1pP4/P1N3P1/1P2PP1P/R1B1K2R w KQ - 0 13",
      "r1b2rk1/p3qppp/4pn2/2P5/Q1p5/P1N3P1/1P2PP1P/R1B1K2R b KQ - 0 13",
      "r1b2rk1/p4ppp/4pn2/2q5/Q1p5/P1N3P1/1P2PP1P/R1B1K2R w KQ - 0 14",
      "r1b2rk1/p4ppp/4pn2/2q5/Q1p5/P1N1B1P1/1P2PP1P/R3K2R b KQ - 1 14",
      "r1b2rk1/p1q2ppp/4pn2/8/Q1p5/P1N1B1P1/1P2PP1P/R3K2R w KQ - 2 15",
      "r1b2rk1/p1q2ppp/4pn2/8/Q1p5/P1N1B1P1/1P2PP1P/3RK2R b K - 3 15",
      "r1b2rk1/p1q2ppp/4p3/3n4/Q1p5/P1N1B1P1/1P2PP1P/3RK2R w K - 4 16",
      "r1b2rk1/p1q2ppp/4p3/3n4/Q1pB4/P1N3P1/1P2PP1P/3RK2R b K - 5 16",
      "r1br2k1/p1q2ppp/4p3/3n4/Q1pB4/P1N3P1/1P2PP1P/3RK2R w K - 6 17",
      "r1br2k1/p1q2ppp/4p3/3N4/Q1pB4/P5P1/1P2PP1P/3RK2R b K - 0 17",
      "r1br2k1/p1q2ppp/8/3p4/Q1pB4/P5P1/1P2PP1P/3RK2R w K - 0 18",
      "r1br2k1/p1q2ppp/8/3p4/2pB4/P5P1/1PQ1PP1P/3RK2R b K - 1 18",
      "r1br2k1/p3qppp/8/3p4/2pB4/P5P1/1PQ1PP1P/3RK2R w K - 2 19",
      "r1br2k1/p3qppp/8/3p4/2pB4/P5P1/1PQ1PP1P/3R1RK1 b - - 3 19",
      "r2r2k1/p3qppp/8/3p4/2pB4/P5Pb/1PQ1PP1P/3R1RK1 w - - 4 20",
      "r2r2k1/p3qppp/8/3p4/2pB4/P5Pb/1PQ1PP1P/3RR1K1 b - - 5 20",
      "r5k1/p2rqppp/8/3p4/2pB4/P5Pb/1PQ1PP1P/3RR1K1 w - - 6 21",
      "r5k1/p2rqppp/8/3p4/2p5/P1B3Pb/1PQ1PP1P/3RR1K1 b - - 7 21",
      "4r1k1/p2rqppp/8/3p4/2p5/P1B3Pb/1PQ1PP1P/3RR1K1 w - - 8 22",
      "4r1k1/p2rqppp/8/3p4/2pR4/P1B3Pb/1PQ1PP1P/4R1K1 b - - 9 22",
      "4r1k1/p2r1ppp/8/3p2q1/2pR4/P1B3Pb/1PQ1PP1P/4R1K1 w - - 10 23",
      "4r1k1/p2r1ppp/8/3p2q1/2pR4/P1B3Pb/1P1QPP1P/4R1K1 b - - 11 23",
      "4r1k1/p2r1ppp/8/3p4/2pR4/P1B3Pb/1P1qPP1P/4R1K1 w - - 0 24",
      "4r1k1/p2r1ppp/8/3p4/2p5/P1B3Pb/1P1RPP1P/4R1K1 b - - 0 24",
      "4r1k1/p2r1ppp/4b3/3p4/2p5/P1B3P1/1P1RPP1P/4R1K1 w - - 1 25",
      "4r1k1/p2r1ppp/4b3/3p4/2p5/P1B3P1/1P1RPP1P/3R2K1 b - - 2 25",
      "4r1k1/p3rppp/4b3/3p4/2p5/P1B3P1/1P1RPP1P/3R2K1 w - - 3 26",
      "4r1k1/p3rppp/4b3/3p4/2p5/P1B2PP1/1P1RP2P/3R2K1 b - - 0 26",
      "4r1k1/p3rpp1/4b3/3p3p/2p5/P1B2PP1/1P1RP2P/3R2K1 w - - 0 27",
      "4r1k1/p3rpp1/4b3/3p3p/2p5/P1B2PP1/1P1RPK1P/3R4 b - - 1 27",
      "4r1k1/p3r1p1/4bp2/3p3p/2p5/P1B2PP1/1P1RPK1P/3R4 w - - 0 28",
      "4r1k1/p3r1p1/4bp2/3p3p/2pR4/P1B2PP1/1P2PK1P/3R4 b - - 1 28",
      "4r3/p3r1pk/4bp2/3p3p/2pR4/P1B2PP1/1P2PK1P/3R4 w - - 2 29",
      "4r3/p3r1pk/4bp2/3p3p/2pR4/P1B2PP1/1P1RPK1P/8 b - - 3 29",
      "4r3/p3rbpk/5p2/3p3p/2pR4/P1B2PP1/1P1RPK1P/8 w - - 4 30",
      "4r3/p3rbpk/5p2/3p3p/2pR4/P1B2PPP/1P1RPK2/8 b - - 0 30",
      "4r3/4rbpk/p4p2/3p3p/2pR4/P1B2PPP/1P1RPK2/8 w - - 0 31",
      "4r3/4rbpk/p4p2/3p3p/2p2R2/P1B2PPP/1P1RPK2/8 b - - 1 31",
      "4r1k1/4rbp1/p4p2/3p3p/2p2R2/P1B2PPP/1P1RPK2/8 w - - 2 32",
      "4r1k1/4rbp1/p4p2/3p3p/2pB1R2/P4PPP/1P1RPK2/8 b - - 3 32",
      "4r3/4rbpk/p4p2/3p3p/2pB1R2/P4PPP/1P1RPK2/8 w - - 4 33",
      "4r3/4rbpk/p4p2/3p3p/2p2R2/P1B2PPP/1P1RPK2/8 b - - 5 33",
      "4r1k1/4rbp1/p4p2/3p3p/2p2R2/P1B2PPP/1P1RPK2/8 w - - 6 34",
      "4r1k1/4rbp1/p4p2/3p3p/2p2RP1/P1B2P1P/1P1RPK2/8 b - - 0 34",
      "4r1k1/4rbp1/p4p2/3p4/2p2Rp1/P1B2P1P/1P1RPK2/8 w - - 0 35",
      "4r1k1/4rbp1/p4p2/3p4/2p2RP1/P1B2P2/1P1RPK2/8 b - - 0 35",
      "4r3/4rbpk/p4p2/3p4/2p2RP1/P1B2P2/1P1RPK2/8 w - - 1 36",
      "4r3/4rbpk/p4p2/3p1R2/2p3P1/P1B2P2/1P1RPK2/8 b - - 2 36",
      "4r3/1r3bpk/p4p2/3p1R2/2p3P1/P1B2P2/1P1RPK2/8 w - - 3 37",
      "4r3/1r3bpk/p4p2/3R4/2p3P1/P1B2P2/1P1RPK2/8 b - - 0 37",
      "4r3/1r4pk/p4p2/3b4/2p3P1/P1B2P2/1P1RPK2/8 w - - 0 38",
      "4r3/1r4pk/p4p2/3R4/2p3P1/P1B2P2/1P2PK2/8 b - - 0 38",
      "4r3/1r4p1/p4pk1/3R4/2p3P1/P1B2P2/1P2PK2/8 w - - 1 39",
      "4r3/1r4p1/p4pk1/2R5/2p3P1/P1B2P2/1P2PK2/8 b - - 2 39",
      "7r/1r4p1/p4pk1/2R5/2p3P1/P1B2P2/1P2PK2/8 w - - 3 40",
      "7r/1r4p1/p4pk1/2R5/2p3P1/P1B2PK1/1P2P3/8 b - - 4 40",
      "7r/6p1/pr3pk1/2R5/2p3P1/P1B2PK1/1P2P3/8 w - - 5 41",
      "7r/6p1/pr3pk1/8/2R3P1/P1B2PK1/1P2P3/8 b - - 0 41",
      "8/6p1/pr3pk1/8/2R3P1/P1B2PK1/1P2P3/7r w - - 1 42",
      "8/2R3p1/pr3pk1/8/6P1/P1B2PK1/1P2P3/7r b - - 2 42",
      "8/2R3p1/pr3pk1/8/6P1/P1B2PK1/1P2P3/2r5 w - - 3 43",
      "8/3R2p1/pr3pk1/8/6P1/P1B2PK1/1P2P3/2r5 b - - 4 43",
      "8/3R2p1/p1r2pk1/8/6P1/P1B2PK1/1P2P3/2r5 w - - 5 44",
      "8/3R2p1/p1r2pk1/8/P5P1/2B2PK1/1P2P3/2r5 b - - 0 44",
      "8/3R2p1/p1r2pk1/8/P5P1/2B2PK1/1P2P3/6r1 w - - 1 45",
      "8/3R2p1/p1r2pk1/8/P5P1/2B2P2/1P2PK2/6r1 b - - 2 45",
      "8/3R2p1/p1r2pk1/8/P5P1/2B2P2/1P2PK2/r7 w - - 3 46",
      "8/3R2p1/p1r2pk1/P7/6P1/2B2P2/1P2PK2/r7 b - - 0 46",
      "8/3R2p1/p1r2pk1/P7/r5P1/2B2P2/1P2PK2/8 w - - 1 47",
      "8/3R2p1/p1r2pk1/P7/r5P1/2B2PK1/1P2P3/8 b - - 2 47",
      "8/3R2p1/p1r2pk1/P7/2r3P1/2B2PK1/1P2P3/8 w - - 3 48",
      "8/R5p1/p1r2pk1/P7/2r3P1/2B2PK1/1P2P3/8 b - - 4 48",
      "8/R5p1/p3rpk1/P7/2r3P1/2B2PK1/1P2P3/8 w - - 5 49",
      "8/R5p1/p3rpk1/P7/2r1P1P1/2B2PK1/1P6/8 b - - 0 49",
      "2r5/R5p1/p3rpk1/P7/4P1P1/2B2PK1/1P6/8 w - - 1 50",
      "2r5/3R2p1/p3rpk1/P7/4P1P1/2B2PK1/1P6/8 b - - 2 50",
      "2r5/3R2p1/p1r2pk1/P7/4P1P1/2B2PK1/1P6/8 w - - 3 51",
      "2r5/3R2p1/p1r2pk1/P7/4PPP1/2B3K1/1P6/8 b - - 0 51",
      "8/2rR2p1/p1r2pk1/P7/4PPP1/2B3K1/1P6/8 w - - 1 52",
      "8/2rR2p1/p1r2pk1/P4P2/4P1P1/2B3K1/1P6/8 b - - 0 52",
      "8/2rR2pk/p1r2p2/P4P2/4P1P1/2B3K1/1P6/8 w - - 1 53",
      "3R4/2r3pk/p1r2p2/P4P2/4P1P1/2B3K1/1P6/8 b - - 2 53",
      "2rR4/6pk/p1r2p2/P4P2/4P1P1/2B3K1/1P6/8 w - - 3 54",
      "2r5/6pk/p1r2p2/P4P2/4P1P1/2BR2K1/1P6/8 b - - 4 54",
      "4r3/6pk/p1r2p2/P4P2/4P1P1/2BR2K1/1P6/8 w - - 5 55",
      "4r3/6pk/p1r2p2/P4P2/3RP1P1/2B3K1/1P6/8 b - - 6 55",
      "4r3/2r3pk/p4p2/P4P2/3RP1P1/2B3K1/1P6/8 w - - 7 56",
      "4r3/2r3pk/p4p2/P4P2/3RPKP1/2B5/1P6/8 b - - 8 56",
      "4r3/4r1pk/p4p2/P4P2/3RPKP1/2B5/1P6/8 w - - 9 57",
      "4r3/4r1pk/p4p2/P4P2/2R1PKP1/2B5/1P6/8 b - - 10 57",
      "4r3/4r1p1/p4p1k/P4P2/2R1PKP1/2B5/1P6/8 w - - 11 58",
      "4r3/4r1p1/p4p1k/P4P2/2R1P1P1/2B2K2/1P6/8 b - - 12 58",
      "4r3/3r2p1/p4p1k/P4P2/2R1P1P1/2B2K2/1P6/8 w - - 13 59",
      "4r3/3r2p1/p4p1k/P4P2/2RBP1P1/5K2/1P6/8 b - - 14 59",
      "4r3/3r2pk/p4p2/P4P2/2RBP1P1/5K2/1P6/8 w - - 15 60",
      "4r3/3r2pk/p4p2/P4P2/1PRBP1P1/5K2/8/8 b - - 0 60",
      "4r3/6pk/p2r1p2/P4P2/1PRBP1P1/5K2/8/8 w - - 1 61",
      "4r3/6pk/p2r1p2/P4P2/1PRBP1P1/4K3/8/8 b - - 2 61",
      "4r3/6p1/p2r1p1k/P4P2/1PRBP1P1/4K3/8/8 w - - 3 62",
      "4r3/6p1/p2r1p1k/P4P2/1P1BP1P1/4K3/8/2R5 b - - 4 62",
      "4r3/6pk/p2r1p2/P4P2/1P1BP1P1/4K3/8/2R5 w - - 5 63",
      "4r3/6pk/pB1r1p2/P4P2/1P2P1P1/4K3/8/2R5 b - - 6 63",
      "4r3/3r2pk/pB3p2/P4P2/1P2P1P1/4K3/8/2R5 w - - 7 64",
      "4r3/3r2pk/p4p2/P1B2P2/1P2P1P1/4K3/8/2R5 b - - 8 64",
      "3r4/3r2pk/p4p2/P1B2P2/1P2P1P1/4K3/8/2R5 w - - 9 65",
      "3r4/3r2pk/p4p2/P1B2P2/1P2P1P1/4K3/8/7R b - - 10 65",
      "3r2k1/3r2p1/p4p2/P1B2P2/1P2P1P1/4K3/8/7R w - - 11 66",
      "3r2k1/3r2p1/p4p2/P1B2P2/1P2PKP1/8/8/7R b - - 12 66",
      "4r1k1/3r2p1/p4p2/P1B2P2/1P2PKP1/8/8/7R w - - 13 67",
      "4r1k1/3r2p1/p4p2/P1B2P2/1P2PKP1/8/8/4R3 b - - 14 67",
      "4r1k1/3r4/p4p2/P1B2Pp1/1P2PKP1/8/8/4R3 w - g6 0 68",
      "4r1k1/3r4/p4pP1/P1B5/1P2PKP1/8/8/4R3 b - - 0 68",
      "4r3/3r2k1/p4pP1/P1B5/1P2PKP1/8/8/4R3 w - - 1 69",
      "4r3/3r2k1/p4pP1/P1B3P1/1P2PK2/8/8/4R3 b - - 0 69",
      "4r3/3r4/p4pk1/P1B3P1/1P2PK2/8/8/4R3 w - - 0 70",
      "4r3/3r4/p4Pk1/P1B5/1P2PK2/8/8/4R3 b - - 0 70",
      "4r3/3r4/p4k2/P1B5/1P2PK2/8/8/4R3 w - - 0 71",
      "4r3/3r4/p4k2/P1B5/1P2PK2/8/8/7R b - - 1 71",
      "4r3/5r2/p4k2/P1B5/1P2PK2/8/8/7R w - - 2 72",
      "4r3/5r2/p4k2/P1B5/1P2P3/4K3/8/7R b - - 3 72",
      "4r3/5r2/p3k3/P1B5/1P2P3/4K3/8/7R w - - 4 73",
      "4r3/5r2/p3k3/P1B5/1P2P2R/4K3/8/8 b - - 5 73",
      "4r3/8/p3kr2/P1B5/1P2P2R/4K3/8/8 w - - 6 74",
      "4r3/7R/p3kr2/P1B5/1P2P3/4K3/8/8 b - - 7 74",
      "4r3/5r1R/p3k3/P1B5/1P2P3/4K3/8/8 w - - 8 75",
      "4r3/5r2/p3k3/P1B4R/1P2P3/4K3/8/8 b - - 9 75",
      "4r3/3k1r2/p7/P1B4R/1P2P3/4K3/8/8 w - - 10 76",
      "4r3/3k1r2/p7/P1B1P2R/1P6/4K3/8/8 b - - 0 76",
      "4r3/3k4/p7/P1B1P2R/1P6/4K3/8/5r2 w - - 1 77",
      "4r3/3k4/p7/P1B1P2R/1P2K3/8/8/5r2 b - - 2 77",
      "4r3/8/p1k5/P1B1P2R/1P2K3/8/8/5r2 w - - 3 78",
      "4r3/8/p1k4R/P1B1P3/1P2K3/8/8/5r2 b - - 4 78",
      "4r3/8/p6R/PkB1P3/1P2K3/8/8/5r2 w - - 5 79",
      "4r3/8/pR6/PkB1P3/1P2K3/8/8/5r2 b - - 6 79",
      "4r3/8/pR6/P1B1P3/1Pk1K3/8/8/5r2 w - - 7 80",
      "4r3/8/pR2P3/P1B5/1Pk1K3/8/8/5r2 b - - 0 80",
      "4r3/8/pR2P3/P1B5/1Pk1K3/8/8/4r3 w - - 1 81",
      "4r3/8/pR2P3/P1B2K2/1Pk5/8/8/4r3 b - - 2 81",
      "4r3/8/pR2P3/P1B2K2/1Pk5/8/8/5r2 w - - 3 82",
      "4r3/8/pR2P3/P1B1K3/1Pk5/8/8/5r2 b - - 4 82",
      "4r3/8/pR2P3/P1B1K3/1Pk5/8/8/4r3 w - - 5 83",
      "4r3/8/pR2PK2/P1B5/1Pk5/8/8/4r3 b - - 6 83",
      "4r3/8/pR2PK2/P1B5/1Pk5/8/8/5r2 w - - 7 84",
      "4r3/6K1/pR2P3/P1B5/1Pk5/8/8/5r2 b - - 8 84",
      "r7/6K1/pR2P3/P1B5/1Pk5/8/8/5r2 w - - 9 85",
      "r7/4P1K1/pR6/P1B5/1Pk5/8/8/5r2 b - - 0 85",
      "r7/4P1K1/pR6/P1B5/1Pk5/8/8/4r3 w - - 1 86",
      "r7/4PK2/pR6/P1B5/1Pk5/8/8/4r3 b - - 2 86",
      "r7/4PK2/pR6/P1B5/1Pk1r3/8/8/8 w - - 3 87",
      "r7/4PK2/p2R4/P1B5/1Pk1r3/8/8/8 b - - 4 87",
      "7r/4PK2/p2R4/P1B5/1Pk1r3/8/8/8 w - - 5 88",
      "7r/4PK2/R7/P1B5/1Pk1r3/8/8/8 b - - 0 88",
    ]
    for (index, history) in chess.getMoveHistory().enumerated() {
      XCTAssertEqual(history.fen, fens7[index], "Sinquefield(g8): FEN move (index)")
    }

    pgn = pgns.removeFirst()
    chess = try pgn.validate()
    XCTAssertEqual(chess.getTag("Event")?.value, "Sinquefield Cup", "Sinquefield(g9): event")
    XCTAssertEqual(chess.getTag("White")?.value, "Anand, Viswanathan", "Sinquefield(g9): white")
    XCTAssertEqual(
      chess.getTag("Black")?.value, "Vachier-Lagrave, Maxime", "Sinquefield(g9): black")
    XCTAssertEqual(chess.getMoveCount(), 38, "Sinquefield(g9): move count")
    XCTAssertEqual(
      chess.getMoveHistory().map { $0.pcn }.joined(separator: ","),
      "e2e4,c7c5,g1f3,d7d6,d2d4,c5d4,f3d4,g8f6,b1c3,a7a6,c1g5,e7e6,f2f4,h7h6,g5h4,d8b6,a2a3,f8e7,h4f2,b6c7,d1f3,b8d7,e1c1,b7b5,g2g4,c8b7,h2h4,d7c5,f1d3,c5d3,d1d3,d6d5,e4e5,f6e4,f2e1,e8c8,g4g5,h6g5,h4g5,c7b6,c3e2,c8b8,f3g2,g7g6,h1h8,d8h8,e1b4,e7b4,a3b4,a6a5,d3h3,h8c8,g2h2,a5b4,h3h8,b6a7,h8c8,b8c8,c1b1,e4d2,b1c1,d2f1,h2h8,c8d7,c1b1,f1d2,b1c1,d2e4,c1b1,e4d2,b1c1,d2e4,c1b1,e4d2",
      "Sinquefield(g9): PCN move history"
    )
    let fens8 = [
      "rnbqkbnr/pppppppp/8/8/4P3/8/PPPP1PPP/RNBQKBNR b KQkq - 0 1",
      "rnbqkbnr/pp1ppppp/8/2p5/4P3/8/PPPP1PPP/RNBQKBNR w KQkq - 0 2",
      "rnbqkbnr/pp1ppppp/8/2p5/4P3/5N2/PPPP1PPP/RNBQKB1R b KQkq - 1 2",
      "rnbqkbnr/pp2pppp/3p4/2p5/4P3/5N2/PPPP1PPP/RNBQKB1R w KQkq - 0 3",
      "rnbqkbnr/pp2pppp/3p4/2p5/3PP3/5N2/PPP2PPP/RNBQKB1R b KQkq - 0 3",
      "rnbqkbnr/pp2pppp/3p4/8/3pP3/5N2/PPP2PPP/RNBQKB1R w KQkq - 0 4",
      "rnbqkbnr/pp2pppp/3p4/8/3NP3/8/PPP2PPP/RNBQKB1R b KQkq - 0 4",
      "rnbqkb1r/pp2pppp/3p1n2/8/3NP3/8/PPP2PPP/RNBQKB1R w KQkq - 1 5",
      "rnbqkb1r/pp2pppp/3p1n2/8/3NP3/2N5/PPP2PPP/R1BQKB1R b KQkq - 2 5",
      "rnbqkb1r/1p2pppp/p2p1n2/8/3NP3/2N5/PPP2PPP/R1BQKB1R w KQkq - 0 6",
      "rnbqkb1r/1p2pppp/p2p1n2/6B1/3NP3/2N5/PPP2PPP/R2QKB1R b KQkq - 1 6",
      "rnbqkb1r/1p3ppp/p2ppn2/6B1/3NP3/2N5/PPP2PPP/R2QKB1R w KQkq - 0 7",
      "rnbqkb1r/1p3ppp/p2ppn2/6B1/3NPP2/2N5/PPP3PP/R2QKB1R b KQkq - 0 7",
      "rnbqkb1r/1p3pp1/p2ppn1p/6B1/3NPP2/2N5/PPP3PP/R2QKB1R w KQkq - 0 8",
      "rnbqkb1r/1p3pp1/p2ppn1p/8/3NPP1B/2N5/PPP3PP/R2QKB1R b KQkq - 1 8",
      "rnb1kb1r/1p3pp1/pq1ppn1p/8/3NPP1B/2N5/PPP3PP/R2QKB1R w KQkq - 2 9",
      "rnb1kb1r/1p3pp1/pq1ppn1p/8/3NPP1B/P1N5/1PP3PP/R2QKB1R b KQkq - 0 9",
      "rnb1k2r/1p2bpp1/pq1ppn1p/8/3NPP1B/P1N5/1PP3PP/R2QKB1R w KQkq - 1 10",
      "rnb1k2r/1p2bpp1/pq1ppn1p/8/3NPP2/P1N5/1PP2BPP/R2QKB1R b KQkq - 2 10",
      "rnb1k2r/1pq1bpp1/p2ppn1p/8/3NPP2/P1N5/1PP2BPP/R2QKB1R w KQkq - 3 11",
      "rnb1k2r/1pq1bpp1/p2ppn1p/8/3NPP2/P1N2Q2/1PP2BPP/R3KB1R b KQkq - 4 11",
      "r1b1k2r/1pqnbpp1/p2ppn1p/8/3NPP2/P1N2Q2/1PP2BPP/R3KB1R w KQkq - 5 12",
      "r1b1k2r/1pqnbpp1/p2ppn1p/8/3NPP2/P1N2Q2/1PP2BPP/2KR1B1R b kq - 6 12",
      "r1b1k2r/2qnbpp1/p2ppn1p/1p6/3NPP2/P1N2Q2/1PP2BPP/2KR1B1R w kq - 0 13",
      "r1b1k2r/2qnbpp1/p2ppn1p/1p6/3NPPP1/P1N2Q2/1PP2B1P/2KR1B1R b kq - 0 13",
      "r3k2r/1bqnbpp1/p2ppn1p/1p6/3NPPP1/P1N2Q2/1PP2B1P/2KR1B1R w kq - 1 14",
      "r3k2r/1bqnbpp1/p2ppn1p/1p6/3NPPPP/P1N2Q2/1PP2B2/2KR1B1R b kq - 0 14",
      "r3k2r/1bq1bpp1/p2ppn1p/1pn5/3NPPPP/P1N2Q2/1PP2B2/2KR1B1R w kq - 1 15",
      "r3k2r/1bq1bpp1/p2ppn1p/1pn5/3NPPPP/P1NB1Q2/1PP2B2/2KR3R b kq - 2 15",
      "r3k2r/1bq1bpp1/p2ppn1p/1p6/3NPPPP/P1Nn1Q2/1PP2B2/2KR3R w kq - 0 16",
      "r3k2r/1bq1bpp1/p2ppn1p/1p6/3NPPPP/P1NR1Q2/1PP2B2/2K4R b kq - 0 16",
      "r3k2r/1bq1bpp1/p3pn1p/1p1p4/3NPPPP/P1NR1Q2/1PP2B2/2K4R w kq - 0 17",
      "r3k2r/1bq1bpp1/p3pn1p/1p1pP3/3N1PPP/P1NR1Q2/1PP2B2/2K4R b kq - 0 17",
      "r3k2r/1bq1bpp1/p3p2p/1p1pP3/3NnPPP/P1NR1Q2/1PP2B2/2K4R w kq - 1 18",
      "r3k2r/1bq1bpp1/p3p2p/1p1pP3/3NnPPP/P1NR1Q2/1PP5/2K1B2R b kq - 2 18",
      "2kr3r/1bq1bpp1/p3p2p/1p1pP3/3NnPPP/P1NR1Q2/1PP5/2K1B2R w - - 3 19",
      "2kr3r/1bq1bpp1/p3p2p/1p1pP1P1/3NnP1P/P1NR1Q2/1PP5/2K1B2R b - - 0 19",
      "2kr3r/1bq1bpp1/p3p3/1p1pP1p1/3NnP1P/P1NR1Q2/1PP5/2K1B2R w - - 0 20",
      "2kr3r/1bq1bpp1/p3p3/1p1pP1P1/3NnP2/P1NR1Q2/1PP5/2K1B2R b - - 0 20",
      "2kr3r/1b2bpp1/pq2p3/1p1pP1P1/3NnP2/P1NR1Q2/1PP5/2K1B2R w - - 1 21",
      "2kr3r/1b2bpp1/pq2p3/1p1pP1P1/3NnP2/P2R1Q2/1PP1N3/2K1B2R b - - 2 21",
      "1k1r3r/1b2bpp1/pq2p3/1p1pP1P1/3NnP2/P2R1Q2/1PP1N3/2K1B2R w - - 3 22",
      "1k1r3r/1b2bpp1/pq2p3/1p1pP1P1/3NnP2/P2R4/1PP1N1Q1/2K1B2R b - - 4 22",
      "1k1r3r/1b2bp2/pq2p1p1/1p1pP1P1/3NnP2/P2R4/1PP1N1Q1/2K1B2R w - - 0 23",
      "1k1r3R/1b2bp2/pq2p1p1/1p1pP1P1/3NnP2/P2R4/1PP1N1Q1/2K1B3 b - - 0 23",
      "1k5r/1b2bp2/pq2p1p1/1p1pP1P1/3NnP2/P2R4/1PP1N1Q1/2K1B3 w - - 0 24",
      "1k5r/1b2bp2/pq2p1p1/1p1pP1P1/1B1NnP2/P2R4/1PP1N1Q1/2K5 b - - 1 24",
      "1k5r/1b3p2/pq2p1p1/1p1pP1P1/1b1NnP2/P2R4/1PP1N1Q1/2K5 w - - 0 25",
      "1k5r/1b3p2/pq2p1p1/1p1pP1P1/1P1NnP2/3R4/1PP1N1Q1/2K5 b - - 0 25",
      "1k5r/1b3p2/1q2p1p1/pp1pP1P1/1P1NnP2/3R4/1PP1N1Q1/2K5 w - - 0 26",
      "1k5r/1b3p2/1q2p1p1/pp1pP1P1/1P1NnP2/7R/1PP1N1Q1/2K5 b - - 1 26",
      "1kr5/1b3p2/1q2p1p1/pp1pP1P1/1P1NnP2/7R/1PP1N1Q1/2K5 w - - 2 27",
      "1kr5/1b3p2/1q2p1p1/pp1pP1P1/1P1NnP2/7R/1PP1N2Q/2K5 b - - 3 27",
      "1kr5/1b3p2/1q2p1p1/1p1pP1P1/1p1NnP2/7R/1PP1N2Q/2K5 w - - 0 28",
      "1kr4R/1b3p2/1q2p1p1/1p1pP1P1/1p1NnP2/8/1PP1N2Q/2K5 b - - 1 28",
      "1kr4R/qb3p2/4p1p1/1p1pP1P1/1p1NnP2/8/1PP1N2Q/2K5 w - - 2 29",
      "1kR5/qb3p2/4p1p1/1p1pP1P1/1p1NnP2/8/1PP1N2Q/2K5 b - - 0 29",
      "2k5/qb3p2/4p1p1/1p1pP1P1/1p1NnP2/8/1PP1N2Q/2K5 w - - 0 30",
      "2k5/qb3p2/4p1p1/1p1pP1P1/1p1NnP2/8/1PP1N2Q/1K6 b - - 1 30",
      "2k5/qb3p2/4p1p1/1p1pP1P1/1p1N1P2/8/1PPnN2Q/1K6 w - - 2 31",
      "2k5/qb3p2/4p1p1/1p1pP1P1/1p1N1P2/8/1PPnN2Q/2K5 b - - 3 31",
      "2k5/qb3p2/4p1p1/1p1pP1P1/1p1N1P2/8/1PP1N2Q/2K2n2 w - - 4 32",
      "2k4Q/qb3p2/4p1p1/1p1pP1P1/1p1N1P2/8/1PP1N3/2K2n2 b - - 5 32",
      "7Q/qb1k1p2/4p1p1/1p1pP1P1/1p1N1P2/8/1PP1N3/2K2n2 w - - 6 33",
      "7Q/qb1k1p2/4p1p1/1p1pP1P1/1p1N1P2/8/1PP1N3/1K3n2 b - - 7 33",
      "7Q/qb1k1p2/4p1p1/1p1pP1P1/1p1N1P2/8/1PPnN3/1K6 w - - 8 34",
      "7Q/qb1k1p2/4p1p1/1p1pP1P1/1p1N1P2/8/1PPnN3/2K5 b - - 9 34",
      "7Q/qb1k1p2/4p1p1/1p1pP1P1/1p1NnP2/8/1PP1N3/2K5 w - - 10 35",
      "7Q/qb1k1p2/4p1p1/1p1pP1P1/1p1NnP2/8/1PP1N3/1K6 b - - 11 35",
      "7Q/qb1k1p2/4p1p1/1p1pP1P1/1p1N1P2/8/1PPnN3/1K6 w - - 12 36",
      "7Q/qb1k1p2/4p1p1/1p1pP1P1/1p1N1P2/8/1PPnN3/2K5 b - - 13 36",
      "7Q/qb1k1p2/4p1p1/1p1pP1P1/1p1NnP2/8/1PP1N3/2K5 w - - 14 37",
      "7Q/qb1k1p2/4p1p1/1p1pP1P1/1p1NnP2/8/1PP1N3/1K6 b - - 15 37",
      "7Q/qb1k1p2/4p1p1/1p1pP1P1/1p1N1P2/8/1PPnN3/1K6 w - - 16 38",
    ]
    for (index, history) in chess.getMoveHistory().enumerated() {
      XCTAssertEqual(history.fen, fens8[index], "Sinquefield(g9): FEN move (index)")
    }

    pgn = pgns.removeFirst()
    chess = try pgn.validate()
    XCTAssertEqual(chess.getTag("Event")?.value, "Sinquefield Cup", "Sinquefield(g10): event")
    XCTAssertEqual(chess.getTag("White")?.value, "So, Wesley", "Sinquefield(g10): white")
    XCTAssertEqual(chess.getTag("Black")?.value, "Nakamura, Hikaru", "Sinquefield(g10): black")
    XCTAssertEqual(chess.getMoveCount(), 32, "Sinquefield(g10): move count")
    XCTAssertEqual(
      chess.getMoveHistory().map { $0.pcn }.joined(separator: ","),
      "c2c4,g8f6,b1c3,e7e6,d2d4,f8b4,d1c2,e8g8,a2a3,b4c3,c2c3,d7d5,c1g5,d5c4,c3c4,b7b6,a1d1,c8a6,c4c2,b8d7,e2e4,a6f1,e1f1,d8c8,g1e2,h7h6,g5f6,d7f6,f2f3,c8b7,d1c1,c7c5,d4c5,b6c5,f1f2,a8b8,c2c5,b7b2,c5a7,b8a8,a7d4,b2a3,c1a1,a3e7,a1a8,f8a8,h1a1,a8a1,d4a1,e7c5,a1d4,c5c7,h2h3,f6d7,d4c3,c7b6,c3d4,b6c7,d4c3,c7b6,c3d4,b6c7",
      "Sinquefield(g10): PCN move history"
    )
    let fens9 = [
      "rnbqkbnr/pppppppp/8/8/2P5/8/PP1PPPPP/RNBQKBNR b KQkq - 0 1",
      "rnbqkb1r/pppppppp/5n2/8/2P5/8/PP1PPPPP/RNBQKBNR w KQkq - 1 2",
      "rnbqkb1r/pppppppp/5n2/8/2P5/2N5/PP1PPPPP/R1BQKBNR b KQkq - 2 2",
      "rnbqkb1r/pppp1ppp/4pn2/8/2P5/2N5/PP1PPPPP/R1BQKBNR w KQkq - 0 3",
      "rnbqkb1r/pppp1ppp/4pn2/8/2PP4/2N5/PP2PPPP/R1BQKBNR b KQkq - 0 3",
      "rnbqk2r/pppp1ppp/4pn2/8/1bPP4/2N5/PP2PPPP/R1BQKBNR w KQkq - 1 4",
      "rnbqk2r/pppp1ppp/4pn2/8/1bPP4/2N5/PPQ1PPPP/R1B1KBNR b KQkq - 2 4",
      "rnbq1rk1/pppp1ppp/4pn2/8/1bPP4/2N5/PPQ1PPPP/R1B1KBNR w KQ - 3 5",
      "rnbq1rk1/pppp1ppp/4pn2/8/1bPP4/P1N5/1PQ1PPPP/R1B1KBNR b KQ - 0 5",
      "rnbq1rk1/pppp1ppp/4pn2/8/2PP4/P1b5/1PQ1PPPP/R1B1KBNR w KQ - 0 6",
      "rnbq1rk1/pppp1ppp/4pn2/8/2PP4/P1Q5/1P2PPPP/R1B1KBNR b KQ - 0 6",
      "rnbq1rk1/ppp2ppp/4pn2/3p4/2PP4/P1Q5/1P2PPPP/R1B1KBNR w KQ - 0 7",
      "rnbq1rk1/ppp2ppp/4pn2/3p2B1/2PP4/P1Q5/1P2PPPP/R3KBNR b KQ - 1 7",
      "rnbq1rk1/ppp2ppp/4pn2/6B1/2pP4/P1Q5/1P2PPPP/R3KBNR w KQ - 0 8",
      "rnbq1rk1/ppp2ppp/4pn2/6B1/2QP4/P7/1P2PPPP/R3KBNR b KQ - 0 8",
      "rnbq1rk1/p1p2ppp/1p2pn2/6B1/2QP4/P7/1P2PPPP/R3KBNR w KQ - 0 9",
      "rnbq1rk1/p1p2ppp/1p2pn2/6B1/2QP4/P7/1P2PPPP/3RKBNR b K - 1 9",
      "rn1q1rk1/p1p2ppp/bp2pn2/6B1/2QP4/P7/1P2PPPP/3RKBNR w K - 2 10",
      "rn1q1rk1/p1p2ppp/bp2pn2/6B1/3P4/P7/1PQ1PPPP/3RKBNR b K - 3 10",
      "r2q1rk1/p1pn1ppp/bp2pn2/6B1/3P4/P7/1PQ1PPPP/3RKBNR w K - 4 11",
      "r2q1rk1/p1pn1ppp/bp2pn2/6B1/3PP3/P7/1PQ2PPP/3RKBNR b K - 0 11",
      "r2q1rk1/p1pn1ppp/1p2pn2/6B1/3PP3/P7/1PQ2PPP/3RKbNR w K - 0 12",
      "r2q1rk1/p1pn1ppp/1p2pn2/6B1/3PP3/P7/1PQ2PPP/3R1KNR b - - 0 12",
      "r1q2rk1/p1pn1ppp/1p2pn2/6B1/3PP3/P7/1PQ2PPP/3R1KNR w - - 1 13",
      "r1q2rk1/p1pn1ppp/1p2pn2/6B1/3PP3/P7/1PQ1NPPP/3R1K1R b - - 2 13",
      "r1q2rk1/p1pn1pp1/1p2pn1p/6B1/3PP3/P7/1PQ1NPPP/3R1K1R w - - 0 14",
      "r1q2rk1/p1pn1pp1/1p2pB1p/8/3PP3/P7/1PQ1NPPP/3R1K1R b - - 0 14",
      "r1q2rk1/p1p2pp1/1p2pn1p/8/3PP3/P7/1PQ1NPPP/3R1K1R w - - 0 15",
      "r1q2rk1/p1p2pp1/1p2pn1p/8/3PP3/P4P2/1PQ1N1PP/3R1K1R b - - 0 15",
      "r4rk1/pqp2pp1/1p2pn1p/8/3PP3/P4P2/1PQ1N1PP/3R1K1R w - - 1 16",
      "r4rk1/pqp2pp1/1p2pn1p/8/3PP3/P4P2/1PQ1N1PP/2R2K1R b - - 2 16",
      "r4rk1/pq3pp1/1p2pn1p/2p5/3PP3/P4P2/1PQ1N1PP/2R2K1R w - - 0 17",
      "r4rk1/pq3pp1/1p2pn1p/2P5/4P3/P4P2/1PQ1N1PP/2R2K1R b - - 0 17",
      "r4rk1/pq3pp1/4pn1p/2p5/4P3/P4P2/1PQ1N1PP/2R2K1R w - - 0 18",
      "r4rk1/pq3pp1/4pn1p/2p5/4P3/P4P2/1PQ1NKPP/2R4R b - - 1 18",
      "1r3rk1/pq3pp1/4pn1p/2p5/4P3/P4P2/1PQ1NKPP/2R4R w - - 2 19",
      "1r3rk1/pq3pp1/4pn1p/2Q5/4P3/P4P2/1P2NKPP/2R4R b - - 0 19",
      "1r3rk1/p4pp1/4pn1p/2Q5/4P3/P4P2/1q2NKPP/2R4R w - - 0 20",
      "1r3rk1/Q4pp1/4pn1p/8/4P3/P4P2/1q2NKPP/2R4R b - - 0 20",
      "r4rk1/Q4pp1/4pn1p/8/4P3/P4P2/1q2NKPP/2R4R w - - 1 21",
      "r4rk1/5pp1/4pn1p/8/3QP3/P4P2/1q2NKPP/2R4R b - - 2 21",
      "r4rk1/5pp1/4pn1p/8/3QP3/q4P2/4NKPP/2R4R w - - 0 22",
      "r4rk1/5pp1/4pn1p/8/3QP3/q4P2/4NKPP/R6R b - - 1 22",
      "r4rk1/4qpp1/4pn1p/8/3QP3/5P2/4NKPP/R6R w - - 2 23",
      "R4rk1/4qpp1/4pn1p/8/3QP3/5P2/4NKPP/7R b - - 0 23",
      "r5k1/4qpp1/4pn1p/8/3QP3/5P2/4NKPP/7R w - - 0 24",
      "r5k1/4qpp1/4pn1p/8/3QP3/5P2/4NKPP/R7 b - - 1 24",
      "6k1/4qpp1/4pn1p/8/3QP3/5P2/4NKPP/r7 w - - 0 25",
      "6k1/4qpp1/4pn1p/8/4P3/5P2/4NKPP/Q7 b - - 0 25",
      "6k1/5pp1/4pn1p/2q5/4P3/5P2/4NKPP/Q7 w - - 1 26",
      "6k1/5pp1/4pn1p/2q5/3QP3/5P2/4NKPP/8 b - - 2 26",
      "6k1/2q2pp1/4pn1p/8/3QP3/5P2/4NKPP/8 w - - 3 27",
      "6k1/2q2pp1/4pn1p/8/3QP3/5P1P/4NKP1/8 b - - 0 27",
      "6k1/2qn1pp1/4p2p/8/3QP3/5P1P/4NKP1/8 w - - 1 28",
      "6k1/2qn1pp1/4p2p/8/4P3/2Q2P1P/4NKP1/8 b - - 2 28",
      "6k1/3n1pp1/1q2p2p/8/4P3/2Q2P1P/4NKP1/8 w - - 3 29",
      "6k1/3n1pp1/1q2p2p/8/3QP3/5P1P/4NKP1/8 b - - 4 29",
      "6k1/2qn1pp1/4p2p/8/3QP3/5P1P/4NKP1/8 w - - 5 30",
      "6k1/2qn1pp1/4p2p/8/4P3/2Q2P1P/4NKP1/8 b - - 6 30",
      "6k1/3n1pp1/1q2p2p/8/4P3/2Q2P1P/4NKP1/8 w - - 7 31",
      "6k1/3n1pp1/1q2p2p/8/3QP3/5P1P/4NKP1/8 b - - 8 31",
      "6k1/2qn1pp1/4p2p/8/3QP3/5P1P/4NKP1/8 w - - 9 32",
    ]
    for (index, history) in chess.getMoveHistory().enumerated() {
      XCTAssertEqual(history.fen, fens9[index], "Sinquefield(g10): FEN move (index)")
    }

    pgn = pgns.removeFirst()
    chess = try pgn.validate()
    XCTAssertEqual(chess.getTag("Event")?.value, "Sinquefield Cup", "Sinquefield(g11): event")
    XCTAssertEqual(chess.getTag("White")?.value, "Aronian, Levon", "Sinquefield(g11): white")
    XCTAssertEqual(chess.getTag("Black")?.value, "Carlsen, Magnus", "Sinquefield(g11): black")
    XCTAssertEqual(chess.getMoveCount(), 38, "Sinquefield(g11): move count")
    XCTAssertEqual(
      chess.getMoveHistory().map { $0.pcn }.joined(separator: ","),
      "e2e4,e7e5,g1f3,b8c6,f1c4,f8c5,d2d3,g8f6,e1g1,d7d6,c2c3,a7a6,f1e1,h7h6,b2b4,c5a7,a2a4,e8g8,b1d2,f8e8,d2f1,c8e6,c4e6,e8e6,f1g3,c6e7,d3d4,e7g6,d1c2,c7c6,h2h3,d8c7,c1e3,d6d5,f3e5,g6e5,d4e5,c7e5,e4d5,c6d5,a1d1,a7e3,e1e3,e5c7,g3f5,a8e8,c2d3,c7f4,g2g3,f4c7,a4a5,e6e3,f5e3,c7c6,e3d5,f6d5,d3d5,e8e1,g1h2,e1d1,d5d1,c6c3,d1d8,g8h7,d8d5,c3b4,d5f5,h7g8,f5c8,g8h7,c8f5,h7g8,f5c8,g8h7,c8f5",
      "Sinquefield(g11): PCN move history"
    )
    let fens10 = [
      "rnbqkbnr/pppppppp/8/8/4P3/8/PPPP1PPP/RNBQKBNR b KQkq - 0 1",
      "rnbqkbnr/pppp1ppp/8/4p3/4P3/8/PPPP1PPP/RNBQKBNR w KQkq - 0 2",
      "rnbqkbnr/pppp1ppp/8/4p3/4P3/5N2/PPPP1PPP/RNBQKB1R b KQkq - 1 2",
      "r1bqkbnr/pppp1ppp/2n5/4p3/4P3/5N2/PPPP1PPP/RNBQKB1R w KQkq - 2 3",
      "r1bqkbnr/pppp1ppp/2n5/4p3/2B1P3/5N2/PPPP1PPP/RNBQK2R b KQkq - 3 3",
      "r1bqk1nr/pppp1ppp/2n5/2b1p3/2B1P3/5N2/PPPP1PPP/RNBQK2R w KQkq - 4 4",
      "r1bqk1nr/pppp1ppp/2n5/2b1p3/2B1P3/3P1N2/PPP2PPP/RNBQK2R b KQkq - 0 4",
      "r1bqk2r/pppp1ppp/2n2n2/2b1p3/2B1P3/3P1N2/PPP2PPP/RNBQK2R w KQkq - 1 5",
      "r1bqk2r/pppp1ppp/2n2n2/2b1p3/2B1P3/3P1N2/PPP2PPP/RNBQ1RK1 b kq - 2 5",
      "r1bqk2r/ppp2ppp/2np1n2/2b1p3/2B1P3/3P1N2/PPP2PPP/RNBQ1RK1 w kq - 0 6",
      "r1bqk2r/ppp2ppp/2np1n2/2b1p3/2B1P3/2PP1N2/PP3PPP/RNBQ1RK1 b kq - 0 6",
      "r1bqk2r/1pp2ppp/p1np1n2/2b1p3/2B1P3/2PP1N2/PP3PPP/RNBQ1RK1 w kq - 0 7",
      "r1bqk2r/1pp2ppp/p1np1n2/2b1p3/2B1P3/2PP1N2/PP3PPP/RNBQR1K1 b kq - 1 7",
      "r1bqk2r/1pp2pp1/p1np1n1p/2b1p3/2B1P3/2PP1N2/PP3PPP/RNBQR1K1 w kq - 0 8",
      "r1bqk2r/1pp2pp1/p1np1n1p/2b1p3/1PB1P3/2PP1N2/P4PPP/RNBQR1K1 b kq - 0 8",
      "r1bqk2r/bpp2pp1/p1np1n1p/4p3/1PB1P3/2PP1N2/P4PPP/RNBQR1K1 w kq - 1 9",
      "r1bqk2r/bpp2pp1/p1np1n1p/4p3/PPB1P3/2PP1N2/5PPP/RNBQR1K1 b kq - 0 9",
      "r1bq1rk1/bpp2pp1/p1np1n1p/4p3/PPB1P3/2PP1N2/5PPP/RNBQR1K1 w - - 1 10",
      "r1bq1rk1/bpp2pp1/p1np1n1p/4p3/PPB1P3/2PP1N2/3N1PPP/R1BQR1K1 b - - 2 10",
      "r1bqr1k1/bpp2pp1/p1np1n1p/4p3/PPB1P3/2PP1N2/3N1PPP/R1BQR1K1 w - - 3 11",
      "r1bqr1k1/bpp2pp1/p1np1n1p/4p3/PPB1P3/2PP1N2/5PPP/R1BQRNK1 b - - 4 11",
      "r2qr1k1/bpp2pp1/p1npbn1p/4p3/PPB1P3/2PP1N2/5PPP/R1BQRNK1 w - - 5 12",
      "r2qr1k1/bpp2pp1/p1npBn1p/4p3/PP2P3/2PP1N2/5PPP/R1BQRNK1 b - - 0 12",
      "r2q2k1/bpp2pp1/p1nprn1p/4p3/PP2P3/2PP1N2/5PPP/R1BQRNK1 w - - 0 13",
      "r2q2k1/bpp2pp1/p1nprn1p/4p3/PP2P3/2PP1NN1/5PPP/R1BQR1K1 b - - 1 13",
      "r2q2k1/bpp1npp1/p2prn1p/4p3/PP2P3/2PP1NN1/5PPP/R1BQR1K1 w - - 2 14",
      "r2q2k1/bpp1npp1/p2prn1p/4p3/PP1PP3/2P2NN1/5PPP/R1BQR1K1 b - - 0 14",
      "r2q2k1/bpp2pp1/p2prnnp/4p3/PP1PP3/2P2NN1/5PPP/R1BQR1K1 w - - 1 15",
      "r2q2k1/bpp2pp1/p2prnnp/4p3/PP1PP3/2P2NN1/2Q2PPP/R1B1R1K1 b - - 2 15",
      "r2q2k1/bp3pp1/p1pprnnp/4p3/PP1PP3/2P2NN1/2Q2PPP/R1B1R1K1 w - - 0 16",
      "r2q2k1/bp3pp1/p1pprnnp/4p3/PP1PP3/2P2NNP/2Q2PP1/R1B1R1K1 b - - 0 16",
      "r5k1/bpq2pp1/p1pprnnp/4p3/PP1PP3/2P2NNP/2Q2PP1/R1B1R1K1 w - - 1 17",
      "r5k1/bpq2pp1/p1pprnnp/4p3/PP1PP3/2P1BNNP/2Q2PP1/R3R1K1 b - - 2 17",
      "r5k1/bpq2pp1/p1p1rnnp/3pp3/PP1PP3/2P1BNNP/2Q2PP1/R3R1K1 w - - 0 18",
      "r5k1/bpq2pp1/p1p1rnnp/3pN3/PP1PP3/2P1B1NP/2Q2PP1/R3R1K1 b - - 0 18",
      "r5k1/bpq2pp1/p1p1rn1p/3pn3/PP1PP3/2P1B1NP/2Q2PP1/R3R1K1 w - - 0 19",
      "r5k1/bpq2pp1/p1p1rn1p/3pP3/PP2P3/2P1B1NP/2Q2PP1/R3R1K1 b - - 0 19",
      "r5k1/bp3pp1/p1p1rn1p/3pq3/PP2P3/2P1B1NP/2Q2PP1/R3R1K1 w - - 0 20",
      "r5k1/bp3pp1/p1p1rn1p/3Pq3/PP6/2P1B1NP/2Q2PP1/R3R1K1 b - - 0 20",
      "r5k1/bp3pp1/p3rn1p/3pq3/PP6/2P1B1NP/2Q2PP1/R3R1K1 w - - 0 21",
      "r5k1/bp3pp1/p3rn1p/3pq3/PP6/2P1B1NP/2Q2PP1/3RR1K1 b - - 1 21",
      "r5k1/1p3pp1/p3rn1p/3pq3/PP6/2P1b1NP/2Q2PP1/3RR1K1 w - - 0 22",
      "r5k1/1p3pp1/p3rn1p/3pq3/PP6/2P1R1NP/2Q2PP1/3R2K1 b - - 0 22",
      "r5k1/1pq2pp1/p3rn1p/3p4/PP6/2P1R1NP/2Q2PP1/3R2K1 w - - 1 23",
      "r5k1/1pq2pp1/p3rn1p/3p1N2/PP6/2P1R2P/2Q2PP1/3R2K1 b - - 2 23",
      "4r1k1/1pq2pp1/p3rn1p/3p1N2/PP6/2P1R2P/2Q2PP1/3R2K1 w - - 3 24",
      "4r1k1/1pq2pp1/p3rn1p/3p1N2/PP6/2PQR2P/5PP1/3R2K1 b - - 4 24",
      "4r1k1/1p3pp1/p3rn1p/3p1N2/PP3q2/2PQR2P/5PP1/3R2K1 w - - 5 25",
      "4r1k1/1p3pp1/p3rn1p/3p1N2/PP3q2/2PQR1PP/5P2/3R2K1 b - - 0 25",
      "4r1k1/1pq2pp1/p3rn1p/3p1N2/PP6/2PQR1PP/5P2/3R2K1 w - - 1 26",
      "4r1k1/1pq2pp1/p3rn1p/P2p1N2/1P6/2PQR1PP/5P2/3R2K1 b - - 0 26",
      "4r1k1/1pq2pp1/p4n1p/P2p1N2/1P6/2PQr1PP/5P2/3R2K1 w - - 0 27",
      "4r1k1/1pq2pp1/p4n1p/P2p4/1P6/2PQN1PP/5P2/3R2K1 b - - 0 27",
      "4r1k1/1p3pp1/p1q2n1p/P2p4/1P6/2PQN1PP/5P2/3R2K1 w - - 1 28",
      "4r1k1/1p3pp1/p1q2n1p/P2N4/1P6/2PQ2PP/5P2/3R2K1 b - - 0 28",
      "4r1k1/1p3pp1/p1q4p/P2n4/1P6/2PQ2PP/5P2/3R2K1 w - - 0 29",
      "4r1k1/1p3pp1/p1q4p/P2Q4/1P6/2P3PP/5P2/3R2K1 b - - 0 29",
      "6k1/1p3pp1/p1q4p/P2Q4/1P6/2P3PP/5P2/3Rr1K1 w - - 1 30",
      "6k1/1p3pp1/p1q4p/P2Q4/1P6/2P3PP/5P1K/3Rr3 b - - 2 30",
      "6k1/1p3pp1/p1q4p/P2Q4/1P6/2P3PP/5P1K/3r4 w - - 0 31",
      "6k1/1p3pp1/p1q4p/P7/1P6/2P3PP/5P1K/3Q4 b - - 0 31",
      "6k1/1p3pp1/p6p/P7/1P6/2q3PP/5P1K/3Q4 w - - 0 32",
      "3Q2k1/1p3pp1/p6p/P7/1P6/2q3PP/5P1K/8 b - - 1 32",
      "3Q4/1p3ppk/p6p/P7/1P6/2q3PP/5P1K/8 w - - 2 33",
      "8/1p3ppk/p6p/P2Q4/1P6/2q3PP/5P1K/8 b - - 3 33",
      "8/1p3ppk/p6p/P2Q4/1q6/6PP/5P1K/8 w - - 0 34",
      "8/1p3ppk/p6p/P4Q2/1q6/6PP/5P1K/8 b - - 1 34",
      "6k1/1p3pp1/p6p/P4Q2/1q6/6PP/5P1K/8 w - - 2 35",
      "2Q3k1/1p3pp1/p6p/P7/1q6/6PP/5P1K/8 b - - 3 35",
      "2Q5/1p3ppk/p6p/P7/1q6/6PP/5P1K/8 w - - 4 36",
      "8/1p3ppk/p6p/P4Q2/1q6/6PP/5P1K/8 b - - 5 36",
      "6k1/1p3pp1/p6p/P4Q2/1q6/6PP/5P1K/8 w - - 6 37",
      "2Q3k1/1p3pp1/p6p/P7/1q6/6PP/5P1K/8 b - - 7 37",
      "2Q5/1p3ppk/p6p/P7/1q6/6PP/5P1K/8 w - - 8 38",
      "8/1p3ppk/p6p/P4Q2/1q6/6PP/5P1K/8 b - - 9 38",
    ]
    for (index, history) in chess.getMoveHistory().enumerated() {
      XCTAssertEqual(history.fen, fens10[index], "Sinquefield(g11): FEN move (index)")
    }

    pgn = pgns.removeFirst()
    chess = try pgn.validate()
    XCTAssertEqual(chess.getTag("Event")?.value, "Sinquefield Cup", "Sinquefield(g12): event")
    XCTAssertEqual(
      chess.getTag("White")?.value, "Mamedyarov, Shakhriyar", "Sinquefield(g12): white")
    XCTAssertEqual(chess.getTag("Black")?.value, "Caruana, Fabiano", "Sinquefield(g12): black")
    XCTAssertEqual(chess.getMoveCount(), 61, "Sinquefield(g12): move count")
    XCTAssertEqual(
      chess.getMoveHistory().map { $0.pcn }.joined(separator: ","),
      "d2d4,g8f6,c2c4,e7e6,g1f3,d7d5,b1c3,d5c4,e2e4,b7b5,e4e5,f6d5,c3b5,d5b6,f1e2,b8c6,e1g1,f8e7,c1e3,e8g8,b5c3,a8b8,a2a3,c8b7,d1c2,c6a5,a1d1,h7h6,f3d2,d8d7,f2f4,b6d5,c3d5,b7d5,c2c3,b8b5,d2c4,a5c4,e2c4,d5c4,c3c4,b5b2,d4d5,e6d5,d1d5,d7f5,a3a4,f8b8,d5b5,c7c5,b5b8,b2b8,c4d5,b8d8,d5c4,d8b8,c4d5,b8d8,d5c4,a7a5,h2h3,h6h5,f1c1,d8d3,g1f2,f5g6,g2g3,g6f5,c1b1,d3a3,b1b3,a3b3,c4b3,f5h3,b3b8,g8h7,b8c7,h3e6,c7a5,h5h4,g3h4,e7h4,f2e2,e6c4,e2d2,c4a2,d2d1,a2b1,d1e2,c5c4,a5c3,b1e4,e2d1,e4f3,d1c1,h4g3,c3d2,c4c3,d2d4,g3e1,d4d3,g7g6,c1c2,f3g2,c2d1,g2h1,d1c2,h1c6,c2d1,e1g3,d3d4,c6f3,d1c2,g3e1,d4d3,f3c6,c2d1,e1g3,d3d4,c6f3,d1c2",
      "Sinquefield(g12): PCN move history"
    )
    let fens11 = [
      "rnbqkbnr/pppppppp/8/8/3P4/8/PPP1PPPP/RNBQKBNR b KQkq - 0 1",
      "rnbqkb1r/pppppppp/5n2/8/3P4/8/PPP1PPPP/RNBQKBNR w KQkq - 1 2",
      "rnbqkb1r/pppppppp/5n2/8/2PP4/8/PP2PPPP/RNBQKBNR b KQkq - 0 2",
      "rnbqkb1r/pppp1ppp/4pn2/8/2PP4/8/PP2PPPP/RNBQKBNR w KQkq - 0 3",
      "rnbqkb1r/pppp1ppp/4pn2/8/2PP4/5N2/PP2PPPP/RNBQKB1R b KQkq - 1 3",
      "rnbqkb1r/ppp2ppp/4pn2/3p4/2PP4/5N2/PP2PPPP/RNBQKB1R w KQkq - 0 4",
      "rnbqkb1r/ppp2ppp/4pn2/3p4/2PP4/2N2N2/PP2PPPP/R1BQKB1R b KQkq - 1 4",
      "rnbqkb1r/ppp2ppp/4pn2/8/2pP4/2N2N2/PP2PPPP/R1BQKB1R w KQkq - 0 5",
      "rnbqkb1r/ppp2ppp/4pn2/8/2pPP3/2N2N2/PP3PPP/R1BQKB1R b KQkq - 0 5",
      "rnbqkb1r/p1p2ppp/4pn2/1p6/2pPP3/2N2N2/PP3PPP/R1BQKB1R w KQkq - 0 6",
      "rnbqkb1r/p1p2ppp/4pn2/1p2P3/2pP4/2N2N2/PP3PPP/R1BQKB1R b KQkq - 0 6",
      "rnbqkb1r/p1p2ppp/4p3/1p1nP3/2pP4/2N2N2/PP3PPP/R1BQKB1R w KQkq - 1 7",
      "rnbqkb1r/p1p2ppp/4p3/1N1nP3/2pP4/5N2/PP3PPP/R1BQKB1R b KQkq - 0 7",
      "rnbqkb1r/p1p2ppp/1n2p3/1N2P3/2pP4/5N2/PP3PPP/R1BQKB1R w KQkq - 1 8",
      "rnbqkb1r/p1p2ppp/1n2p3/1N2P3/2pP4/5N2/PP2BPPP/R1BQK2R b KQkq - 2 8",
      "r1bqkb1r/p1p2ppp/1nn1p3/1N2P3/2pP4/5N2/PP2BPPP/R1BQK2R w KQkq - 3 9",
      "r1bqkb1r/p1p2ppp/1nn1p3/1N2P3/2pP4/5N2/PP2BPPP/R1BQ1RK1 b kq - 4 9",
      "r1bqk2r/p1p1bppp/1nn1p3/1N2P3/2pP4/5N2/PP2BPPP/R1BQ1RK1 w kq - 5 10",
      "r1bqk2r/p1p1bppp/1nn1p3/1N2P3/2pP4/4BN2/PP2BPPP/R2Q1RK1 b kq - 6 10",
      "r1bq1rk1/p1p1bppp/1nn1p3/1N2P3/2pP4/4BN2/PP2BPPP/R2Q1RK1 w - - 7 11",
      "r1bq1rk1/p1p1bppp/1nn1p3/4P3/2pP4/2N1BN2/PP2BPPP/R2Q1RK1 b - - 8 11",
      "1rbq1rk1/p1p1bppp/1nn1p3/4P3/2pP4/2N1BN2/PP2BPPP/R2Q1RK1 w - - 9 12",
      "1rbq1rk1/p1p1bppp/1nn1p3/4P3/2pP4/P1N1BN2/1P2BPPP/R2Q1RK1 b - - 0 12",
      "1r1q1rk1/pbp1bppp/1nn1p3/4P3/2pP4/P1N1BN2/1P2BPPP/R2Q1RK1 w - - 1 13",
      "1r1q1rk1/pbp1bppp/1nn1p3/4P3/2pP4/P1N1BN2/1PQ1BPPP/R4RK1 b - - 2 13",
      "1r1q1rk1/pbp1bppp/1n2p3/n3P3/2pP4/P1N1BN2/1PQ1BPPP/R4RK1 w - - 3 14",
      "1r1q1rk1/pbp1bppp/1n2p3/n3P3/2pP4/P1N1BN2/1PQ1BPPP/3R1RK1 b - - 4 14",
      "1r1q1rk1/pbp1bpp1/1n2p2p/n3P3/2pP4/P1N1BN2/1PQ1BPPP/3R1RK1 w - - 0 15",
      "1r1q1rk1/pbp1bpp1/1n2p2p/n3P3/2pP4/P1N1B3/1PQNBPPP/3R1RK1 b - - 1 15",
      "1r3rk1/pbpqbpp1/1n2p2p/n3P3/2pP4/P1N1B3/1PQNBPPP/3R1RK1 w - - 2 16",
      "1r3rk1/pbpqbpp1/1n2p2p/n3P3/2pP1P2/P1N1B3/1PQNB1PP/3R1RK1 b - - 0 16",
      "1r3rk1/pbpqbpp1/4p2p/n2nP3/2pP1P2/P1N1B3/1PQNB1PP/3R1RK1 w - - 1 17",
      "1r3rk1/pbpqbpp1/4p2p/n2NP3/2pP1P2/P3B3/1PQNB1PP/3R1RK1 b - - 0 17",
      "1r3rk1/p1pqbpp1/4p2p/n2bP3/2pP1P2/P3B3/1PQNB1PP/3R1RK1 w - - 0 18",
      "1r3rk1/p1pqbpp1/4p2p/n2bP3/2pP1P2/P1Q1B3/1P1NB1PP/3R1RK1 b - - 1 18",
      "5rk1/p1pqbpp1/4p2p/nr1bP3/2pP1P2/P1Q1B3/1P1NB1PP/3R1RK1 w - - 2 19",
      "5rk1/p1pqbpp1/4p2p/nr1bP3/2NP1P2/P1Q1B3/1P2B1PP/3R1RK1 b - - 0 19",
      "5rk1/p1pqbpp1/4p2p/1r1bP3/2nP1P2/P1Q1B3/1P2B1PP/3R1RK1 w - - 0 20",
      "5rk1/p1pqbpp1/4p2p/1r1bP3/2BP1P2/P1Q1B3/1P4PP/3R1RK1 b - - 0 20",
      "5rk1/p1pqbpp1/4p2p/1r2P3/2bP1P2/P1Q1B3/1P4PP/3R1RK1 w - - 0 21",
      "5rk1/p1pqbpp1/4p2p/1r2P3/2QP1P2/P3B3/1P4PP/3R1RK1 b - - 0 21",
      "5rk1/p1pqbpp1/4p2p/4P3/2QP1P2/P3B3/1r4PP/3R1RK1 w - - 0 22",
      "5rk1/p1pqbpp1/4p2p/3PP3/2Q2P2/P3B3/1r4PP/3R1RK1 b - - 0 22",
      "5rk1/p1pqbpp1/7p/3pP3/2Q2P2/P3B3/1r4PP/3R1RK1 w - - 0 23",
      "5rk1/p1pqbpp1/7p/3RP3/2Q2P2/P3B3/1r4PP/5RK1 b - - 0 23",
      "5rk1/p1p1bpp1/7p/3RPq2/2Q2P2/P3B3/1r4PP/5RK1 w - - 1 24",
      "5rk1/p1p1bpp1/7p/3RPq2/P1Q2P2/4B3/1r4PP/5RK1 b - - 0 24",
      "1r4k1/p1p1bpp1/7p/3RPq2/P1Q2P2/4B3/1r4PP/5RK1 w - - 1 25",
      "1r4k1/p1p1bpp1/7p/1R2Pq2/P1Q2P2/4B3/1r4PP/5RK1 b - - 2 25",
      "1r4k1/p3bpp1/7p/1Rp1Pq2/P1Q2P2/4B3/1r4PP/5RK1 w - - 0 26",
      "1R4k1/p3bpp1/7p/2p1Pq2/P1Q2P2/4B3/1r4PP/5RK1 b - - 0 26",
      "1r4k1/p3bpp1/7p/2p1Pq2/P1Q2P2/4B3/6PP/5RK1 w - - 0 27",
      "1r4k1/p3bpp1/7p/2pQPq2/P4P2/4B3/6PP/5RK1 b - - 1 27",
      "3r2k1/p3bpp1/7p/2pQPq2/P4P2/4B3/6PP/5RK1 w - - 2 28",
      "3r2k1/p3bpp1/7p/2p1Pq2/P1Q2P2/4B3/6PP/5RK1 b - - 3 28",
      "1r4k1/p3bpp1/7p/2p1Pq2/P1Q2P2/4B3/6PP/5RK1 w - - 4 29",
      "1r4k1/p3bpp1/7p/2pQPq2/P4P2/4B3/6PP/5RK1 b - - 5 29",
      "3r2k1/p3bpp1/7p/2pQPq2/P4P2/4B3/6PP/5RK1 w - - 6 30",
      "3r2k1/p3bpp1/7p/2p1Pq2/P1Q2P2/4B3/6PP/5RK1 b - - 7 30",
      "3r2k1/4bpp1/7p/p1p1Pq2/P1Q2P2/4B3/6PP/5RK1 w - - 0 31",
      "3r2k1/4bpp1/7p/p1p1Pq2/P1Q2P2/4B2P/6P1/5RK1 b - - 0 31",
      "3r2k1/4bpp1/8/p1p1Pq1p/P1Q2P2/4B2P/6P1/5RK1 w - - 0 32",
      "3r2k1/4bpp1/8/p1p1Pq1p/P1Q2P2/4B2P/6P1/2R3K1 b - - 1 32",
      "6k1/4bpp1/8/p1p1Pq1p/P1Q2P2/3rB2P/6P1/2R3K1 w - - 2 33",
      "6k1/4bpp1/8/p1p1Pq1p/P1Q2P2/3rB2P/5KP1/2R5 b - - 3 33",
      "6k1/4bpp1/6q1/p1p1P2p/P1Q2P2/3rB2P/5KP1/2R5 w - - 4 34",
      "6k1/4bpp1/6q1/p1p1P2p/P1Q2P2/3rB1PP/5K2/2R5 b - - 0 34",
      "6k1/4bpp1/8/p1p1Pq1p/P1Q2P2/3rB1PP/5K2/2R5 w - - 1 35",
      "6k1/4bpp1/8/p1p1Pq1p/P1Q2P2/3rB1PP/5K2/1R6 b - - 2 35",
      "6k1/4bpp1/8/p1p1Pq1p/P1Q2P2/r3B1PP/5K2/1R6 w - - 3 36",
      "6k1/4bpp1/8/p1p1Pq1p/P1Q2P2/rR2B1PP/5K2/8 b - - 4 36",
      "6k1/4bpp1/8/p1p1Pq1p/P1Q2P2/1r2B1PP/5K2/8 w - - 0 37",
      "6k1/4bpp1/8/p1p1Pq1p/P4P2/1Q2B1PP/5K2/8 b - - 0 37",
      "6k1/4bpp1/8/p1p1P2p/P4P2/1Q2B1Pq/5K2/8 w - - 0 38",
      "1Q4k1/4bpp1/8/p1p1P2p/P4P2/4B1Pq/5K2/8 b - - 1 38",
      "1Q6/4bppk/8/p1p1P2p/P4P2/4B1Pq/5K2/8 w - - 2 39",
      "8/2Q1bppk/8/p1p1P2p/P4P2/4B1Pq/5K2/8 b - - 3 39",
      "8/2Q1bppk/4q3/p1p1P2p/P4P2/4B1P1/5K2/8 w - - 4 40",
      "8/4bppk/4q3/Q1p1P2p/P4P2/4B1P1/5K2/8 b - - 0 40",
      "8/4bppk/4q3/Q1p1P3/P4P1p/4B1P1/5K2/8 w - - 0 41",
      "8/4bppk/4q3/Q1p1P3/P4P1P/4B3/5K2/8 b - - 0 41",
      "8/5ppk/4q3/Q1p1P3/P4P1b/4B3/5K2/8 w - - 0 42",
      "8/5ppk/4q3/Q1p1P3/P4P1b/4B3/4K3/8 b - - 1 42",
      "8/5ppk/8/Q1p1P3/P1q2P1b/4B3/4K3/8 w - - 2 43",
      "8/5ppk/8/Q1p1P3/P1q2P1b/4B3/3K4/8 b - - 3 43",
      "8/5ppk/8/Q1p1P3/P4P1b/4B3/q2K4/8 w - - 4 44",
      "8/5ppk/8/Q1p1P3/P4P1b/4B3/q7/3K4 b - - 5 44",
      "8/5ppk/8/Q1p1P3/P4P1b/4B3/8/1q1K4 w - - 6 45",
      "8/5ppk/8/Q1p1P3/P4P1b/4B3/4K3/1q6 b - - 7 45",
      "8/5ppk/8/Q3P3/P1p2P1b/4B3/4K3/1q6 w - - 0 46",
      "8/5ppk/8/4P3/P1p2P1b/2Q1B3/4K3/1q6 b - - 1 46",
      "8/5ppk/8/4P3/P1p1qP1b/2Q1B3/4K3/8 w - - 2 47",
      "8/5ppk/8/4P3/P1p1qP1b/2Q1B3/8/3K4 b - - 3 47",
      "8/5ppk/8/4P3/P1p2P1b/2Q1Bq2/8/3K4 w - - 4 48",
      "8/5ppk/8/4P3/P1p2P1b/2Q1Bq2/8/2K5 b - - 5 48",
      "8/5ppk/8/4P3/P1p2P2/2Q1Bqb1/8/2K5 w - - 6 49",
      "8/5ppk/8/4P3/P1p2P2/4Bqb1/3Q4/2K5 b - - 7 49",
      "8/5ppk/8/4P3/P4P2/2p1Bqb1/3Q4/2K5 w - - 0 50",
      "8/5ppk/8/4P3/P2Q1P2/2p1Bqb1/8/2K5 b - - 1 50",
      "8/5ppk/8/4P3/P2Q1P2/2p1Bq2/8/2K1b3 w - - 2 51",
      "8/5ppk/8/4P3/P4P2/2pQBq2/8/2K1b3 b - - 3 51",
      "8/5p1k/6p1/4P3/P4P2/2pQBq2/8/2K1b3 w - - 0 52",
      "8/5p1k/6p1/4P3/P4P2/2pQBq2/2K5/4b3 b - - 1 52",
      "8/5p1k/6p1/4P3/P4P2/2pQB3/2K3q1/4b3 w - - 2 53",
      "8/5p1k/6p1/4P3/P4P2/2pQB3/6q1/3Kb3 b - - 3 53",
      "8/5p1k/6p1/4P3/P4P2/2pQB3/8/3Kb2q w - - 4 54",
      "8/5p1k/6p1/4P3/P4P2/2pQB3/2K5/4b2q b - - 5 54",
      "8/5p1k/2q3p1/4P3/P4P2/2pQB3/2K5/4b3 w - - 6 55",
      "8/5p1k/2q3p1/4P3/P4P2/2pQB3/8/3Kb3 b - - 7 55",
      "8/5p1k/2q3p1/4P3/P4P2/2pQB1b1/8/3K4 w - - 8 56",
      "8/5p1k/2q3p1/4P3/P2Q1P2/2p1B1b1/8/3K4 b - - 9 56",
      "8/5p1k/6p1/4P3/P2Q1P2/2p1Bqb1/8/3K4 w - - 10 57",
      "8/5p1k/6p1/4P3/P2Q1P2/2p1Bqb1/2K5/8 b - - 11 57",
      "8/5p1k/6p1/4P3/P2Q1P2/2p1Bq2/2K5/4b3 w - - 12 58",
      "8/5p1k/6p1/4P3/P4P2/2pQBq2/2K5/4b3 b - - 13 58",
      "8/5p1k/2q3p1/4P3/P4P2/2pQB3/2K5/4b3 w - - 14 59",
      "8/5p1k/2q3p1/4P3/P4P2/2pQB3/8/3Kb3 b - - 15 59",
      "8/5p1k/2q3p1/4P3/P4P2/2pQB1b1/8/3K4 w - - 16 60",
      "8/5p1k/2q3p1/4P3/P2Q1P2/2p1B1b1/8/3K4 b - - 17 60",
      "8/5p1k/6p1/4P3/P2Q1P2/2p1Bqb1/8/3K4 w - - 18 61",
      "8/5p1k/6p1/4P3/P2Q1P2/2p1Bqb1/2K5/8 b - - 19 61",
    ]
    for (index, history) in chess.getMoveHistory().enumerated() {
      XCTAssertEqual(history.fen, fens11[index], "Sinquefield(g12): FEN move (index)")
    }

    pgn = pgns.removeFirst()
    chess = try pgn.validate()
    XCTAssertEqual(chess.getTag("Event")?.value, "Sinquefield Cup", "Sinquefield(g13): event")
    XCTAssertEqual(
      chess.getTag("White")?.value, "Vachier-Lagrave, Maxime", "Sinquefield(g13): white")
    XCTAssertEqual(chess.getTag("Black")?.value, "So, Wesley", "Sinquefield(g13): black")
    XCTAssertEqual(chess.getMoveCount(), 45, "Sinquefield(g13): move count")
    XCTAssertEqual(
      chess.getMoveHistory().map { $0.pcn }.joined(separator: ","),
      "e2e4,e7e5,g1f3,b8c6,f1b5,g8f6,e1g1,f6e4,d2d4,e4d6,b5c6,d7c6,d4e5,d6f5,d1d8,e8d8,h2h3,f8e7,b1c3,f5h4,f3h4,e7h4,c1e3,h7h5,a1d1,d8e8,c3e2,h4e7,f1e1,a7a6,e3f4,g7g5,f4h2,h8h6,e5e6,c8e6,h2c7,a8c8,c7a5,c6c5,e2c3,c8c6,c3d5,e6d5,d1d5,h6e6,g1f1,e6e1,a5e1,c6d6,d5d6,e7d6,g2g4,h5g4,h3g4,c5c4,f1e2,e8d7,e2e3,d6c5,e3e4,d7e6,f2f3,b7b5,e1a5,f7f6,b2b3,c4b3,c2b3,c5f2,a2a4,f2c5,a4b5,a6b5,a5d2,c5b6,f3f4,g5f4,d2f4,b6c5,f4d2,c5b6,d2f4,b6c5,f4d2,c5b6,d2f4,b6c5,f4d2",
      "Sinquefield(g13): PCN move history"
    )
    let fens12 = [
      "rnbqkbnr/pppppppp/8/8/4P3/8/PPPP1PPP/RNBQKBNR b KQkq - 0 1",
      "rnbqkbnr/pppp1ppp/8/4p3/4P3/8/PPPP1PPP/RNBQKBNR w KQkq - 0 2",
      "rnbqkbnr/pppp1ppp/8/4p3/4P3/5N2/PPPP1PPP/RNBQKB1R b KQkq - 1 2",
      "r1bqkbnr/pppp1ppp/2n5/4p3/4P3/5N2/PPPP1PPP/RNBQKB1R w KQkq - 2 3",
      "r1bqkbnr/pppp1ppp/2n5/1B2p3/4P3/5N2/PPPP1PPP/RNBQK2R b KQkq - 3 3",
      "r1bqkb1r/pppp1ppp/2n2n2/1B2p3/4P3/5N2/PPPP1PPP/RNBQK2R w KQkq - 4 4",
      "r1bqkb1r/pppp1ppp/2n2n2/1B2p3/4P3/5N2/PPPP1PPP/RNBQ1RK1 b kq - 5 4",
      "r1bqkb1r/pppp1ppp/2n5/1B2p3/4n3/5N2/PPPP1PPP/RNBQ1RK1 w kq - 0 5",
      "r1bqkb1r/pppp1ppp/2n5/1B2p3/3Pn3/5N2/PPP2PPP/RNBQ1RK1 b kq - 0 5",
      "r1bqkb1r/pppp1ppp/2nn4/1B2p3/3P4/5N2/PPP2PPP/RNBQ1RK1 w kq - 1 6",
      "r1bqkb1r/pppp1ppp/2Bn4/4p3/3P4/5N2/PPP2PPP/RNBQ1RK1 b kq - 0 6",
      "r1bqkb1r/ppp2ppp/2pn4/4p3/3P4/5N2/PPP2PPP/RNBQ1RK1 w kq - 0 7",
      "r1bqkb1r/ppp2ppp/2pn4/4P3/8/5N2/PPP2PPP/RNBQ1RK1 b kq - 0 7",
      "r1bqkb1r/ppp2ppp/2p5/4Pn2/8/5N2/PPP2PPP/RNBQ1RK1 w kq - 1 8",
      "r1bQkb1r/ppp2ppp/2p5/4Pn2/8/5N2/PPP2PPP/RNB2RK1 b kq - 0 8",
      "r1bk1b1r/ppp2ppp/2p5/4Pn2/8/5N2/PPP2PPP/RNB2RK1 w - - 0 9",
      "r1bk1b1r/ppp2ppp/2p5/4Pn2/8/5N1P/PPP2PP1/RNB2RK1 b - - 0 9",
      "r1bk3r/ppp1bppp/2p5/4Pn2/8/5N1P/PPP2PP1/RNB2RK1 w - - 1 10",
      "r1bk3r/ppp1bppp/2p5/4Pn2/8/2N2N1P/PPP2PP1/R1B2RK1 b - - 2 10",
      "r1bk3r/ppp1bppp/2p5/4P3/7n/2N2N1P/PPP2PP1/R1B2RK1 w - - 3 11",
      "r1bk3r/ppp1bppp/2p5/4P3/7N/2N4P/PPP2PP1/R1B2RK1 b - - 0 11",
      "r1bk3r/ppp2ppp/2p5/4P3/7b/2N4P/PPP2PP1/R1B2RK1 w - - 0 12",
      "r1bk3r/ppp2ppp/2p5/4P3/7b/2N1B2P/PPP2PP1/R4RK1 b - - 1 12",
      "r1bk3r/ppp2pp1/2p5/4P2p/7b/2N1B2P/PPP2PP1/R4RK1 w - - 0 13",
      "r1bk3r/ppp2pp1/2p5/4P2p/7b/2N1B2P/PPP2PP1/3R1RK1 b - - 1 13",
      "r1b1k2r/ppp2pp1/2p5/4P2p/7b/2N1B2P/PPP2PP1/3R1RK1 w - - 2 14",
      "r1b1k2r/ppp2pp1/2p5/4P2p/7b/4B2P/PPP1NPP1/3R1RK1 b - - 3 14",
      "r1b1k2r/ppp1bpp1/2p5/4P2p/8/4B2P/PPP1NPP1/3R1RK1 w - - 4 15",
      "r1b1k2r/ppp1bpp1/2p5/4P2p/8/4B2P/PPP1NPP1/3RR1K1 b - - 5 15",
      "r1b1k2r/1pp1bpp1/p1p5/4P2p/8/4B2P/PPP1NPP1/3RR1K1 w - - 0 16",
      "r1b1k2r/1pp1bpp1/p1p5/4P2p/5B2/7P/PPP1NPP1/3RR1K1 b - - 1 16",
      "r1b1k2r/1pp1bp2/p1p5/4P1pp/5B2/7P/PPP1NPP1/3RR1K1 w - - 0 17",
      "r1b1k2r/1pp1bp2/p1p5/4P1pp/8/7P/PPP1NPPB/3RR1K1 b - - 1 17",
      "r1b1k3/1pp1bp2/p1p4r/4P1pp/8/7P/PPP1NPPB/3RR1K1 w - - 2 18",
      "r1b1k3/1pp1bp2/p1p1P2r/6pp/8/7P/PPP1NPPB/3RR1K1 b - - 0 18",
      "r3k3/1pp1bp2/p1p1b2r/6pp/8/7P/PPP1NPPB/3RR1K1 w - - 0 19",
      "r3k3/1pB1bp2/p1p1b2r/6pp/8/7P/PPP1NPP1/3RR1K1 b - - 0 19",
      "2r1k3/1pB1bp2/p1p1b2r/6pp/8/7P/PPP1NPP1/3RR1K1 w - - 1 20",
      "2r1k3/1p2bp2/p1p1b2r/B5pp/8/7P/PPP1NPP1/3RR1K1 b - - 2 20",
      "2r1k3/1p2bp2/p3b2r/B1p3pp/8/7P/PPP1NPP1/3RR1K1 w - - 0 21",
      "2r1k3/1p2bp2/p3b2r/B1p3pp/8/2N4P/PPP2PP1/3RR1K1 b - - 1 21",
      "4k3/1p2bp2/p1r1b2r/B1p3pp/8/2N4P/PPP2PP1/3RR1K1 w - - 2 22",
      "4k3/1p2bp2/p1r1b2r/B1pN2pp/8/7P/PPP2PP1/3RR1K1 b - - 3 22",
      "4k3/1p2bp2/p1r4r/B1pb2pp/8/7P/PPP2PP1/3RR1K1 w - - 0 23",
      "4k3/1p2bp2/p1r4r/B1pR2pp/8/7P/PPP2PP1/4R1K1 b - - 0 23",
      "4k3/1p2bp2/p1r1r3/B1pR2pp/8/7P/PPP2PP1/4R1K1 w - - 1 24",
      "4k3/1p2bp2/p1r1r3/B1pR2pp/8/7P/PPP2PP1/4RK2 b - - 2 24",
      "4k3/1p2bp2/p1r5/B1pR2pp/8/7P/PPP2PP1/4rK2 w - - 0 25",
      "4k3/1p2bp2/p1r5/2pR2pp/8/7P/PPP2PP1/4BK2 b - - 0 25",
      "4k3/1p2bp2/p2r4/2pR2pp/8/7P/PPP2PP1/4BK2 w - - 1 26",
      "4k3/1p2bp2/p2R4/2p3pp/8/7P/PPP2PP1/4BK2 b - - 0 26",
      "4k3/1p3p2/p2b4/2p3pp/8/7P/PPP2PP1/4BK2 w - - 0 27",
      "4k3/1p3p2/p2b4/2p3pp/6P1/7P/PPP2P2/4BK2 b - - 0 27",
      "4k3/1p3p2/p2b4/2p3p1/6p1/7P/PPP2P2/4BK2 w - - 0 28",
      "4k3/1p3p2/p2b4/2p3p1/6P1/8/PPP2P2/4BK2 b - - 0 28",
      "4k3/1p3p2/p2b4/6p1/2p3P1/8/PPP2P2/4BK2 w - - 0 29",
      "4k3/1p3p2/p2b4/6p1/2p3P1/8/PPP1KP2/4B3 b - - 1 29",
      "8/1p1k1p2/p2b4/6p1/2p3P1/8/PPP1KP2/4B3 w - - 2 30",
      "8/1p1k1p2/p2b4/6p1/2p3P1/4K3/PPP2P2/4B3 b - - 3 30",
      "8/1p1k1p2/p7/2b3p1/2p3P1/4K3/PPP2P2/4B3 w - - 4 31",
      "8/1p1k1p2/p7/2b3p1/2p1K1P1/8/PPP2P2/4B3 b - - 5 31",
      "8/1p3p2/p3k3/2b3p1/2p1K1P1/8/PPP2P2/4B3 w - - 6 32",
      "8/1p3p2/p3k3/2b3p1/2p1K1P1/5P2/PPP5/4B3 b - - 0 32",
      "8/5p2/p3k3/1pb3p1/2p1K1P1/5P2/PPP5/4B3 w - - 0 33",
      "8/5p2/p3k3/Bpb3p1/2p1K1P1/5P2/PPP5/8 b - - 1 33",
      "8/8/p3kp2/Bpb3p1/2p1K1P1/5P2/PPP5/8 w - - 0 34",
      "8/8/p3kp2/Bpb3p1/2p1K1P1/1P3P2/P1P5/8 b - - 0 34",
      "8/8/p3kp2/Bpb3p1/4K1P1/1p3P2/P1P5/8 w - - 0 35",
      "8/8/p3kp2/Bpb3p1/4K1P1/1P3P2/P7/8 b - - 0 35",
      "8/8/p3kp2/Bp4p1/4K1P1/1P3P2/P4b2/8 w - - 1 36",
      "8/8/p3kp2/Bp4p1/P3K1P1/1P3P2/5b2/8 b - - 0 36",
      "8/8/p3kp2/Bpb3p1/P3K1P1/1P3P2/8/8 w - - 1 37",
      "8/8/p3kp2/BPb3p1/4K1P1/1P3P2/8/8 b - - 0 37",
      "8/8/4kp2/Bpb3p1/4K1P1/1P3P2/8/8 w - - 0 38",
      "8/8/4kp2/1pb3p1/4K1P1/1P3P2/3B4/8 b - - 1 38",
      "8/8/1b2kp2/1p4p1/4K1P1/1P3P2/3B4/8 w - - 2 39",
      "8/8/1b2kp2/1p4p1/4KPP1/1P6/3B4/8 b - - 0 39",
      "8/8/1b2kp2/1p6/4KpP1/1P6/3B4/8 w - - 0 40",
      "8/8/1b2kp2/1p6/4KBP1/1P6/8/8 b - - 0 40",
      "8/8/4kp2/1pb5/4KBP1/1P6/8/8 w - - 1 41",
      "8/8/4kp2/1pb5/4K1P1/1P6/3B4/8 b - - 2 41",
      "8/8/1b2kp2/1p6/4K1P1/1P6/3B4/8 w - - 3 42",
      "8/8/1b2kp2/1p6/4KBP1/1P6/8/8 b - - 4 42",
      "8/8/4kp2/1pb5/4KBP1/1P6/8/8 w - - 5 43",
      "8/8/4kp2/1pb5/4K1P1/1P6/3B4/8 b - - 6 43",
      "8/8/1b2kp2/1p6/4K1P1/1P6/3B4/8 w - - 7 44",
      "8/8/1b2kp2/1p6/4KBP1/1P6/8/8 b - - 8 44",
      "8/8/4kp2/1pb5/4KBP1/1P6/8/8 w - - 9 45",
      "8/8/4kp2/1pb5/4K1P1/1P6/3B4/8 b - - 10 45",
    ]
    for (index, history) in chess.getMoveHistory().enumerated() {
      XCTAssertEqual(history.fen, fens12[index], "Sinquefield(g13): FEN move (index)")
    }

    pgn = pgns.removeFirst()
    chess = try pgn.validate()
    XCTAssertEqual(chess.getTag("Event")?.value, "Sinquefield Cup", "Sinquefield(g14): event")
    XCTAssertEqual(chess.getTag("White")?.value, "Nakamura, Hikaru", "Sinquefield(g14): white")
    XCTAssertEqual(chess.getTag("Black")?.value, "Grischuk, Alexander", "Sinquefield(g14): black")
    XCTAssertEqual(chess.getMoveCount(), 90, "Sinquefield(g14): move count")
    XCTAssertEqual(
      chess.getMoveHistory().map { $0.pcn }.joined(separator: ","),
      "e2e4,e7e5,g1f3,b8c6,f1c4,f8c5,d2d3,g8f6,e1g1,e8g8,c2c3,d7d5,e4d5,f6d5,f1e1,c8g4,b1d2,d5b6,c4b5,c5d6,h2h3,g4h5,d2e4,f8e8,c1g5,f7f6,g5e3,a7a6,b5c6,b7c6,e4g3,h5f7,c3c4,d6b4,e1e2,b4f8,b2b3,c6c5,d1e1,a6a5,a1d1,a5a4,f3d2,d8d7,d2b1,a4b3,a2b3,f7g6,f2f3,a8d8,e1f2,d7c6,e2d2,b6d7,b1c3,h7h6,g1h1,g8h8,c3b5,g6h7,d2a2,f6f5,e3c1,d7f6,b5c3,c6b7,a2b2,g7g5,b2b1,b7c6,c1b2,h8g8,g3f1,f6h5,c3d5,c6d6,f1g3,c7c6,d5c3,h5f4,f2f1,f4d3,c3e2,d6e6,b2c3,d8d6,d1d2,e8d8,b1d1,h7g6,e2c1,d3c1,d2d6,f8d6,d1c1,d8b8,c1a1,b8b3,a1a8,b3b8,a8a6,d6f8,f1e2,f8g7,a6a7,b8e8,h3h4,g5h4,g3f1,f5f4,f1d2,e8e7,a7e7,e6e7,d2e4,g6f7,h1h2,h4h3,g2h3,e7e6,e2g2,g8h7,g2c2,h7h8,c2b2,h8h7,b2c2,e6g6,c2e2,f7e6,e2f1,e6f5,f1e2,g6h5,e4f2,h5h4,f2e4,h4h3,h2g1,h3h5,c3e1,f5e4,e2e4,h5g6,g1h2,g6e4,f3e4,h7g6,h2h3,g6h5,e1h4,f4f3,h4f2,g7f6,f2e1,f6g5,e1f2,g5e7,f2e1,e7d8,e1g3,h5g5,g3e5,d8f6,e5d6,f3f2,h3g2,f6d4,g2f1,g5g4,f1e2,h6h5,e2f1,h5h4,d6h2,h4h3,f1e2,d4e3",
      "Sinquefield(g14): PCN move history"
    )
    let fens13 = [
      "rnbqkbnr/pppppppp/8/8/4P3/8/PPPP1PPP/RNBQKBNR b KQkq - 0 1",
      "rnbqkbnr/pppp1ppp/8/4p3/4P3/8/PPPP1PPP/RNBQKBNR w KQkq - 0 2",
      "rnbqkbnr/pppp1ppp/8/4p3/4P3/5N2/PPPP1PPP/RNBQKB1R b KQkq - 1 2",
      "r1bqkbnr/pppp1ppp/2n5/4p3/4P3/5N2/PPPP1PPP/RNBQKB1R w KQkq - 2 3",
      "r1bqkbnr/pppp1ppp/2n5/4p3/2B1P3/5N2/PPPP1PPP/RNBQK2R b KQkq - 3 3",
      "r1bqk1nr/pppp1ppp/2n5/2b1p3/2B1P3/5N2/PPPP1PPP/RNBQK2R w KQkq - 4 4",
      "r1bqk1nr/pppp1ppp/2n5/2b1p3/2B1P3/3P1N2/PPP2PPP/RNBQK2R b KQkq - 0 4",
      "r1bqk2r/pppp1ppp/2n2n2/2b1p3/2B1P3/3P1N2/PPP2PPP/RNBQK2R w KQkq - 1 5",
      "r1bqk2r/pppp1ppp/2n2n2/2b1p3/2B1P3/3P1N2/PPP2PPP/RNBQ1RK1 b kq - 2 5",
      "r1bq1rk1/pppp1ppp/2n2n2/2b1p3/2B1P3/3P1N2/PPP2PPP/RNBQ1RK1 w - - 3 6",
      "r1bq1rk1/pppp1ppp/2n2n2/2b1p3/2B1P3/2PP1N2/PP3PPP/RNBQ1RK1 b - - 0 6",
      "r1bq1rk1/ppp2ppp/2n2n2/2bpp3/2B1P3/2PP1N2/PP3PPP/RNBQ1RK1 w - - 0 7",
      "r1bq1rk1/ppp2ppp/2n2n2/2bPp3/2B5/2PP1N2/PP3PPP/RNBQ1RK1 b - - 0 7",
      "r1bq1rk1/ppp2ppp/2n5/2bnp3/2B5/2PP1N2/PP3PPP/RNBQ1RK1 w - - 0 8",
      "r1bq1rk1/ppp2ppp/2n5/2bnp3/2B5/2PP1N2/PP3PPP/RNBQR1K1 b - - 1 8",
      "r2q1rk1/ppp2ppp/2n5/2bnp3/2B3b1/2PP1N2/PP3PPP/RNBQR1K1 w - - 2 9",
      "r2q1rk1/ppp2ppp/2n5/2bnp3/2B3b1/2PP1N2/PP1N1PPP/R1BQR1K1 b - - 3 9",
      "r2q1rk1/ppp2ppp/1nn5/2b1p3/2B3b1/2PP1N2/PP1N1PPP/R1BQR1K1 w - - 4 10",
      "r2q1rk1/ppp2ppp/1nn5/1Bb1p3/6b1/2PP1N2/PP1N1PPP/R1BQR1K1 b - - 5 10",
      "r2q1rk1/ppp2ppp/1nnb4/1B2p3/6b1/2PP1N2/PP1N1PPP/R1BQR1K1 w - - 6 11",
      "r2q1rk1/ppp2ppp/1nnb4/1B2p3/6b1/2PP1N1P/PP1N1PP1/R1BQR1K1 b - - 0 11",
      "r2q1rk1/ppp2ppp/1nnb4/1B2p2b/8/2PP1N1P/PP1N1PP1/R1BQR1K1 w - - 1 12",
      "r2q1rk1/ppp2ppp/1nnb4/1B2p2b/4N3/2PP1N1P/PP3PP1/R1BQR1K1 b - - 2 12",
      "r2qr1k1/ppp2ppp/1nnb4/1B2p2b/4N3/2PP1N1P/PP3PP1/R1BQR1K1 w - - 3 13",
      "r2qr1k1/ppp2ppp/1nnb4/1B2p1Bb/4N3/2PP1N1P/PP3PP1/R2QR1K1 b - - 4 13",
      "r2qr1k1/ppp3pp/1nnb1p2/1B2p1Bb/4N3/2PP1N1P/PP3PP1/R2QR1K1 w - - 0 14",
      "r2qr1k1/ppp3pp/1nnb1p2/1B2p2b/4N3/2PPBN1P/PP3PP1/R2QR1K1 b - - 1 14",
      "r2qr1k1/1pp3pp/pnnb1p2/1B2p2b/4N3/2PPBN1P/PP3PP1/R2QR1K1 w - - 0 15",
      "r2qr1k1/1pp3pp/pnBb1p2/4p2b/4N3/2PPBN1P/PP3PP1/R2QR1K1 b - - 0 15",
      "r2qr1k1/2p3pp/pnpb1p2/4p2b/4N3/2PPBN1P/PP3PP1/R2QR1K1 w - - 0 16",
      "r2qr1k1/2p3pp/pnpb1p2/4p2b/8/2PPBNNP/PP3PP1/R2QR1K1 b - - 1 16",
      "r2qr1k1/2p2bpp/pnpb1p2/4p3/8/2PPBNNP/PP3PP1/R2QR1K1 w - - 2 17",
      "r2qr1k1/2p2bpp/pnpb1p2/4p3/2P5/3PBNNP/PP3PP1/R2QR1K1 b - - 0 17",
      "r2qr1k1/2p2bpp/pnp2p2/4p3/1bP5/3PBNNP/PP3PP1/R2QR1K1 w - - 1 18",
      "r2qr1k1/2p2bpp/pnp2p2/4p3/1bP5/3PBNNP/PP2RPP1/R2Q2K1 b - - 2 18",
      "r2qrbk1/2p2bpp/pnp2p2/4p3/2P5/3PBNNP/PP2RPP1/R2Q2K1 w - - 3 19",
      "r2qrbk1/2p2bpp/pnp2p2/4p3/2P5/1P1PBNNP/P3RPP1/R2Q2K1 b - - 0 19",
      "r2qrbk1/2p2bpp/pn3p2/2p1p3/2P5/1P1PBNNP/P3RPP1/R2Q2K1 w - - 0 20",
      "r2qrbk1/2p2bpp/pn3p2/2p1p3/2P5/1P1PBNNP/P3RPP1/R3Q1K1 b - - 1 20",
      "r2qrbk1/2p2bpp/1n3p2/p1p1p3/2P5/1P1PBNNP/P3RPP1/R3Q1K1 w - - 0 21",
      "r2qrbk1/2p2bpp/1n3p2/p1p1p3/2P5/1P1PBNNP/P3RPP1/3RQ1K1 b - - 1 21",
      "r2qrbk1/2p2bpp/1n3p2/2p1p3/p1P5/1P1PBNNP/P3RPP1/3RQ1K1 w - - 0 22",
      "r2qrbk1/2p2bpp/1n3p2/2p1p3/p1P5/1P1PB1NP/P2NRPP1/3RQ1K1 b - - 1 22",
      "r3rbk1/2pq1bpp/1n3p2/2p1p3/p1P5/1P1PB1NP/P2NRPP1/3RQ1K1 w - - 2 23",
      "r3rbk1/2pq1bpp/1n3p2/2p1p3/p1P5/1P1PB1NP/P3RPP1/1N1RQ1K1 b - - 3 23",
      "r3rbk1/2pq1bpp/1n3p2/2p1p3/2P5/1p1PB1NP/P3RPP1/1N1RQ1K1 w - - 0 24",
      "r3rbk1/2pq1bpp/1n3p2/2p1p3/2P5/1P1PB1NP/4RPP1/1N1RQ1K1 b - - 0 24",
      "r3rbk1/2pq2pp/1n3pb1/2p1p3/2P5/1P1PB1NP/4RPP1/1N1RQ1K1 w - - 1 25",
      "r3rbk1/2pq2pp/1n3pb1/2p1p3/2P5/1P1PBPNP/4R1P1/1N1RQ1K1 b - - 0 25",
      "3rrbk1/2pq2pp/1n3pb1/2p1p3/2P5/1P1PBPNP/4R1P1/1N1RQ1K1 w - - 1 26",
      "3rrbk1/2pq2pp/1n3pb1/2p1p3/2P5/1P1PBPNP/4RQP1/1N1R2K1 b - - 2 26",
      "3rrbk1/2p3pp/1nq2pb1/2p1p3/2P5/1P1PBPNP/4RQP1/1N1R2K1 w - - 3 27",
      "3rrbk1/2p3pp/1nq2pb1/2p1p3/2P5/1P1PBPNP/3R1QP1/1N1R2K1 b - - 4 27",
      "3rrbk1/2pn2pp/2q2pb1/2p1p3/2P5/1P1PBPNP/3R1QP1/1N1R2K1 w - - 5 28",
      "3rrbk1/2pn2pp/2q2pb1/2p1p3/2P5/1PNPBPNP/3R1QP1/3R2K1 b - - 6 28",
      "3rrbk1/2pn2p1/2q2pbp/2p1p3/2P5/1PNPBPNP/3R1QP1/3R2K1 w - - 0 29",
      "3rrbk1/2pn2p1/2q2pbp/2p1p3/2P5/1PNPBPNP/3R1QP1/3R3K b - - 1 29",
      "3rrb1k/2pn2p1/2q2pbp/2p1p3/2P5/1PNPBPNP/3R1QP1/3R3K w - - 2 30",
      "3rrb1k/2pn2p1/2q2pbp/1Np1p3/2P5/1P1PBPNP/3R1QP1/3R3K b - - 3 30",
      "3rrb1k/2pn2pb/2q2p1p/1Np1p3/2P5/1P1PBPNP/3R1QP1/3R3K w - - 4 31",
      "3rrb1k/2pn2pb/2q2p1p/1Np1p3/2P5/1P1PBPNP/R4QP1/3R3K b - - 5 31",
      "3rrb1k/2pn2pb/2q4p/1Np1pp2/2P5/1P1PBPNP/R4QP1/3R3K w - - 0 32",
      "3rrb1k/2pn2pb/2q4p/1Np1pp2/2P5/1P1P1PNP/R4QP1/2BR3K b - - 1 32",
      "3rrb1k/2p3pb/2q2n1p/1Np1pp2/2P5/1P1P1PNP/R4QP1/2BR3K w - - 2 33",
      "3rrb1k/2p3pb/2q2n1p/2p1pp2/2P5/1PNP1PNP/R4QP1/2BR3K b - - 3 33",
      "3rrb1k/1qp3pb/5n1p/2p1pp2/2P5/1PNP1PNP/R4QP1/2BR3K w - - 4 34",
      "3rrb1k/1qp3pb/5n1p/2p1pp2/2P5/1PNP1PNP/1R3QP1/2BR3K b - - 5 34",
      "3rrb1k/1qp4b/5n1p/2p1ppp1/2P5/1PNP1PNP/1R3QP1/2BR3K w - - 0 35",
      "3rrb1k/1qp4b/5n1p/2p1ppp1/2P5/1PNP1PNP/5QP1/1RBR3K b - - 1 35",
      "3rrb1k/2p4b/2q2n1p/2p1ppp1/2P5/1PNP1PNP/5QP1/1RBR3K w - - 2 36",
      "3rrb1k/2p4b/2q2n1p/2p1ppp1/2P5/1PNP1PNP/1B3QP1/1R1R3K b - - 3 36",
      "3rrbk1/2p4b/2q2n1p/2p1ppp1/2P5/1PNP1PNP/1B3QP1/1R1R3K w - - 4 37",
      "3rrbk1/2p4b/2q2n1p/2p1ppp1/2P5/1PNP1P1P/1B3QP1/1R1R1N1K b - - 5 37",
      "3rrbk1/2p4b/2q4p/2p1pppn/2P5/1PNP1P1P/1B3QP1/1R1R1N1K w - - 6 38",
      "3rrbk1/2p4b/2q4p/2pNpppn/2P5/1P1P1P1P/1B3QP1/1R1R1N1K b - - 7 38",
      "3rrbk1/2p4b/3q3p/2pNpppn/2P5/1P1P1P1P/1B3QP1/1R1R1N1K w - - 8 39",
      "3rrbk1/2p4b/3q3p/2pNpppn/2P5/1P1P1PNP/1B3QP1/1R1R3K b - - 9 39",
      "3rrbk1/7b/2pq3p/2pNpppn/2P5/1P1P1PNP/1B3QP1/1R1R3K w - - 0 40",
      "3rrbk1/7b/2pq3p/2p1pppn/2P5/1PNP1PNP/1B3QP1/1R1R3K b - - 1 40",
      "3rrbk1/7b/2pq3p/2p1ppp1/2P2n2/1PNP1PNP/1B3QP1/1R1R3K w - - 2 41",
      "3rrbk1/7b/2pq3p/2p1ppp1/2P2n2/1PNP1PNP/1B4P1/1R1R1Q1K b - - 3 41",
      "3rrbk1/7b/2pq3p/2p1ppp1/2P5/1PNn1PNP/1B4P1/1R1R1Q1K w - - 0 42",
      "3rrbk1/7b/2pq3p/2p1ppp1/2P5/1P1n1PNP/1B2N1P1/1R1R1Q1K b - - 1 42",
      "3rrbk1/7b/2p1q2p/2p1ppp1/2P5/1P1n1PNP/1B2N1P1/1R1R1Q1K w - - 2 43",
      "3rrbk1/7b/2p1q2p/2p1ppp1/2P5/1PBn1PNP/4N1P1/1R1R1Q1K b - - 3 43",
      "4rbk1/7b/2prq2p/2p1ppp1/2P5/1PBn1PNP/4N1P1/1R1R1Q1K w - - 4 44",
      "4rbk1/7b/2prq2p/2p1ppp1/2P5/1PBn1PNP/3RN1P1/1R3Q1K b - - 5 44",
      "3r1bk1/7b/2prq2p/2p1ppp1/2P5/1PBn1PNP/3RN1P1/1R3Q1K w - - 6 45",
      "3r1bk1/7b/2prq2p/2p1ppp1/2P5/1PBn1PNP/3RN1P1/3R1Q1K b - - 7 45",
      "3r1bk1/8/2prq1bp/2p1ppp1/2P5/1PBn1PNP/3RN1P1/3R1Q1K w - - 8 46",
      "3r1bk1/8/2prq1bp/2p1ppp1/2P5/1PBn1PNP/3R2P1/2NR1Q1K b - - 9 46",
      "3r1bk1/8/2prq1bp/2p1ppp1/2P5/1PB2PNP/3R2P1/2nR1Q1K w - - 0 47",
      "3r1bk1/8/2pRq1bp/2p1ppp1/2P5/1PB2PNP/6P1/2nR1Q1K b - - 0 47",
      "3r2k1/8/2pbq1bp/2p1ppp1/2P5/1PB2PNP/6P1/2nR1Q1K w - - 0 48",
      "3r2k1/8/2pbq1bp/2p1ppp1/2P5/1PB2PNP/6P1/2R2Q1K b - - 0 48",
      "1r4k1/8/2pbq1bp/2p1ppp1/2P5/1PB2PNP/6P1/2R2Q1K w - - 1 49",
      "1r4k1/8/2pbq1bp/2p1ppp1/2P5/1PB2PNP/6P1/R4Q1K b - - 2 49",
      "6k1/8/2pbq1bp/2p1ppp1/2P5/1rB2PNP/6P1/R4Q1K w - - 0 50",
      "R5k1/8/2pbq1bp/2p1ppp1/2P5/1rB2PNP/6P1/5Q1K b - - 1 50",
      "Rr4k1/8/2pbq1bp/2p1ppp1/2P5/2B2PNP/6P1/5Q1K w - - 2 51",
      "1r4k1/8/R1pbq1bp/2p1ppp1/2P5/2B2PNP/6P1/5Q1K b - - 3 51",
      "1r3bk1/8/R1p1q1bp/2p1ppp1/2P5/2B2PNP/6P1/5Q1K w - - 4 52",
      "1r3bk1/8/R1p1q1bp/2p1ppp1/2P5/2B2PNP/4Q1P1/7K b - - 5 52",
      "1r4k1/6b1/R1p1q1bp/2p1ppp1/2P5/2B2PNP/4Q1P1/7K w - - 6 53",
      "1r4k1/R5b1/2p1q1bp/2p1ppp1/2P5/2B2PNP/4Q1P1/7K b - - 7 53",
      "4r1k1/R5b1/2p1q1bp/2p1ppp1/2P5/2B2PNP/4Q1P1/7K w - - 8 54",
      "4r1k1/R5b1/2p1q1bp/2p1ppp1/2P4P/2B2PN1/4Q1P1/7K b - - 0 54",
      "4r1k1/R5b1/2p1q1bp/2p1pp2/2P4p/2B2PN1/4Q1P1/7K w - - 0 55",
      "4r1k1/R5b1/2p1q1bp/2p1pp2/2P4p/2B2P2/4Q1P1/5N1K b - - 1 55",
      "4r1k1/R5b1/2p1q1bp/2p1p3/2P2p1p/2B2P2/4Q1P1/5N1K w - - 0 56",
      "4r1k1/R5b1/2p1q1bp/2p1p3/2P2p1p/2B2P2/3NQ1P1/7K b - - 1 56",
      "6k1/R3r1b1/2p1q1bp/2p1p3/2P2p1p/2B2P2/3NQ1P1/7K w - - 2 57",
      "6k1/4R1b1/2p1q1bp/2p1p3/2P2p1p/2B2P2/3NQ1P1/7K b - - 0 57",
      "6k1/4q1b1/2p3bp/2p1p3/2P2p1p/2B2P2/3NQ1P1/7K w - - 0 58",
      "6k1/4q1b1/2p3bp/2p1p3/2P1Np1p/2B2P2/4Q1P1/7K b - - 1 58",
      "6k1/4qbb1/2p4p/2p1p3/2P1Np1p/2B2P2/4Q1P1/7K w - - 2 59",
      "6k1/4qbb1/2p4p/2p1p3/2P1Np1p/2B2P2/4Q1PK/8 b - - 3 59",
      "6k1/4qbb1/2p4p/2p1p3/2P1Np2/2B2P1p/4Q1PK/8 w - - 0 60",
      "6k1/4qbb1/2p4p/2p1p3/2P1Np2/2B2P1P/4Q2K/8 b - - 0 60",
      "6k1/5bb1/2p1q2p/2p1p3/2P1Np2/2B2P1P/4Q2K/8 w - - 1 61",
      "6k1/5bb1/2p1q2p/2p1p3/2P1Np2/2B2P1P/6QK/8 b - - 2 61",
      "8/5bbk/2p1q2p/2p1p3/2P1Np2/2B2P1P/6QK/8 w - - 3 62",
      "8/5bbk/2p1q2p/2p1p3/2P1Np2/2B2P1P/2Q4K/8 b - - 4 62",
      "7k/5bb1/2p1q2p/2p1p3/2P1Np2/2B2P1P/2Q4K/8 w - - 5 63",
      "7k/5bb1/2p1q2p/2p1p3/2P1Np2/2B2P1P/1Q5K/8 b - - 6 63",
      "8/5bbk/2p1q2p/2p1p3/2P1Np2/2B2P1P/1Q5K/8 w - - 7 64",
      "8/5bbk/2p1q2p/2p1p3/2P1Np2/2B2P1P/2Q4K/8 b - - 8 64",
      "8/5bbk/2p3qp/2p1p3/2P1Np2/2B2P1P/2Q4K/8 w - - 9 65",
      "8/5bbk/2p3qp/2p1p3/2P1Np2/2B2P1P/4Q2K/8 b - - 10 65",
      "8/6bk/2p1b1qp/2p1p3/2P1Np2/2B2P1P/4Q2K/8 w - - 11 66",
      "8/6bk/2p1b1qp/2p1p3/2P1Np2/2B2P1P/7K/5Q2 b - - 12 66",
      "8/6bk/2p3qp/2p1pb2/2P1Np2/2B2P1P/7K/5Q2 w - - 13 67",
      "8/6bk/2p3qp/2p1pb2/2P1Np2/2B2P1P/4Q2K/8 b - - 14 67",
      "8/6bk/2p4p/2p1pb1q/2P1Np2/2B2P1P/4Q2K/8 w - - 15 68",
      "8/6bk/2p4p/2p1pb1q/2P2p2/2B2P1P/4QN1K/8 b - - 16 68",
      "8/6bk/2p4p/2p1pb2/2P2p1q/2B2P1P/4QN1K/8 w - - 17 69",
      "8/6bk/2p4p/2p1pb2/2P1Np1q/2B2P1P/4Q2K/8 b - - 18 69",
      "8/6bk/2p4p/2p1pb2/2P1Np2/2B2P1q/4Q2K/8 w - - 0 70",
      "8/6bk/2p4p/2p1pb2/2P1Np2/2B2P1q/4Q3/6K1 b - - 1 70",
      "8/6bk/2p4p/2p1pb1q/2P1Np2/2B2P2/4Q3/6K1 w - - 2 71",
      "8/6bk/2p4p/2p1pb1q/2P1Np2/5P2/4Q3/4B1K1 b - - 3 71",
      "8/6bk/2p4p/2p1p2q/2P1bp2/5P2/4Q3/4B1K1 w - - 0 72",
      "8/6bk/2p4p/2p1p2q/2P1Qp2/5P2/8/4B1K1 b - - 0 72",
      "8/6bk/2p3qp/2p1p3/2P1Qp2/5P2/8/4B1K1 w - - 1 73",
      "8/6bk/2p3qp/2p1p3/2P1Qp2/5P2/7K/4B3 b - - 2 73",
      "8/6bk/2p4p/2p1p3/2P1qp2/5P2/7K/4B3 w - - 0 74",
      "8/6bk/2p4p/2p1p3/2P1Pp2/8/7K/4B3 b - - 0 74",
      "8/6b1/2p3kp/2p1p3/2P1Pp2/8/7K/4B3 w - - 1 75",
      "8/6b1/2p3kp/2p1p3/2P1Pp2/7K/8/4B3 b - - 2 75",
      "8/6b1/2p4p/2p1p2k/2P1Pp2/7K/8/4B3 w - - 3 76",
      "8/6b1/2p4p/2p1p2k/2P1Pp1B/7K/8/8 b - - 4 76",
      "8/6b1/2p4p/2p1p2k/2P1P2B/5p1K/8/8 w - - 0 77",
      "8/6b1/2p4p/2p1p2k/2P1P3/5p1K/5B2/8 b - - 1 77",
      "8/8/2p2b1p/2p1p2k/2P1P3/5p1K/5B2/8 w - - 2 78",
      "8/8/2p2b1p/2p1p2k/2P1P3/5p1K/8/4B3 b - - 3 78",
      "8/8/2p4p/2p1p1bk/2P1P3/5p1K/8/4B3 w - - 4 79",
      "8/8/2p4p/2p1p1bk/2P1P3/5p1K/5B2/8 b - - 5 79",
      "8/4b3/2p4p/2p1p2k/2P1P3/5p1K/5B2/8 w - - 6 80",
      "8/4b3/2p4p/2p1p2k/2P1P3/5p1K/8/4B3 b - - 7 80",
      "3b4/8/2p4p/2p1p2k/2P1P3/5p1K/8/4B3 w - - 8 81",
      "3b4/8/2p4p/2p1p2k/2P1P3/5pBK/8/8 b - - 9 81",
      "3b4/8/2p4p/2p1p1k1/2P1P3/5pBK/8/8 w - - 10 82",
      "3b4/8/2p4p/2p1B1k1/2P1P3/5p1K/8/8 b - - 0 82",
      "8/8/2p2b1p/2p1B1k1/2P1P3/5p1K/8/8 w - - 1 83",
      "8/8/2pB1b1p/2p3k1/2P1P3/5p1K/8/8 b - - 2 83",
      "8/8/2pB1b1p/2p3k1/2P1P3/7K/5p2/8 w - - 0 84",
      "8/8/2pB1b1p/2p3k1/2P1P3/8/5pK1/8 b - - 1 84",
      "8/8/2pB3p/2p3k1/2PbP3/8/5pK1/8 w - - 2 85",
      "8/8/2pB3p/2p3k1/2PbP3/8/5p2/5K2 b - - 3 85",
      "8/8/2pB3p/2p5/2PbP1k1/8/5p2/5K2 w - - 4 86",
      "8/8/2pB3p/2p5/2PbP1k1/8/4Kp2/8 b - - 5 86",
      "8/8/2pB4/2p4p/2PbP1k1/8/4Kp2/8 w - - 0 87",
      "8/8/2pB4/2p4p/2PbP1k1/8/5p2/5K2 b - - 1 87",
      "8/8/2pB4/2p5/2PbP1kp/8/5p2/5K2 w - - 0 88",
      "8/8/2p5/2p5/2PbP1kp/8/5p1B/5K2 b - - 1 88",
      "8/8/2p5/2p5/2PbP1k1/7p/5p1B/5K2 w - - 0 89",
      "8/8/2p5/2p5/2PbP1k1/7p/4Kp1B/8 b - - 1 89",
      "8/8/2p5/2p5/2P1P1k1/4b2p/4Kp1B/8 w - - 2 90",
    ]
    for (index, history) in chess.getMoveHistory().enumerated() {
      XCTAssertEqual(history.fen, fens13[index], "Sinquefield(g14): FEN move (index)")
    }

    pgn = pgns.removeFirst()
    chess = try pgn.validate()
    XCTAssertEqual(chess.getTag("Event")?.value, "Sinquefield Cup", "Sinquefield(g15): event")
    XCTAssertEqual(chess.getTag("White")?.value, "Karjakin, Sergey", "Sinquefield(g15): white")
    XCTAssertEqual(chess.getTag("Black")?.value, "Anand, Viswanathan", "Sinquefield(g15): black")
    XCTAssertEqual(chess.getMoveCount(), 38, "Sinquefield(g15): move count")
    XCTAssertEqual(
      chess.getMoveHistory().map { $0.pcn }.joined(separator: ","),
      "e2e4,e7e5,g1f3,b8c6,f1b5,a7a6,b5a4,g8f6,e1g1,f6e4,d2d4,b7b5,a4b3,d7d5,d4e5,c8e6,c1e3,f8e7,c2c3,e8g8,b1d2,e6g4,d2e4,d5e4,d1d5,d8d5,b3d5,e4f3,d5c6,f3g2,f1c1,a8b8,a2a4,b5b4,c3b4,b8b4,c6g2,c7c5,e3c5,e7c5,c1c5,b4b2,g2f1,g4e2,a1c1,g7g6,c1c2,b2c2,c5c2,e2f1,g1f1,f8e8,c2c5,f7f6,c5c6,e8e5,c6a6,g8g7,a6a7,g7h6,a7c7,e5e4,c7c6,e4a4,c6f6,a4h4,f1g2,h4g4,g2f1,g4h4,f1g2,h4g4,g2f1,g4h4",
      "Sinquefield(g15): PCN move history"
    )
    let fens14 = [
      "rnbqkbnr/pppppppp/8/8/4P3/8/PPPP1PPP/RNBQKBNR b KQkq - 0 1",
      "rnbqkbnr/pppp1ppp/8/4p3/4P3/8/PPPP1PPP/RNBQKBNR w KQkq - 0 2",
      "rnbqkbnr/pppp1ppp/8/4p3/4P3/5N2/PPPP1PPP/RNBQKB1R b KQkq - 1 2",
      "r1bqkbnr/pppp1ppp/2n5/4p3/4P3/5N2/PPPP1PPP/RNBQKB1R w KQkq - 2 3",
      "r1bqkbnr/pppp1ppp/2n5/1B2p3/4P3/5N2/PPPP1PPP/RNBQK2R b KQkq - 3 3",
      "r1bqkbnr/1ppp1ppp/p1n5/1B2p3/4P3/5N2/PPPP1PPP/RNBQK2R w KQkq - 0 4",
      "r1bqkbnr/1ppp1ppp/p1n5/4p3/B3P3/5N2/PPPP1PPP/RNBQK2R b KQkq - 1 4",
      "r1bqkb1r/1ppp1ppp/p1n2n2/4p3/B3P3/5N2/PPPP1PPP/RNBQK2R w KQkq - 2 5",
      "r1bqkb1r/1ppp1ppp/p1n2n2/4p3/B3P3/5N2/PPPP1PPP/RNBQ1RK1 b kq - 3 5",
      "r1bqkb1r/1ppp1ppp/p1n5/4p3/B3n3/5N2/PPPP1PPP/RNBQ1RK1 w kq - 0 6",
      "r1bqkb1r/1ppp1ppp/p1n5/4p3/B2Pn3/5N2/PPP2PPP/RNBQ1RK1 b kq - 0 6",
      "r1bqkb1r/2pp1ppp/p1n5/1p2p3/B2Pn3/5N2/PPP2PPP/RNBQ1RK1 w kq - 0 7",
      "r1bqkb1r/2pp1ppp/p1n5/1p2p3/3Pn3/1B3N2/PPP2PPP/RNBQ1RK1 b kq - 1 7",
      "r1bqkb1r/2p2ppp/p1n5/1p1pp3/3Pn3/1B3N2/PPP2PPP/RNBQ1RK1 w kq - 0 8",
      "r1bqkb1r/2p2ppp/p1n5/1p1pP3/4n3/1B3N2/PPP2PPP/RNBQ1RK1 b kq - 0 8",
      "r2qkb1r/2p2ppp/p1n1b3/1p1pP3/4n3/1B3N2/PPP2PPP/RNBQ1RK1 w kq - 1 9",
      "r2qkb1r/2p2ppp/p1n1b3/1p1pP3/4n3/1B2BN2/PPP2PPP/RN1Q1RK1 b kq - 2 9",
      "r2qk2r/2p1bppp/p1n1b3/1p1pP3/4n3/1B2BN2/PPP2PPP/RN1Q1RK1 w kq - 3 10",
      "r2qk2r/2p1bppp/p1n1b3/1p1pP3/4n3/1BP1BN2/PP3PPP/RN1Q1RK1 b kq - 0 10",
      "r2q1rk1/2p1bppp/p1n1b3/1p1pP3/4n3/1BP1BN2/PP3PPP/RN1Q1RK1 w - - 1 11",
      "r2q1rk1/2p1bppp/p1n1b3/1p1pP3/4n3/1BP1BN2/PP1N1PPP/R2Q1RK1 b - - 2 11",
      "r2q1rk1/2p1bppp/p1n5/1p1pP3/4n1b1/1BP1BN2/PP1N1PPP/R2Q1RK1 w - - 3 12",
      "r2q1rk1/2p1bppp/p1n5/1p1pP3/4N1b1/1BP1BN2/PP3PPP/R2Q1RK1 b - - 0 12",
      "r2q1rk1/2p1bppp/p1n5/1p2P3/4p1b1/1BP1BN2/PP3PPP/R2Q1RK1 w - - 0 13",
      "r2q1rk1/2p1bppp/p1n5/1p1QP3/4p1b1/1BP1BN2/PP3PPP/R4RK1 b - - 1 13",
      "r4rk1/2p1bppp/p1n5/1p1qP3/4p1b1/1BP1BN2/PP3PPP/R4RK1 w - - 0 14",
      "r4rk1/2p1bppp/p1n5/1p1BP3/4p1b1/2P1BN2/PP3PPP/R4RK1 b - - 0 14",
      "r4rk1/2p1bppp/p1n5/1p1BP3/6b1/2P1Bp2/PP3PPP/R4RK1 w - - 0 15",
      "r4rk1/2p1bppp/p1B5/1p2P3/6b1/2P1Bp2/PP3PPP/R4RK1 b - - 0 15",
      "r4rk1/2p1bppp/p1B5/1p2P3/6b1/2P1B3/PP3PpP/R4RK1 w - - 0 16",
      "r4rk1/2p1bppp/p1B5/1p2P3/6b1/2P1B3/PP3PpP/R1R3K1 b - - 1 16",
      "1r3rk1/2p1bppp/p1B5/1p2P3/6b1/2P1B3/PP3PpP/R1R3K1 w - - 2 17",
      "1r3rk1/2p1bppp/p1B5/1p2P3/P5b1/2P1B3/1P3PpP/R1R3K1 b - - 0 17",
      "1r3rk1/2p1bppp/p1B5/4P3/Pp4b1/2P1B3/1P3PpP/R1R3K1 w - - 0 18",
      "1r3rk1/2p1bppp/p1B5/4P3/PP4b1/4B3/1P3PpP/R1R3K1 b - - 0 18",
      "5rk1/2p1bppp/p1B5/4P3/Pr4b1/4B3/1P3PpP/R1R3K1 w - - 0 19",
      "5rk1/2p1bppp/p7/4P3/Pr4b1/4B3/1P3PBP/R1R3K1 b - - 0 19",
      "5rk1/4bppp/p7/2p1P3/Pr4b1/4B3/1P3PBP/R1R3K1 w - - 0 20",
      "5rk1/4bppp/p7/2B1P3/Pr4b1/8/1P3PBP/R1R3K1 b - - 0 20",
      "5rk1/5ppp/p7/2b1P3/Pr4b1/8/1P3PBP/R1R3K1 w - - 0 21",
      "5rk1/5ppp/p7/2R1P3/Pr4b1/8/1P3PBP/R5K1 b - - 0 21",
      "5rk1/5ppp/p7/2R1P3/P5b1/8/1r3PBP/R5K1 w - - 0 22",
      "5rk1/5ppp/p7/2R1P3/P5b1/8/1r3P1P/R4BK1 b - - 1 22",
      "5rk1/5ppp/p7/2R1P3/P7/8/1r2bP1P/R4BK1 w - - 2 23",
      "5rk1/5ppp/p7/2R1P3/P7/8/1r2bP1P/2R2BK1 b - - 3 23",
      "5rk1/5p1p/p5p1/2R1P3/P7/8/1r2bP1P/2R2BK1 w - - 0 24",
      "5rk1/5p1p/p5p1/2R1P3/P7/8/1rR1bP1P/5BK1 b - - 1 24",
      "5rk1/5p1p/p5p1/2R1P3/P7/8/2r1bP1P/5BK1 w - - 0 25",
      "5rk1/5p1p/p5p1/4P3/P7/8/2R1bP1P/5BK1 b - - 0 25",
      "5rk1/5p1p/p5p1/4P3/P7/8/2R2P1P/5bK1 w - - 0 26",
      "5rk1/5p1p/p5p1/4P3/P7/8/2R2P1P/5K2 b - - 0 26",
      "4r1k1/5p1p/p5p1/4P3/P7/8/2R2P1P/5K2 w - - 1 27",
      "4r1k1/5p1p/p5p1/2R1P3/P7/8/5P1P/5K2 b - - 2 27",
      "4r1k1/7p/p4pp1/2R1P3/P7/8/5P1P/5K2 w - - 0 28",
      "4r1k1/7p/p1R2pp1/4P3/P7/8/5P1P/5K2 b - - 1 28",
      "6k1/7p/p1R2pp1/4r3/P7/8/5P1P/5K2 w - - 0 29",
      "6k1/7p/R4pp1/4r3/P7/8/5P1P/5K2 b - - 0 29",
      "8/6kp/R4pp1/4r3/P7/8/5P1P/5K2 w - - 1 30",
      "8/R5kp/5pp1/4r3/P7/8/5P1P/5K2 b - - 2 30",
      "8/R6p/5ppk/4r3/P7/8/5P1P/5K2 w - - 3 31",
      "8/2R4p/5ppk/4r3/P7/8/5P1P/5K2 b - - 4 31",
      "8/2R4p/5ppk/8/P3r3/8/5P1P/5K2 w - - 5 32",
      "8/7p/2R2ppk/8/P3r3/8/5P1P/5K2 b - - 6 32",
      "8/7p/2R2ppk/8/r7/8/5P1P/5K2 w - - 0 33",
      "8/7p/5Rpk/8/r7/8/5P1P/5K2 b - - 0 33",
      "8/7p/5Rpk/8/7r/8/5P1P/5K2 w - - 1 34",
      "8/7p/5Rpk/8/7r/8/5PKP/8 b - - 2 34",
      "8/7p/5Rpk/8/6r1/8/5PKP/8 w - - 3 35",
      "8/7p/5Rpk/8/6r1/8/5P1P/5K2 b - - 4 35",
      "8/7p/5Rpk/8/7r/8/5P1P/5K2 w - - 5 36",
      "8/7p/5Rpk/8/7r/8/5PKP/8 b - - 6 36",
      "8/7p/5Rpk/8/6r1/8/5PKP/8 w - - 7 37",
      "8/7p/5Rpk/8/6r1/8/5P1P/5K2 b - - 8 37",
      "8/7p/5Rpk/8/7r/8/5P1P/5K2 w - - 9 38",
    ]
    for (index, history) in chess.getMoveHistory().enumerated() {
      XCTAssertEqual(history.fen, fens14[index], "Sinquefield(g15): FEN move (index)")
    }

    pgn = pgns.removeFirst()
    chess = try pgn.validate()
    XCTAssertEqual(chess.getTag("Event")?.value, "Sinquefield Cup", "Sinquefield(g16): event")
    XCTAssertEqual(chess.getTag("White")?.value, "Anand, Viswanathan", "Sinquefield(g16): white")
    XCTAssertEqual(chess.getTag("Black")?.value, "Carlsen, Magnus", "Sinquefield(g16): black")
    XCTAssertEqual(chess.getMoveCount(), 54, "Sinquefield(g16): move count")
    XCTAssertEqual(
      chess.getMoveHistory().map { $0.pcn }.joined(separator: ","),
      "e2e4,c7c5,g1f3,b8c6,f1b5,g7g6,b5c6,d7c6,d2d3,f8g7,h2h3,g8f6,b1c3,e8g8,c1e3,b7b6,d1d2,e7e5,e3h6,d8d6,h6g7,g8g7,a2a4,f6e8,f3h2,e8c7,h2g4,f7f6,f2f3,c7e6,h3h4,e6d4,h4h5,g6g5,g4e3,c8e6,c3e2,g7h8,e2g3,a8d8,e1f2,d6e7,d2d1,c5c4,d3c4,f6f5,e4f5,d4f5,g3f5,e6f5,d1e2,g5g4,f2g1,g4f3,e2f3,f5c2,f3g3,c2d3,h1h4,d8d4,h4g4,d4g4,e3g4,e5e4,g3e5,e7e5,g4e5,h8g7,a1d1,f8d8,e5c6,d8e8,g1f2,e4e3,f2e1,d3c4,d1d4,c4f7,g2g4,a7a5,b2b4,a5b4,d4b4,f7e6,g4g5,e6f7,h5h6,g7g6,b4b5,f7a2,b5e5,e8e5,c6e5,g6g5,e5d7,a2b3,d7b6,b3a4,b6a4,g5h6,a4c3,e3e2,c3e2,h6g5,e2g3,h7h5,g3h5",
      "Sinquefield(g16): PCN move history"
    )
    let fens15 = [
      "rnbqkbnr/pppppppp/8/8/4P3/8/PPPP1PPP/RNBQKBNR b KQkq - 0 1",
      "rnbqkbnr/pp1ppppp/8/2p5/4P3/8/PPPP1PPP/RNBQKBNR w KQkq - 0 2",
      "rnbqkbnr/pp1ppppp/8/2p5/4P3/5N2/PPPP1PPP/RNBQKB1R b KQkq - 1 2",
      "r1bqkbnr/pp1ppppp/2n5/2p5/4P3/5N2/PPPP1PPP/RNBQKB1R w KQkq - 2 3",
      "r1bqkbnr/pp1ppppp/2n5/1Bp5/4P3/5N2/PPPP1PPP/RNBQK2R b KQkq - 3 3",
      "r1bqkbnr/pp1ppp1p/2n3p1/1Bp5/4P3/5N2/PPPP1PPP/RNBQK2R w KQkq - 0 4",
      "r1bqkbnr/pp1ppp1p/2B3p1/2p5/4P3/5N2/PPPP1PPP/RNBQK2R b KQkq - 0 4",
      "r1bqkbnr/pp2pp1p/2p3p1/2p5/4P3/5N2/PPPP1PPP/RNBQK2R w KQkq - 0 5",
      "r1bqkbnr/pp2pp1p/2p3p1/2p5/4P3/3P1N2/PPP2PPP/RNBQK2R b KQkq - 0 5",
      "r1bqk1nr/pp2ppbp/2p3p1/2p5/4P3/3P1N2/PPP2PPP/RNBQK2R w KQkq - 1 6",
      "r1bqk1nr/pp2ppbp/2p3p1/2p5/4P3/3P1N1P/PPP2PP1/RNBQK2R b KQkq - 0 6",
      "r1bqk2r/pp2ppbp/2p2np1/2p5/4P3/3P1N1P/PPP2PP1/RNBQK2R w KQkq - 1 7",
      "r1bqk2r/pp2ppbp/2p2np1/2p5/4P3/2NP1N1P/PPP2PP1/R1BQK2R b KQkq - 2 7",
      "r1bq1rk1/pp2ppbp/2p2np1/2p5/4P3/2NP1N1P/PPP2PP1/R1BQK2R w KQ - 3 8",
      "r1bq1rk1/pp2ppbp/2p2np1/2p5/4P3/2NPBN1P/PPP2PP1/R2QK2R b KQ - 4 8",
      "r1bq1rk1/p3ppbp/1pp2np1/2p5/4P3/2NPBN1P/PPP2PP1/R2QK2R w KQ - 0 9",
      "r1bq1rk1/p3ppbp/1pp2np1/2p5/4P3/2NPBN1P/PPPQ1PP1/R3K2R b KQ - 1 9",
      "r1bq1rk1/p4pbp/1pp2np1/2p1p3/4P3/2NPBN1P/PPPQ1PP1/R3K2R w KQ - 0 10",
      "r1bq1rk1/p4pbp/1pp2npB/2p1p3/4P3/2NP1N1P/PPPQ1PP1/R3K2R b KQ - 1 10",
      "r1b2rk1/p4pbp/1ppq1npB/2p1p3/4P3/2NP1N1P/PPPQ1PP1/R3K2R w KQ - 2 11",
      "r1b2rk1/p4pBp/1ppq1np1/2p1p3/4P3/2NP1N1P/PPPQ1PP1/R3K2R b KQ - 0 11",
      "r1b2r2/p4pkp/1ppq1np1/2p1p3/4P3/2NP1N1P/PPPQ1PP1/R3K2R w KQ - 0 12",
      "r1b2r2/p4pkp/1ppq1np1/2p1p3/P3P3/2NP1N1P/1PPQ1PP1/R3K2R b KQ - 0 12",
      "r1b1nr2/p4pkp/1ppq2p1/2p1p3/P3P3/2NP1N1P/1PPQ1PP1/R3K2R w KQ - 1 13",
      "r1b1nr2/p4pkp/1ppq2p1/2p1p3/P3P3/2NP3P/1PPQ1PPN/R3K2R b KQ - 2 13",
      "r1b2r2/p1n2pkp/1ppq2p1/2p1p3/P3P3/2NP3P/1PPQ1PPN/R3K2R w KQ - 3 14",
      "r1b2r2/p1n2pkp/1ppq2p1/2p1p3/P3P1N1/2NP3P/1PPQ1PP1/R3K2R b KQ - 4 14",
      "r1b2r2/p1n3kp/1ppq1pp1/2p1p3/P3P1N1/2NP3P/1PPQ1PP1/R3K2R w KQ - 0 15",
      "r1b2r2/p1n3kp/1ppq1pp1/2p1p3/P3P1N1/2NP1P1P/1PPQ2P1/R3K2R b KQ - 0 15",
      "r1b2r2/p5kp/1ppqnpp1/2p1p3/P3P1N1/2NP1P1P/1PPQ2P1/R3K2R w KQ - 1 16",
      "r1b2r2/p5kp/1ppqnpp1/2p1p3/P3P1NP/2NP1P2/1PPQ2P1/R3K2R b KQ - 0 16",
      "r1b2r2/p5kp/1ppq1pp1/2p1p3/P2nP1NP/2NP1P2/1PPQ2P1/R3K2R w KQ - 1 17",
      "r1b2r2/p5kp/1ppq1pp1/2p1p2P/P2nP1N1/2NP1P2/1PPQ2P1/R3K2R b KQ - 0 17",
      "r1b2r2/p5kp/1ppq1p2/2p1p1pP/P2nP1N1/2NP1P2/1PPQ2P1/R3K2R w KQ - 0 18",
      "r1b2r2/p5kp/1ppq1p2/2p1p1pP/P2nP3/2NPNP2/1PPQ2P1/R3K2R b KQ - 1 18",
      "r4r2/p5kp/1ppqbp2/2p1p1pP/P2nP3/2NPNP2/1PPQ2P1/R3K2R w KQ - 2 19",
      "r4r2/p5kp/1ppqbp2/2p1p1pP/P2nP3/3PNP2/1PPQN1P1/R3K2R b KQ - 3 19",
      "r4r1k/p6p/1ppqbp2/2p1p1pP/P2nP3/3PNP2/1PPQN1P1/R3K2R w KQ - 4 20",
      "r4r1k/p6p/1ppqbp2/2p1p1pP/P2nP3/3PNPN1/1PPQ2P1/R3K2R b KQ - 5 20",
      "3r1r1k/p6p/1ppqbp2/2p1p1pP/P2nP3/3PNPN1/1PPQ2P1/R3K2R w KQ - 6 21",
      "3r1r1k/p6p/1ppqbp2/2p1p1pP/P2nP3/3PNPN1/1PPQ1KP1/R6R b - - 7 21",
      "3r1r1k/p3q2p/1pp1bp2/2p1p1pP/P2nP3/3PNPN1/1PPQ1KP1/R6R w - - 8 22",
      "3r1r1k/p3q2p/1pp1bp2/2p1p1pP/P2nP3/3PNPN1/1PP2KP1/R2Q3R b - - 9 22",
      "3r1r1k/p3q2p/1pp1bp2/4p1pP/P1pnP3/3PNPN1/1PP2KP1/R2Q3R w - - 0 23",
      "3r1r1k/p3q2p/1pp1bp2/4p1pP/P1PnP3/4NPN1/1PP2KP1/R2Q3R b - - 0 23",
      "3r1r1k/p3q2p/1pp1b3/4pppP/P1PnP3/4NPN1/1PP2KP1/R2Q3R w - - 0 24",
      "3r1r1k/p3q2p/1pp1b3/4pPpP/P1Pn4/4NPN1/1PP2KP1/R2Q3R b - - 0 24",
      "3r1r1k/p3q2p/1pp1b3/4pnpP/P1P5/4NPN1/1PP2KP1/R2Q3R w - - 0 25",
      "3r1r1k/p3q2p/1pp1b3/4pNpP/P1P5/4NP2/1PP2KP1/R2Q3R b - - 0 25",
      "3r1r1k/p3q2p/1pp5/4pbpP/P1P5/4NP2/1PP2KP1/R2Q3R w - - 0 26",
      "3r1r1k/p3q2p/1pp5/4pbpP/P1P5/4NP2/1PP1QKP1/R6R b - - 1 26",
      "3r1r1k/p3q2p/1pp5/4pb1P/P1P3p1/4NP2/1PP1QKP1/R6R w - - 0 27",
      "3r1r1k/p3q2p/1pp5/4pb1P/P1P3p1/4NP2/1PP1Q1P1/R5KR b - - 1 27",
      "3r1r1k/p3q2p/1pp5/4pb1P/P1P5/4Np2/1PP1Q1P1/R5KR w - - 0 28",
      "3r1r1k/p3q2p/1pp5/4pb1P/P1P5/4NQ2/1PP3P1/R5KR b - - 0 28",
      "3r1r1k/p3q2p/1pp5/4p2P/P1P5/4NQ2/1Pb3P1/R5KR w - - 0 29",
      "3r1r1k/p3q2p/1pp5/4p2P/P1P5/4N1Q1/1Pb3P1/R5KR b - - 1 29",
      "3r1r1k/p3q2p/1pp5/4p2P/P1P5/3bN1Q1/1P4P1/R5KR w - - 2 30",
      "3r1r1k/p3q2p/1pp5/4p2P/P1P4R/3bN1Q1/1P4P1/R5K1 b - - 3 30",
      "5r1k/p3q2p/1pp5/4p2P/P1Pr3R/3bN1Q1/1P4P1/R5K1 w - - 4 31",
      "5r1k/p3q2p/1pp5/4p2P/P1Pr2R1/3bN1Q1/1P4P1/R5K1 b - - 5 31",
      "5r1k/p3q2p/1pp5/4p2P/P1P3r1/3bN1Q1/1P4P1/R5K1 w - - 0 32",
      "5r1k/p3q2p/1pp5/4p2P/P1P3N1/3b2Q1/1P4P1/R5K1 b - - 0 32",
      "5r1k/p3q2p/1pp5/7P/P1P1p1N1/3b2Q1/1P4P1/R5K1 w - - 0 33",
      "5r1k/p3q2p/1pp5/4Q2P/P1P1p1N1/3b4/1P4P1/R5K1 b - - 1 33",
      "5r1k/p6p/1pp5/4q2P/P1P1p1N1/3b4/1P4P1/R5K1 w - - 0 34",
      "5r1k/p6p/1pp5/4N2P/P1P1p3/3b4/1P4P1/R5K1 b - - 0 34",
      "5r2/p5kp/1pp5/4N2P/P1P1p3/3b4/1P4P1/R5K1 w - - 1 35",
      "5r2/p5kp/1pp5/4N2P/P1P1p3/3b4/1P4P1/3R2K1 b - - 2 35",
      "3r4/p5kp/1pp5/4N2P/P1P1p3/3b4/1P4P1/3R2K1 w - - 3 36",
      "3r4/p5kp/1pN5/7P/P1P1p3/3b4/1P4P1/3R2K1 b - - 0 36",
      "4r3/p5kp/1pN5/7P/P1P1p3/3b4/1P4P1/3R2K1 w - - 1 37",
      "4r3/p5kp/1pN5/7P/P1P1p3/3b4/1P3KP1/3R4 b - - 2 37",
      "4r3/p5kp/1pN5/7P/P1P5/3bp3/1P3KP1/3R4 w - - 0 38",
      "4r3/p5kp/1pN5/7P/P1P5/3bp3/1P4P1/3RK3 b - - 1 38",
      "4r3/p5kp/1pN5/7P/P1b5/4p3/1P4P1/3RK3 w - - 0 39",
      "4r3/p5kp/1pN5/7P/P1bR4/4p3/1P4P1/4K3 b - - 1 39",
      "4r3/p4bkp/1pN5/7P/P2R4/4p3/1P4P1/4K3 w - - 2 40",
      "4r3/p4bkp/1pN5/7P/P2R2P1/4p3/1P6/4K3 b - - 0 40",
      "4r3/5bkp/1pN5/p6P/P2R2P1/4p3/1P6/4K3 w - - 0 41",
      "4r3/5bkp/1pN5/p6P/PP1R2P1/4p3/8/4K3 b - - 0 41",
      "4r3/5bkp/1pN5/7P/Pp1R2P1/4p3/8/4K3 w - - 0 42",
      "4r3/5bkp/1pN5/7P/PR4P1/4p3/8/4K3 b - - 0 42",
      "4r3/6kp/1pN1b3/7P/PR4P1/4p3/8/4K3 w - - 1 43",
      "4r3/6kp/1pN1b3/6PP/PR6/4p3/8/4K3 b - - 0 43",
      "4r3/5bkp/1pN5/6PP/PR6/4p3/8/4K3 w - - 1 44",
      "4r3/5bkp/1pN4P/6P1/PR6/4p3/8/4K3 b - - 0 44",
      "4r3/5b1p/1pN3kP/6P1/PR6/4p3/8/4K3 w - - 1 45",
      "4r3/5b1p/1pN3kP/1R4P1/P7/4p3/8/4K3 b - - 2 45",
      "4r3/7p/1pN3kP/1R4P1/P7/4p3/b7/4K3 w - - 3 46",
      "4r3/7p/1pN3kP/4R1P1/P7/4p3/b7/4K3 b - - 4 46",
      "8/7p/1pN3kP/4r1P1/P7/4p3/b7/4K3 w - - 0 47",
      "8/7p/1p4kP/4N1P1/P7/4p3/b7/4K3 b - - 0 47",
      "8/7p/1p5P/4N1k1/P7/4p3/b7/4K3 w - - 0 48",
      "8/3N3p/1p5P/6k1/P7/4p3/b7/4K3 b - - 1 48",
      "8/3N3p/1p5P/6k1/P7/1b2p3/8/4K3 w - - 2 49",
      "8/7p/1N5P/6k1/P7/1b2p3/8/4K3 b - - 0 49",
      "8/7p/1N5P/6k1/b7/4p3/8/4K3 w - - 0 50",
      "8/7p/7P/6k1/N7/4p3/8/4K3 b - - 0 50",
      "8/7p/7k/8/N7/4p3/8/4K3 w - - 0 51",
      "8/7p/7k/8/8/2N1p3/8/4K3 b - - 1 51",
      "8/7p/7k/8/8/2N5/4p3/4K3 w - - 0 52",
      "8/7p/7k/8/8/8/4N3/4K3 b - - 0 52",
      "8/7p/8/6k1/8/8/4N3/4K3 w - - 1 53",
      "8/7p/8/6k1/8/6N1/8/4K3 b - - 2 53",
      "8/8/8/6kp/8/6N1/8/4K3 w - - 0 54",
      "8/8/8/6kN/8/8/8/4K3 b - - 0 54",
    ]
    for (index, history) in chess.getMoveHistory().enumerated() {
      XCTAssertEqual(history.fen, fens15[index], "Sinquefield(g16): FEN move (index)")
    }

    pgn = pgns.removeFirst()
    chess = try pgn.validate()
    XCTAssertEqual(chess.getTag("Event")?.value, "Sinquefield Cup", "Sinquefield(g17): event")
    XCTAssertEqual(
      chess.getTag("White")?.value, "Mamedyarov, Shakhriyar", "Sinquefield(g17): white")
    XCTAssertEqual(chess.getTag("Black")?.value, "Aronian, Levon", "Sinquefield(g17): black")
    XCTAssertEqual(chess.getMoveCount(), 24, "Sinquefield(g17): move count")
    XCTAssertEqual(
      chess.getMoveHistory().map { $0.pcn }.joined(separator: ","),
      "d2d4,g8f6,c2c4,e7e6,g1f3,d7d5,b1c3,f8e7,c1f4,e8g8,e2e3,b8d7,c4c5,c7c6,f1d3,b7b6,b2b4,a7a5,a2a3,c8a6,e1g1,d8c8,h2h3,c8b7,d1c2,a6d3,c2d3,a5b4,a3b4,a8a1,f1a1,f8a8,d3b1,a8a1,b1a1,b6c5,b4c5,h7h6,a1b1,b7a8,b1a2,a8b7,a2b1,b7a8,b1a2,a8b7,a2b1",
      "Sinquefield(g17): PCN move history"
    )
    let fens16 = [
      "rnbqkbnr/pppppppp/8/8/3P4/8/PPP1PPPP/RNBQKBNR b KQkq - 0 1",
      "rnbqkb1r/pppppppp/5n2/8/3P4/8/PPP1PPPP/RNBQKBNR w KQkq - 1 2",
      "rnbqkb1r/pppppppp/5n2/8/2PP4/8/PP2PPPP/RNBQKBNR b KQkq - 0 2",
      "rnbqkb1r/pppp1ppp/4pn2/8/2PP4/8/PP2PPPP/RNBQKBNR w KQkq - 0 3",
      "rnbqkb1r/pppp1ppp/4pn2/8/2PP4/5N2/PP2PPPP/RNBQKB1R b KQkq - 1 3",
      "rnbqkb1r/ppp2ppp/4pn2/3p4/2PP4/5N2/PP2PPPP/RNBQKB1R w KQkq - 0 4",
      "rnbqkb1r/ppp2ppp/4pn2/3p4/2PP4/2N2N2/PP2PPPP/R1BQKB1R b KQkq - 1 4",
      "rnbqk2r/ppp1bppp/4pn2/3p4/2PP4/2N2N2/PP2PPPP/R1BQKB1R w KQkq - 2 5",
      "rnbqk2r/ppp1bppp/4pn2/3p4/2PP1B2/2N2N2/PP2PPPP/R2QKB1R b KQkq - 3 5",
      "rnbq1rk1/ppp1bppp/4pn2/3p4/2PP1B2/2N2N2/PP2PPPP/R2QKB1R w KQ - 4 6",
      "rnbq1rk1/ppp1bppp/4pn2/3p4/2PP1B2/2N1PN2/PP3PPP/R2QKB1R b KQ - 0 6",
      "r1bq1rk1/pppnbppp/4pn2/3p4/2PP1B2/2N1PN2/PP3PPP/R2QKB1R w KQ - 1 7",
      "r1bq1rk1/pppnbppp/4pn2/2Pp4/3P1B2/2N1PN2/PP3PPP/R2QKB1R b KQ - 0 7",
      "r1bq1rk1/pp1nbppp/2p1pn2/2Pp4/3P1B2/2N1PN2/PP3PPP/R2QKB1R w KQ - 0 8",
      "r1bq1rk1/pp1nbppp/2p1pn2/2Pp4/3P1B2/2NBPN2/PP3PPP/R2QK2R b KQ - 1 8",
      "r1bq1rk1/p2nbppp/1pp1pn2/2Pp4/3P1B2/2NBPN2/PP3PPP/R2QK2R w KQ - 0 9",
      "r1bq1rk1/p2nbppp/1pp1pn2/2Pp4/1P1P1B2/2NBPN2/P4PPP/R2QK2R b KQ - 0 9",
      "r1bq1rk1/3nbppp/1pp1pn2/p1Pp4/1P1P1B2/2NBPN2/P4PPP/R2QK2R w KQ - 0 10",
      "r1bq1rk1/3nbppp/1pp1pn2/p1Pp4/1P1P1B2/P1NBPN2/5PPP/R2QK2R b KQ - 0 10",
      "r2q1rk1/3nbppp/bpp1pn2/p1Pp4/1P1P1B2/P1NBPN2/5PPP/R2QK2R w KQ - 1 11",
      "r2q1rk1/3nbppp/bpp1pn2/p1Pp4/1P1P1B2/P1NBPN2/5PPP/R2Q1RK1 b - - 2 11",
      "r1q2rk1/3nbppp/bpp1pn2/p1Pp4/1P1P1B2/P1NBPN2/5PPP/R2Q1RK1 w - - 3 12",
      "r1q2rk1/3nbppp/bpp1pn2/p1Pp4/1P1P1B2/P1NBPN1P/5PP1/R2Q1RK1 b - - 0 12",
      "r4rk1/1q1nbppp/bpp1pn2/p1Pp4/1P1P1B2/P1NBPN1P/5PP1/R2Q1RK1 w - - 1 13",
      "r4rk1/1q1nbppp/bpp1pn2/p1Pp4/1P1P1B2/P1NBPN1P/2Q2PP1/R4RK1 b - - 2 13",
      "r4rk1/1q1nbppp/1pp1pn2/p1Pp4/1P1P1B2/P1NbPN1P/2Q2PP1/R4RK1 w - - 0 14",
      "r4rk1/1q1nbppp/1pp1pn2/p1Pp4/1P1P1B2/P1NQPN1P/5PP1/R4RK1 b - - 0 14",
      "r4rk1/1q1nbppp/1pp1pn2/2Pp4/1p1P1B2/P1NQPN1P/5PP1/R4RK1 w - - 0 15",
      "r4rk1/1q1nbppp/1pp1pn2/2Pp4/1P1P1B2/2NQPN1P/5PP1/R4RK1 b - - 0 15",
      "5rk1/1q1nbppp/1pp1pn2/2Pp4/1P1P1B2/2NQPN1P/5PP1/r4RK1 w - - 0 16",
      "5rk1/1q1nbppp/1pp1pn2/2Pp4/1P1P1B2/2NQPN1P/5PP1/R5K1 b - - 0 16",
      "r5k1/1q1nbppp/1pp1pn2/2Pp4/1P1P1B2/2NQPN1P/5PP1/R5K1 w - - 1 17",
      "r5k1/1q1nbppp/1pp1pn2/2Pp4/1P1P1B2/2N1PN1P/5PP1/RQ4K1 b - - 2 17",
      "6k1/1q1nbppp/1pp1pn2/2Pp4/1P1P1B2/2N1PN1P/5PP1/rQ4K1 w - - 0 18",
      "6k1/1q1nbppp/1pp1pn2/2Pp4/1P1P1B2/2N1PN1P/5PP1/Q5K1 b - - 0 18",
      "6k1/1q1nbppp/2p1pn2/2pp4/1P1P1B2/2N1PN1P/5PP1/Q5K1 w - - 0 19",
      "6k1/1q1nbppp/2p1pn2/2Pp4/3P1B2/2N1PN1P/5PP1/Q5K1 b - - 0 19",
      "6k1/1q1nbpp1/2p1pn1p/2Pp4/3P1B2/2N1PN1P/5PP1/Q5K1 w - - 0 20",
      "6k1/1q1nbpp1/2p1pn1p/2Pp4/3P1B2/2N1PN1P/5PP1/1Q4K1 b - - 1 20",
      "q5k1/3nbpp1/2p1pn1p/2Pp4/3P1B2/2N1PN1P/5PP1/1Q4K1 w - - 2 21",
      "q5k1/3nbpp1/2p1pn1p/2Pp4/3P1B2/2N1PN1P/Q4PP1/6K1 b - - 3 21",
      "6k1/1q1nbpp1/2p1pn1p/2Pp4/3P1B2/2N1PN1P/Q4PP1/6K1 w - - 4 22",
      "6k1/1q1nbpp1/2p1pn1p/2Pp4/3P1B2/2N1PN1P/5PP1/1Q4K1 b - - 5 22",
      "q5k1/3nbpp1/2p1pn1p/2Pp4/3P1B2/2N1PN1P/5PP1/1Q4K1 w - - 6 23",
      "q5k1/3nbpp1/2p1pn1p/2Pp4/3P1B2/2N1PN1P/Q4PP1/6K1 b - - 7 23",
      "6k1/1q1nbpp1/2p1pn1p/2Pp4/3P1B2/2N1PN1P/Q4PP1/6K1 w - - 8 24",
      "6k1/1q1nbpp1/2p1pn1p/2Pp4/3P1B2/2N1PN1P/5PP1/1Q4K1 b - - 9 24",
    ]
    for (index, history) in chess.getMoveHistory().enumerated() {
      XCTAssertEqual(history.fen, fens16[index], "Sinquefield(g17): FEN move (index)")
    }

    pgn = pgns.removeFirst()
    chess = try pgn.validate()
    XCTAssertEqual(chess.getTag("Event")?.value, "Sinquefield Cup", "Sinquefield(g18): event")
    XCTAssertEqual(chess.getTag("White")?.value, "Caruana, Fabiano", "Sinquefield(g18): white")
    XCTAssertEqual(chess.getTag("Black")?.value, "Nakamura, Hikaru", "Sinquefield(g18): black")
    XCTAssertEqual(chess.getMoveCount(), 49, "Sinquefield(g18): move count")
    XCTAssertEqual(
      chess.getMoveHistory().map { $0.pcn }.joined(separator: ","),
      "d2d4,g8f6,c2c4,e7e6,g1f3,d7d5,b1c3,f8e7,g2g3,d5c4,f1g2,e8g8,f3e5,b8c6,g2c6,b7c6,e5c6,d8e8,c6e7,e8e7,d1a4,c7c5,d4c5,e7c5,c1e3,c5c7,e1c1,f6g4,d1d2,g4e3,f2e3,a8b8,h1d1,a7a5,c1b1,h7h6,b1a1,b8b4,a4c2,b4b8,c2e4,c8b7,e4d4,b7a8,e3e4,f8c8,d4f2,a8c6,f2c5,c6e8,c5c7,c8c7,d2d6,g8f8,d6a6,c7c5,a6a7,b8c8,a1b1,c5h5,h2h4,h5e5,b1c2,g7g5,d1f1,f8g7,a7b7,g7g6,c2d2,f7f5,h4g5,f5e4,d2e3,e8c6,b7e7,e5g5,e7e6,g6g7,e6e7,g7g6,f1d1,g6f6,e7a7,f6e6,d1h1,h6h5,g3g4,c6e8,g4h5,e8h5,c3e4,g5f5,a7a6,e6e7,e4d6,f5e5,e3d4",
      "Sinquefield(g18): PCN move history"
    )
    let fens17 = [
      "rnbqkbnr/pppppppp/8/8/3P4/8/PPP1PPPP/RNBQKBNR b KQkq - 0 1",
      "rnbqkb1r/pppppppp/5n2/8/3P4/8/PPP1PPPP/RNBQKBNR w KQkq - 1 2",
      "rnbqkb1r/pppppppp/5n2/8/2PP4/8/PP2PPPP/RNBQKBNR b KQkq - 0 2",
      "rnbqkb1r/pppp1ppp/4pn2/8/2PP4/8/PP2PPPP/RNBQKBNR w KQkq - 0 3",
      "rnbqkb1r/pppp1ppp/4pn2/8/2PP4/5N2/PP2PPPP/RNBQKB1R b KQkq - 1 3",
      "rnbqkb1r/ppp2ppp/4pn2/3p4/2PP4/5N2/PP2PPPP/RNBQKB1R w KQkq - 0 4",
      "rnbqkb1r/ppp2ppp/4pn2/3p4/2PP4/2N2N2/PP2PPPP/R1BQKB1R b KQkq - 1 4",
      "rnbqk2r/ppp1bppp/4pn2/3p4/2PP4/2N2N2/PP2PPPP/R1BQKB1R w KQkq - 2 5",
      "rnbqk2r/ppp1bppp/4pn2/3p4/2PP4/2N2NP1/PP2PP1P/R1BQKB1R b KQkq - 0 5",
      "rnbqk2r/ppp1bppp/4pn2/8/2pP4/2N2NP1/PP2PP1P/R1BQKB1R w KQkq - 0 6",
      "rnbqk2r/ppp1bppp/4pn2/8/2pP4/2N2NP1/PP2PPBP/R1BQK2R b KQkq - 1 6",
      "rnbq1rk1/ppp1bppp/4pn2/8/2pP4/2N2NP1/PP2PPBP/R1BQK2R w KQ - 2 7",
      "rnbq1rk1/ppp1bppp/4pn2/4N3/2pP4/2N3P1/PP2PPBP/R1BQK2R b KQ - 3 7",
      "r1bq1rk1/ppp1bppp/2n1pn2/4N3/2pP4/2N3P1/PP2PPBP/R1BQK2R w KQ - 4 8",
      "r1bq1rk1/ppp1bppp/2B1pn2/4N3/2pP4/2N3P1/PP2PP1P/R1BQK2R b KQ - 0 8",
      "r1bq1rk1/p1p1bppp/2p1pn2/4N3/2pP4/2N3P1/PP2PP1P/R1BQK2R w KQ - 0 9",
      "r1bq1rk1/p1p1bppp/2N1pn2/8/2pP4/2N3P1/PP2PP1P/R1BQK2R b KQ - 0 9",
      "r1b1qrk1/p1p1bppp/2N1pn2/8/2pP4/2N3P1/PP2PP1P/R1BQK2R w KQ - 1 10",
      "r1b1qrk1/p1p1Nppp/4pn2/8/2pP4/2N3P1/PP2PP1P/R1BQK2R b KQ - 0 10",
      "r1b2rk1/p1p1qppp/4pn2/8/2pP4/2N3P1/PP2PP1P/R1BQK2R w KQ - 0 11",
      "r1b2rk1/p1p1qppp/4pn2/8/Q1pP4/2N3P1/PP2PP1P/R1B1K2R b KQ - 1 11",
      "r1b2rk1/p3qppp/4pn2/2p5/Q1pP4/2N3P1/PP2PP1P/R1B1K2R w KQ - 0 12",
      "r1b2rk1/p3qppp/4pn2/2P5/Q1p5/2N3P1/PP2PP1P/R1B1K2R b KQ - 0 12",
      "r1b2rk1/p4ppp/4pn2/2q5/Q1p5/2N3P1/PP2PP1P/R1B1K2R w KQ - 0 13",
      "r1b2rk1/p4ppp/4pn2/2q5/Q1p5/2N1B1P1/PP2PP1P/R3K2R b KQ - 1 13",
      "r1b2rk1/p1q2ppp/4pn2/8/Q1p5/2N1B1P1/PP2PP1P/R3K2R w KQ - 2 14",
      "r1b2rk1/p1q2ppp/4pn2/8/Q1p5/2N1B1P1/PP2PP1P/2KR3R b - - 3 14",
      "r1b2rk1/p1q2ppp/4p3/8/Q1p3n1/2N1B1P1/PP2PP1P/2KR3R w - - 4 15",
      "r1b2rk1/p1q2ppp/4p3/8/Q1p3n1/2N1B1P1/PP1RPP1P/2K4R b - - 5 15",
      "r1b2rk1/p1q2ppp/4p3/8/Q1p5/2N1n1P1/PP1RPP1P/2K4R w - - 0 16",
      "r1b2rk1/p1q2ppp/4p3/8/Q1p5/2N1P1P1/PP1RP2P/2K4R b - - 0 16",
      "1rb2rk1/p1q2ppp/4p3/8/Q1p5/2N1P1P1/PP1RP2P/2K4R w - - 1 17",
      "1rb2rk1/p1q2ppp/4p3/8/Q1p5/2N1P1P1/PP1RP2P/2KR4 b - - 2 17",
      "1rb2rk1/2q2ppp/4p3/p7/Q1p5/2N1P1P1/PP1RP2P/2KR4 w - - 0 18",
      "1rb2rk1/2q2ppp/4p3/p7/Q1p5/2N1P1P1/PP1RP2P/1K1R4 b - - 1 18",
      "1rb2rk1/2q2pp1/4p2p/p7/Q1p5/2N1P1P1/PP1RP2P/1K1R4 w - - 0 19",
      "1rb2rk1/2q2pp1/4p2p/p7/Q1p5/2N1P1P1/PP1RP2P/K2R4 b - - 1 19",
      "2b2rk1/2q2pp1/4p2p/p7/Qrp5/2N1P1P1/PP1RP2P/K2R4 w - - 2 20",
      "2b2rk1/2q2pp1/4p2p/p7/1rp5/2N1P1P1/PPQRP2P/K2R4 b - - 3 20",
      "1rb2rk1/2q2pp1/4p2p/p7/2p5/2N1P1P1/PPQRP2P/K2R4 w - - 4 21",
      "1rb2rk1/2q2pp1/4p2p/p7/2p1Q3/2N1P1P1/PP1RP2P/K2R4 b - - 5 21",
      "1r3rk1/1bq2pp1/4p2p/p7/2p1Q3/2N1P1P1/PP1RP2P/K2R4 w - - 6 22",
      "1r3rk1/1bq2pp1/4p2p/p7/2pQ4/2N1P1P1/PP1RP2P/K2R4 b - - 7 22",
      "br3rk1/2q2pp1/4p2p/p7/2pQ4/2N1P1P1/PP1RP2P/K2R4 w - - 8 23",
      "br3rk1/2q2pp1/4p2p/p7/2pQP3/2N3P1/PP1RP2P/K2R4 b - - 0 23",
      "brr3k1/2q2pp1/4p2p/p7/2pQP3/2N3P1/PP1RP2P/K2R4 w - - 1 24",
      "brr3k1/2q2pp1/4p2p/p7/2p1P3/2N3P1/PP1RPQ1P/K2R4 b - - 2 24",
      "1rr3k1/2q2pp1/2b1p2p/p7/2p1P3/2N3P1/PP1RPQ1P/K2R4 w - - 3 25",
      "1rr3k1/2q2pp1/2b1p2p/p1Q5/2p1P3/2N3P1/PP1RP2P/K2R4 b - - 4 25",
      "1rr1b1k1/2q2pp1/4p2p/p1Q5/2p1P3/2N3P1/PP1RP2P/K2R4 w - - 5 26",
      "1rr1b1k1/2Q2pp1/4p2p/p7/2p1P3/2N3P1/PP1RP2P/K2R4 b - - 0 26",
      "1r2b1k1/2r2pp1/4p2p/p7/2p1P3/2N3P1/PP1RP2P/K2R4 w - - 0 27",
      "1r2b1k1/2r2pp1/3Rp2p/p7/2p1P3/2N3P1/PP2P2P/K2R4 b - - 1 27",
      "1r2bk2/2r2pp1/3Rp2p/p7/2p1P3/2N3P1/PP2P2P/K2R4 w - - 2 28",
      "1r2bk2/2r2pp1/R3p2p/p7/2p1P3/2N3P1/PP2P2P/K2R4 b - - 3 28",
      "1r2bk2/5pp1/R3p2p/p1r5/2p1P3/2N3P1/PP2P2P/K2R4 w - - 4 29",
      "1r2bk2/R4pp1/4p2p/p1r5/2p1P3/2N3P1/PP2P2P/K2R4 b - - 5 29",
      "2r1bk2/R4pp1/4p2p/p1r5/2p1P3/2N3P1/PP2P2P/K2R4 w - - 6 30",
      "2r1bk2/R4pp1/4p2p/p1r5/2p1P3/2N3P1/PP2P2P/1K1R4 b - - 7 30",
      "2r1bk2/R4pp1/4p2p/p6r/2p1P3/2N3P1/PP2P2P/1K1R4 w - - 8 31",
      "2r1bk2/R4pp1/4p2p/p6r/2p1P2P/2N3P1/PP2P3/1K1R4 b - - 0 31",
      "2r1bk2/R4pp1/4p2p/p3r3/2p1P2P/2N3P1/PP2P3/1K1R4 w - - 1 32",
      "2r1bk2/R4pp1/4p2p/p3r3/2p1P2P/2N3P1/PPK1P3/3R4 b - - 2 32",
      "2r1bk2/R4p2/4p2p/p3r1p1/2p1P2P/2N3P1/PPK1P3/3R4 w - - 0 33",
      "2r1bk2/R4p2/4p2p/p3r1p1/2p1P2P/2N3P1/PPK1P3/5R2 b - - 1 33",
      "2r1b3/R4pk1/4p2p/p3r1p1/2p1P2P/2N3P1/PPK1P3/5R2 w - - 2 34",
      "2r1b3/1R3pk1/4p2p/p3r1p1/2p1P2P/2N3P1/PPK1P3/5R2 b - - 3 34",
      "2r1b3/1R3p2/4p1kp/p3r1p1/2p1P2P/2N3P1/PPK1P3/5R2 w - - 4 35",
      "2r1b3/1R3p2/4p1kp/p3r1p1/2p1P2P/2N3P1/PP1KP3/5R2 b - - 5 35",
      "2r1b3/1R6/4p1kp/p3rpp1/2p1P2P/2N3P1/PP1KP3/5R2 w - - 0 36",
      "2r1b3/1R6/4p1kp/p3rpP1/2p1P3/2N3P1/PP1KP3/5R2 b - - 0 36",
      "2r1b3/1R6/4p1kp/p3r1P1/2p1p3/2N3P1/PP1KP3/5R2 w - - 0 37",
      "2r1b3/1R6/4p1kp/p3r1P1/2p1p3/2N1K1P1/PP2P3/5R2 b - - 1 37",
      "2r5/1R6/2b1p1kp/p3r1P1/2p1p3/2N1K1P1/PP2P3/5R2 w - - 2 38",
      "2r5/4R3/2b1p1kp/p3r1P1/2p1p3/2N1K1P1/PP2P3/5R2 b - - 3 38",
      "2r5/4R3/2b1p1kp/p5r1/2p1p3/2N1K1P1/PP2P3/5R2 w - - 0 39",
      "2r5/8/2b1R1kp/p5r1/2p1p3/2N1K1P1/PP2P3/5R2 b - - 0 39",
      "2r5/6k1/2b1R2p/p5r1/2p1p3/2N1K1P1/PP2P3/5R2 w - - 1 40",
      "2r5/4R1k1/2b4p/p5r1/2p1p3/2N1K1P1/PP2P3/5R2 b - - 2 40",
      "2r5/4R3/2b3kp/p5r1/2p1p3/2N1K1P1/PP2P3/5R2 w - - 3 41",
      "2r5/4R3/2b3kp/p5r1/2p1p3/2N1K1P1/PP2P3/3R4 b - - 4 41",
      "2r5/4R3/2b2k1p/p5r1/2p1p3/2N1K1P1/PP2P3/3R4 w - - 5 42",
      "2r5/R7/2b2k1p/p5r1/2p1p3/2N1K1P1/PP2P3/3R4 b - - 6 42",
      "2r5/R7/2b1k2p/p5r1/2p1p3/2N1K1P1/PP2P3/3R4 w - - 7 43",
      "2r5/R7/2b1k2p/p5r1/2p1p3/2N1K1P1/PP2P3/7R b - - 8 43",
      "2r5/R7/2b1k3/p5rp/2p1p3/2N1K1P1/PP2P3/7R w - - 0 44",
      "2r5/R7/2b1k3/p5rp/2p1p1P1/2N1K3/PP2P3/7R b - - 0 44",
      "2r1b3/R7/4k3/p5rp/2p1p1P1/2N1K3/PP2P3/7R w - - 1 45",
      "2r1b3/R7/4k3/p5rP/2p1p3/2N1K3/PP2P3/7R b - - 0 45",
      "2r5/R7/4k3/p5rb/2p1p3/2N1K3/PP2P3/7R w - - 0 46",
      "2r5/R7/4k3/p5rb/2p1N3/4K3/PP2P3/7R b - - 0 46",
      "2r5/R7/4k3/p4r1b/2p1N3/4K3/PP2P3/7R w - - 1 47",
      "2r5/8/R3k3/p4r1b/2p1N3/4K3/PP2P3/7R b - - 2 47",
      "2r5/4k3/R7/p4r1b/2p1N3/4K3/PP2P3/7R w - - 3 48",
      "2r5/4k3/R2N4/p4r1b/2p5/4K3/PP2P3/7R b - - 4 48",
      "2r5/4k3/R2N4/p3r2b/2p5/4K3/PP2P3/7R w - - 5 49",
      "2r5/4k3/R2N4/p3r2b/2pK4/8/PP2P3/7R b - - 6 49",
    ]
    for (index, history) in chess.getMoveHistory().enumerated() {
      XCTAssertEqual(history.fen, fens17[index], "Sinquefield(g18): FEN move (index)")
    }

    pgn = pgns.removeFirst()
    chess = try pgn.validate()
    XCTAssertEqual(chess.getTag("Event")?.value, "Sinquefield Cup", "Sinquefield(g19): event")
    XCTAssertEqual(chess.getTag("White")?.value, "Grischuk, Alexander", "Sinquefield(g19): white")
    XCTAssertEqual(
      chess.getTag("Black")?.value, "Vachier-Lagrave, Maxime", "Sinquefield(g19): black")
    XCTAssertEqual(chess.getMoveCount(), 26, "Sinquefield(g19): move count")
    XCTAssertEqual(
      chess.getMoveHistory().map { $0.pcn }.joined(separator: ","),
      "e2e4,c7c5,g1f3,d7d6,d2d4,c5d4,f3d4,g8f6,b1c3,a7a6,c1g5,e7e6,f2f4,h7h6,g5h4,d8b6,a2a3,f8e7,h4f2,b6c7,d1f3,b8d7,e1c1,b7b5,g2g4,c8b7,h2h4,d7c5,f1d3,h6h5,g4g5,f6g4,h1g1,c7b6,c1b1,b5b4,a3b4,b6b4,g1g4,h5g4,f3g4,a8b8,c3a2,b4a4,a2c3,a4b4,c3a2,b4a4,a2c3,a4b4",
      "Sinquefield(g19): PCN move history"
    )
    let fens18 = [
      "rnbqkbnr/pppppppp/8/8/4P3/8/PPPP1PPP/RNBQKBNR b KQkq - 0 1",
      "rnbqkbnr/pp1ppppp/8/2p5/4P3/8/PPPP1PPP/RNBQKBNR w KQkq - 0 2",
      "rnbqkbnr/pp1ppppp/8/2p5/4P3/5N2/PPPP1PPP/RNBQKB1R b KQkq - 1 2",
      "rnbqkbnr/pp2pppp/3p4/2p5/4P3/5N2/PPPP1PPP/RNBQKB1R w KQkq - 0 3",
      "rnbqkbnr/pp2pppp/3p4/2p5/3PP3/5N2/PPP2PPP/RNBQKB1R b KQkq - 0 3",
      "rnbqkbnr/pp2pppp/3p4/8/3pP3/5N2/PPP2PPP/RNBQKB1R w KQkq - 0 4",
      "rnbqkbnr/pp2pppp/3p4/8/3NP3/8/PPP2PPP/RNBQKB1R b KQkq - 0 4",
      "rnbqkb1r/pp2pppp/3p1n2/8/3NP3/8/PPP2PPP/RNBQKB1R w KQkq - 1 5",
      "rnbqkb1r/pp2pppp/3p1n2/8/3NP3/2N5/PPP2PPP/R1BQKB1R b KQkq - 2 5",
      "rnbqkb1r/1p2pppp/p2p1n2/8/3NP3/2N5/PPP2PPP/R1BQKB1R w KQkq - 0 6",
      "rnbqkb1r/1p2pppp/p2p1n2/6B1/3NP3/2N5/PPP2PPP/R2QKB1R b KQkq - 1 6",
      "rnbqkb1r/1p3ppp/p2ppn2/6B1/3NP3/2N5/PPP2PPP/R2QKB1R w KQkq - 0 7",
      "rnbqkb1r/1p3ppp/p2ppn2/6B1/3NPP2/2N5/PPP3PP/R2QKB1R b KQkq - 0 7",
      "rnbqkb1r/1p3pp1/p2ppn1p/6B1/3NPP2/2N5/PPP3PP/R2QKB1R w KQkq - 0 8",
      "rnbqkb1r/1p3pp1/p2ppn1p/8/3NPP1B/2N5/PPP3PP/R2QKB1R b KQkq - 1 8",
      "rnb1kb1r/1p3pp1/pq1ppn1p/8/3NPP1B/2N5/PPP3PP/R2QKB1R w KQkq - 2 9",
      "rnb1kb1r/1p3pp1/pq1ppn1p/8/3NPP1B/P1N5/1PP3PP/R2QKB1R b KQkq - 0 9",
      "rnb1k2r/1p2bpp1/pq1ppn1p/8/3NPP1B/P1N5/1PP3PP/R2QKB1R w KQkq - 1 10",
      "rnb1k2r/1p2bpp1/pq1ppn1p/8/3NPP2/P1N5/1PP2BPP/R2QKB1R b KQkq - 2 10",
      "rnb1k2r/1pq1bpp1/p2ppn1p/8/3NPP2/P1N5/1PP2BPP/R2QKB1R w KQkq - 3 11",
      "rnb1k2r/1pq1bpp1/p2ppn1p/8/3NPP2/P1N2Q2/1PP2BPP/R3KB1R b KQkq - 4 11",
      "r1b1k2r/1pqnbpp1/p2ppn1p/8/3NPP2/P1N2Q2/1PP2BPP/R3KB1R w KQkq - 5 12",
      "r1b1k2r/1pqnbpp1/p2ppn1p/8/3NPP2/P1N2Q2/1PP2BPP/2KR1B1R b kq - 6 12",
      "r1b1k2r/2qnbpp1/p2ppn1p/1p6/3NPP2/P1N2Q2/1PP2BPP/2KR1B1R w kq - 0 13",
      "r1b1k2r/2qnbpp1/p2ppn1p/1p6/3NPPP1/P1N2Q2/1PP2B1P/2KR1B1R b kq - 0 13",
      "r3k2r/1bqnbpp1/p2ppn1p/1p6/3NPPP1/P1N2Q2/1PP2B1P/2KR1B1R w kq - 1 14",
      "r3k2r/1bqnbpp1/p2ppn1p/1p6/3NPPPP/P1N2Q2/1PP2B2/2KR1B1R b kq - 0 14",
      "r3k2r/1bq1bpp1/p2ppn1p/1pn5/3NPPPP/P1N2Q2/1PP2B2/2KR1B1R w kq - 1 15",
      "r3k2r/1bq1bpp1/p2ppn1p/1pn5/3NPPPP/P1NB1Q2/1PP2B2/2KR3R b kq - 2 15",
      "r3k2r/1bq1bpp1/p2ppn2/1pn4p/3NPPPP/P1NB1Q2/1PP2B2/2KR3R w kq - 0 16",
      "r3k2r/1bq1bpp1/p2ppn2/1pn3Pp/3NPP1P/P1NB1Q2/1PP2B2/2KR3R b kq - 0 16",
      "r3k2r/1bq1bpp1/p2pp3/1pn3Pp/3NPPnP/P1NB1Q2/1PP2B2/2KR3R w kq - 1 17",
      "r3k2r/1bq1bpp1/p2pp3/1pn3Pp/3NPPnP/P1NB1Q2/1PP2B2/2KR2R1 b kq - 2 17",
      "r3k2r/1b2bpp1/pq1pp3/1pn3Pp/3NPPnP/P1NB1Q2/1PP2B2/2KR2R1 w kq - 3 18",
      "r3k2r/1b2bpp1/pq1pp3/1pn3Pp/3NPPnP/P1NB1Q2/1PP2B2/1K1R2R1 b kq - 4 18",
      "r3k2r/1b2bpp1/pq1pp3/2n3Pp/1p1NPPnP/P1NB1Q2/1PP2B2/1K1R2R1 w kq - 0 19",
      "r3k2r/1b2bpp1/pq1pp3/2n3Pp/1P1NPPnP/2NB1Q2/1PP2B2/1K1R2R1 b kq - 0 19",
      "r3k2r/1b2bpp1/p2pp3/2n3Pp/1q1NPPnP/2NB1Q2/1PP2B2/1K1R2R1 w kq - 0 20",
      "r3k2r/1b2bpp1/p2pp3/2n3Pp/1q1NPPRP/2NB1Q2/1PP2B2/1K1R4 b kq - 0 20",
      "r3k2r/1b2bpp1/p2pp3/2n3P1/1q1NPPpP/2NB1Q2/1PP2B2/1K1R4 w kq - 0 21",
      "r3k2r/1b2bpp1/p2pp3/2n3P1/1q1NPPQP/2NB4/1PP2B2/1K1R4 b kq - 0 21",
      "1r2k2r/1b2bpp1/p2pp3/2n3P1/1q1NPPQP/2NB4/1PP2B2/1K1R4 w k - 1 22",
      "1r2k2r/1b2bpp1/p2pp3/2n3P1/1q1NPPQP/3B4/NPP2B2/1K1R4 b k - 2 22",
      "1r2k2r/1b2bpp1/p2pp3/2n3P1/q2NPPQP/3B4/NPP2B2/1K1R4 w k - 3 23",
      "1r2k2r/1b2bpp1/p2pp3/2n3P1/q2NPPQP/2NB4/1PP2B2/1K1R4 b k - 4 23",
      "1r2k2r/1b2bpp1/p2pp3/2n3P1/1q1NPPQP/2NB4/1PP2B2/1K1R4 w k - 5 24",
      "1r2k2r/1b2bpp1/p2pp3/2n3P1/1q1NPPQP/3B4/NPP2B2/1K1R4 b k - 6 24",
      "1r2k2r/1b2bpp1/p2pp3/2n3P1/q2NPPQP/3B4/NPP2B2/1K1R4 w k - 7 25",
      "1r2k2r/1b2bpp1/p2pp3/2n3P1/q2NPPQP/2NB4/1PP2B2/1K1R4 b k - 8 25",
      "1r2k2r/1b2bpp1/p2pp3/2n3P1/1q1NPPQP/2NB4/1PP2B2/1K1R4 w k - 9 26",
    ]
    for (index, history) in chess.getMoveHistory().enumerated() {
      XCTAssertEqual(history.fen, fens18[index], "Sinquefield(g19): FEN move (index)")
    }

    pgn = pgns.removeFirst()
    chess = try pgn.validate()
    XCTAssertEqual(chess.getTag("Event")?.value, "Sinquefield Cup", "Sinquefield(g20): event")
    XCTAssertEqual(chess.getTag("White")?.value, "So, Wesley", "Sinquefield(g20): white")
    XCTAssertEqual(chess.getTag("Black")?.value, "Karjakin, Sergey", "Sinquefield(g20): black")
    XCTAssertEqual(chess.getMoveCount(), 48, "Sinquefield(g20): move count")
    XCTAssertEqual(
      chess.getMoveHistory().map { $0.pcn }.joined(separator: ","),
      "c2c4,g8f6,b1c3,e7e5,g1f3,b8c6,e2e3,f8b4,d1c2,b4c3,c2c3,d8e7,d2d4,f6e4,c3d3,e5d4,f3d4,e8g8,f1e2,e7b4,e1f1,b4e7,f2f3,e4c5,d3d2,a7a5,b2b3,d7d6,d4c6,b7c6,c1b2,f8e8,f1f2,c5d7,h2h4,h7h5,e3e4,d7e5,a1e1,a5a4,b3b4,a4a3,b2a1,f7f6,e1c1,c8e6,c1c2,a8a4,c4c5,e8b8,c5d6,c7d6,a1c3,c6c5,b4c5,d6c5,h1d1,e5c4,e2c4,a4c4,c3a1,c4c2,d2c2,b8d8,d1d3,d8d3,c2d3,e7d7,d3d7,e6d7,a1c3,d7e6,c3d2,e6a2,d2c1,c5c4,c1a3,c4c3,f2e3,a2c4,e3d4,c4f1,g2g3,f1g2,d4c3,g2f3,c3d4,f3g4,d4d5,g4f3,d5d4,f3g4,d4d5,g4f3,d5d4",
      "Sinquefield(g20): PCN move history"
    )
    let fens19 = [
      "rnbqkbnr/pppppppp/8/8/2P5/8/PP1PPPPP/RNBQKBNR b KQkq - 0 1",
      "rnbqkb1r/pppppppp/5n2/8/2P5/8/PP1PPPPP/RNBQKBNR w KQkq - 1 2",
      "rnbqkb1r/pppppppp/5n2/8/2P5/2N5/PP1PPPPP/R1BQKBNR b KQkq - 2 2",
      "rnbqkb1r/pppp1ppp/5n2/4p3/2P5/2N5/PP1PPPPP/R1BQKBNR w KQkq - 0 3",
      "rnbqkb1r/pppp1ppp/5n2/4p3/2P5/2N2N2/PP1PPPPP/R1BQKB1R b KQkq - 1 3",
      "r1bqkb1r/pppp1ppp/2n2n2/4p3/2P5/2N2N2/PP1PPPPP/R1BQKB1R w KQkq - 2 4",
      "r1bqkb1r/pppp1ppp/2n2n2/4p3/2P5/2N1PN2/PP1P1PPP/R1BQKB1R b KQkq - 0 4",
      "r1bqk2r/pppp1ppp/2n2n2/4p3/1bP5/2N1PN2/PP1P1PPP/R1BQKB1R w KQkq - 1 5",
      "r1bqk2r/pppp1ppp/2n2n2/4p3/1bP5/2N1PN2/PPQP1PPP/R1B1KB1R b KQkq - 2 5",
      "r1bqk2r/pppp1ppp/2n2n2/4p3/2P5/2b1PN2/PPQP1PPP/R1B1KB1R w KQkq - 0 6",
      "r1bqk2r/pppp1ppp/2n2n2/4p3/2P5/2Q1PN2/PP1P1PPP/R1B1KB1R b KQkq - 0 6",
      "r1b1k2r/ppppqppp/2n2n2/4p3/2P5/2Q1PN2/PP1P1PPP/R1B1KB1R w KQkq - 1 7",
      "r1b1k2r/ppppqppp/2n2n2/4p3/2PP4/2Q1PN2/PP3PPP/R1B1KB1R b KQkq - 0 7",
      "r1b1k2r/ppppqppp/2n5/4p3/2PPn3/2Q1PN2/PP3PPP/R1B1KB1R w KQkq - 1 8",
      "r1b1k2r/ppppqppp/2n5/4p3/2PPn3/3QPN2/PP3PPP/R1B1KB1R b KQkq - 2 8",
      "r1b1k2r/ppppqppp/2n5/8/2Ppn3/3QPN2/PP3PPP/R1B1KB1R w KQkq - 0 9",
      "r1b1k2r/ppppqppp/2n5/8/2PNn3/3QP3/PP3PPP/R1B1KB1R b KQkq - 0 9",
      "r1b2rk1/ppppqppp/2n5/8/2PNn3/3QP3/PP3PPP/R1B1KB1R w KQ - 1 10",
      "r1b2rk1/ppppqppp/2n5/8/2PNn3/3QP3/PP2BPPP/R1B1K2R b KQ - 2 10",
      "r1b2rk1/pppp1ppp/2n5/8/1qPNn3/3QP3/PP2BPPP/R1B1K2R w KQ - 3 11",
      "r1b2rk1/pppp1ppp/2n5/8/1qPNn3/3QP3/PP2BPPP/R1B2K1R b - - 4 11",
      "r1b2rk1/ppppqppp/2n5/8/2PNn3/3QP3/PP2BPPP/R1B2K1R w - - 5 12",
      "r1b2rk1/ppppqppp/2n5/8/2PNn3/3QPP2/PP2B1PP/R1B2K1R b - - 0 12",
      "r1b2rk1/ppppqppp/2n5/2n5/2PN4/3QPP2/PP2B1PP/R1B2K1R w - - 1 13",
      "r1b2rk1/ppppqppp/2n5/2n5/2PN4/4PP2/PP1QB1PP/R1B2K1R b - - 2 13",
      "r1b2rk1/1pppqppp/2n5/p1n5/2PN4/4PP2/PP1QB1PP/R1B2K1R w - - 0 14",
      "r1b2rk1/1pppqppp/2n5/p1n5/2PN4/1P2PP2/P2QB1PP/R1B2K1R b - - 0 14",
      "r1b2rk1/1pp1qppp/2np4/p1n5/2PN4/1P2PP2/P2QB1PP/R1B2K1R w - - 0 15",
      "r1b2rk1/1pp1qppp/2Np4/p1n5/2P5/1P2PP2/P2QB1PP/R1B2K1R b - - 0 15",
      "r1b2rk1/2p1qppp/2pp4/p1n5/2P5/1P2PP2/P2QB1PP/R1B2K1R w - - 0 16",
      "r1b2rk1/2p1qppp/2pp4/p1n5/2P5/1P2PP2/PB1QB1PP/R4K1R b - - 1 16",
      "r1b1r1k1/2p1qppp/2pp4/p1n5/2P5/1P2PP2/PB1QB1PP/R4K1R w - - 2 17",
      "r1b1r1k1/2p1qppp/2pp4/p1n5/2P5/1P2PP2/PB1QBKPP/R6R b - - 3 17",
      "r1b1r1k1/2pnqppp/2pp4/p7/2P5/1P2PP2/PB1QBKPP/R6R w - - 4 18",
      "r1b1r1k1/2pnqppp/2pp4/p7/2P4P/1P2PP2/PB1QBKP1/R6R b - - 0 18",
      "r1b1r1k1/2pnqpp1/2pp4/p6p/2P4P/1P2PP2/PB1QBKP1/R6R w - - 0 19",
      "r1b1r1k1/2pnqpp1/2pp4/p6p/2P1P2P/1P3P2/PB1QBKP1/R6R b - - 0 19",
      "r1b1r1k1/2p1qpp1/2pp4/p3n2p/2P1P2P/1P3P2/PB1QBKP1/R6R w - - 1 20",
      "r1b1r1k1/2p1qpp1/2pp4/p3n2p/2P1P2P/1P3P2/PB1QBKP1/4R2R b - - 2 20",
      "r1b1r1k1/2p1qpp1/2pp4/4n2p/p1P1P2P/1P3P2/PB1QBKP1/4R2R w - - 0 21",
      "r1b1r1k1/2p1qpp1/2pp4/4n2p/pPP1P2P/5P2/PB1QBKP1/4R2R b - - 0 21",
      "r1b1r1k1/2p1qpp1/2pp4/4n2p/1PP1P2P/p4P2/PB1QBKP1/4R2R w - - 0 22",
      "r1b1r1k1/2p1qpp1/2pp4/4n2p/1PP1P2P/p4P2/P2QBKP1/B3R2R b - - 1 22",
      "r1b1r1k1/2p1q1p1/2pp1p2/4n2p/1PP1P2P/p4P2/P2QBKP1/B3R2R w - - 0 23",
      "r1b1r1k1/2p1q1p1/2pp1p2/4n2p/1PP1P2P/p4P2/P2QBKP1/B1R4R b - - 1 23",
      "r3r1k1/2p1q1p1/2ppbp2/4n2p/1PP1P2P/p4P2/P2QBKP1/B1R4R w - - 2 24",
      "r3r1k1/2p1q1p1/2ppbp2/4n2p/1PP1P2P/p4P2/P1RQBKP1/B6R b - - 3 24",
      "4r1k1/2p1q1p1/2ppbp2/4n2p/rPP1P2P/p4P2/P1RQBKP1/B6R w - - 4 25",
      "4r1k1/2p1q1p1/2ppbp2/2P1n2p/rP2P2P/p4P2/P1RQBKP1/B6R b - - 0 25",
      "1r4k1/2p1q1p1/2ppbp2/2P1n2p/rP2P2P/p4P2/P1RQBKP1/B6R w - - 1 26",
      "1r4k1/2p1q1p1/2pPbp2/4n2p/rP2P2P/p4P2/P1RQBKP1/B6R b - - 0 26",
      "1r4k1/4q1p1/2ppbp2/4n2p/rP2P2P/p4P2/P1RQBKP1/B6R w - - 0 27",
      "1r4k1/4q1p1/2ppbp2/4n2p/rP2P2P/p1B2P2/P1RQBKP1/7R b - - 1 27",
      "1r4k1/4q1p1/3pbp2/2p1n2p/rP2P2P/p1B2P2/P1RQBKP1/7R w - - 0 28",
      "1r4k1/4q1p1/3pbp2/2P1n2p/r3P2P/p1B2P2/P1RQBKP1/7R b - - 0 28",
      "1r4k1/4q1p1/4bp2/2p1n2p/r3P2P/p1B2P2/P1RQBKP1/7R w - - 0 29",
      "1r4k1/4q1p1/4bp2/2p1n2p/r3P2P/p1B2P2/P1RQBKP1/3R4 b - - 1 29",
      "1r4k1/4q1p1/4bp2/2p4p/r1n1P2P/p1B2P2/P1RQBKP1/3R4 w - - 2 30",
      "1r4k1/4q1p1/4bp2/2p4p/r1B1P2P/p1B2P2/P1RQ1KP1/3R4 b - - 0 30",
      "1r4k1/4q1p1/4bp2/2p4p/2r1P2P/p1B2P2/P1RQ1KP1/3R4 w - - 0 31",
      "1r4k1/4q1p1/4bp2/2p4p/2r1P2P/p4P2/P1RQ1KP1/B2R4 b - - 1 31",
      "1r4k1/4q1p1/4bp2/2p4p/4P2P/p4P2/P1rQ1KP1/B2R4 w - - 0 32",
      "1r4k1/4q1p1/4bp2/2p4p/4P2P/p4P2/P1Q2KP1/B2R4 b - - 0 32",
      "3r2k1/4q1p1/4bp2/2p4p/4P2P/p4P2/P1Q2KP1/B2R4 w - - 1 33",
      "3r2k1/4q1p1/4bp2/2p4p/4P2P/p2R1P2/P1Q2KP1/B7 b - - 2 33",
      "6k1/4q1p1/4bp2/2p4p/4P2P/p2r1P2/P1Q2KP1/B7 w - - 0 34",
      "6k1/4q1p1/4bp2/2p4p/4P2P/p2Q1P2/P4KP1/B7 b - - 0 34",
      "6k1/3q2p1/4bp2/2p4p/4P2P/p2Q1P2/P4KP1/B7 w - - 1 35",
      "6k1/3Q2p1/4bp2/2p4p/4P2P/p4P2/P4KP1/B7 b - - 0 35",
      "6k1/3b2p1/5p2/2p4p/4P2P/p4P2/P4KP1/B7 w - - 0 36",
      "6k1/3b2p1/5p2/2p4p/4P2P/p1B2P2/P4KP1/8 b - - 1 36",
      "6k1/6p1/4bp2/2p4p/4P2P/p1B2P2/P4KP1/8 w - - 2 37",
      "6k1/6p1/4bp2/2p4p/4P2P/p4P2/P2B1KP1/8 b - - 3 37",
      "6k1/6p1/5p2/2p4p/4P2P/p4P2/b2B1KP1/8 w - - 0 38",
      "6k1/6p1/5p2/2p4p/4P2P/p4P2/b4KP1/2B5 b - - 1 38",
      "6k1/6p1/5p2/7p/2p1P2P/p4P2/b4KP1/2B5 w - - 0 39",
      "6k1/6p1/5p2/7p/2p1P2P/B4P2/b4KP1/8 b - - 0 39",
      "6k1/6p1/5p2/7p/4P2P/B1p2P2/b4KP1/8 w - - 0 40",
      "6k1/6p1/5p2/7p/4P2P/B1p1KP2/b5P1/8 b - - 1 40",
      "6k1/6p1/5p2/7p/2b1P2P/B1p1KP2/6P1/8 w - - 2 41",
      "6k1/6p1/5p2/7p/2bKP2P/B1p2P2/6P1/8 b - - 3 41",
      "6k1/6p1/5p2/7p/3KP2P/B1p2P2/6P1/5b2 w - - 4 42",
      "6k1/6p1/5p2/7p/3KP2P/B1p2PP1/8/5b2 b - - 0 42",
      "6k1/6p1/5p2/7p/3KP2P/B1p2PP1/6b1/8 w - - 1 43",
      "6k1/6p1/5p2/7p/4P2P/B1K2PP1/6b1/8 b - - 0 43",
      "6k1/6p1/5p2/7p/4P2P/B1K2bP1/8/8 w - - 0 44",
      "6k1/6p1/5p2/7p/3KP2P/B4bP1/8/8 b - - 1 44",
      "6k1/6p1/5p2/7p/3KP1bP/B5P1/8/8 w - - 2 45",
      "6k1/6p1/5p2/3K3p/4P1bP/B5P1/8/8 b - - 3 45",
      "6k1/6p1/5p2/3K3p/4P2P/B4bP1/8/8 w - - 4 46",
      "6k1/6p1/5p2/7p/3KP2P/B4bP1/8/8 b - - 5 46",
      "6k1/6p1/5p2/7p/3KP1bP/B5P1/8/8 w - - 6 47",
      "6k1/6p1/5p2/3K3p/4P1bP/B5P1/8/8 b - - 7 47",
      "6k1/6p1/5p2/3K3p/4P2P/B4bP1/8/8 w - - 8 48",
      "6k1/6p1/5p2/7p/3KP2P/B4bP1/8/8 b - - 9 48",
    ]
    for (index, history) in chess.getMoveHistory().enumerated() {
      XCTAssertEqual(history.fen, fens19[index], "Sinquefield(g20): FEN move (index)")
    }

    pgn = pgns.removeFirst()
    chess = try pgn.validate()
    XCTAssertEqual(chess.getTag("Event")?.value, "Sinquefield Cup", "Sinquefield(g21): event")
    XCTAssertEqual(chess.getTag("White")?.value, "Carlsen, Magnus", "Sinquefield(g21): white")
    XCTAssertEqual(chess.getTag("Black")?.value, "So, Wesley", "Sinquefield(g21): black")
    XCTAssertEqual(chess.getMoveCount(), 52, "Sinquefield(g21): move count")
    XCTAssertEqual(
      chess.getMoveHistory().map { $0.pcn }.joined(separator: ","),
      "d2d4,g8f6,c2c4,e7e6,g1f3,d7d5,b1c3,c7c5,e2e3,b8c6,c4d5,f6d5,f1d3,f8e7,e1g1,e8g8,d1e2,b7b6,f1d1,c5d4,c3d5,d8d5,e3d4,c8b7,d3e4,d5d6,g2g3,e7f6,c1g5,d6e7,g5f6,e7f6,f3e5,f8c8,e2b5,c6a5,e4b7,a5b7,b5d7,b7c5,d4c5,f6e5,c5c6,h7h5,d1d6,e5b2,a1d1,b2c2,h2h4,c8d8,d7d8,a8d8,d6d8,g8h7,d8d7,a7a5,c6c7,b6b5,d1d2,c2c1,d2d1,c1c2,d1d4,f7f6,d4d2,c2c1,d2d1,c1c2,d1d6,c2b1,d6d1,b1c2,d1d6,c2b1,g1g2,b1e4,g2h2,e4c2,d6d2,c2c3,d2d6,c3c2,d6d2,c2c3,d2e2,e6e5,e2d2,b5b4,d2d6,h7g6,h2g2,c3c2,d7e7,c2e4,g2g1,e4e1,g1g2,e1e4,g2g1,e4e1,g1g2,e1e4",
      "Sinquefield(g21): PCN move history"
    )
    let fens20 = [
      "rnbqkbnr/pppppppp/8/8/3P4/8/PPP1PPPP/RNBQKBNR b KQkq - 0 1",
      "rnbqkb1r/pppppppp/5n2/8/3P4/8/PPP1PPPP/RNBQKBNR w KQkq - 1 2",
      "rnbqkb1r/pppppppp/5n2/8/2PP4/8/PP2PPPP/RNBQKBNR b KQkq - 0 2",
      "rnbqkb1r/pppp1ppp/4pn2/8/2PP4/8/PP2PPPP/RNBQKBNR w KQkq - 0 3",
      "rnbqkb1r/pppp1ppp/4pn2/8/2PP4/5N2/PP2PPPP/RNBQKB1R b KQkq - 1 3",
      "rnbqkb1r/ppp2ppp/4pn2/3p4/2PP4/5N2/PP2PPPP/RNBQKB1R w KQkq - 0 4",
      "rnbqkb1r/ppp2ppp/4pn2/3p4/2PP4/2N2N2/PP2PPPP/R1BQKB1R b KQkq - 1 4",
      "rnbqkb1r/pp3ppp/4pn2/2pp4/2PP4/2N2N2/PP2PPPP/R1BQKB1R w KQkq - 0 5",
      "rnbqkb1r/pp3ppp/4pn2/2pp4/2PP4/2N1PN2/PP3PPP/R1BQKB1R b KQkq - 0 5",
      "r1bqkb1r/pp3ppp/2n1pn2/2pp4/2PP4/2N1PN2/PP3PPP/R1BQKB1R w KQkq - 1 6",
      "r1bqkb1r/pp3ppp/2n1pn2/2pP4/3P4/2N1PN2/PP3PPP/R1BQKB1R b KQkq - 0 6",
      "r1bqkb1r/pp3ppp/2n1p3/2pn4/3P4/2N1PN2/PP3PPP/R1BQKB1R w KQkq - 0 7",
      "r1bqkb1r/pp3ppp/2n1p3/2pn4/3P4/2NBPN2/PP3PPP/R1BQK2R b KQkq - 1 7",
      "r1bqk2r/pp2bppp/2n1p3/2pn4/3P4/2NBPN2/PP3PPP/R1BQK2R w KQkq - 2 8",
      "r1bqk2r/pp2bppp/2n1p3/2pn4/3P4/2NBPN2/PP3PPP/R1BQ1RK1 b kq - 3 8",
      "r1bq1rk1/pp2bppp/2n1p3/2pn4/3P4/2NBPN2/PP3PPP/R1BQ1RK1 w - - 4 9",
      "r1bq1rk1/pp2bppp/2n1p3/2pn4/3P4/2NBPN2/PP2QPPP/R1B2RK1 b - - 5 9",
      "r1bq1rk1/p3bppp/1pn1p3/2pn4/3P4/2NBPN2/PP2QPPP/R1B2RK1 w - - 0 10",
      "r1bq1rk1/p3bppp/1pn1p3/2pn4/3P4/2NBPN2/PP2QPPP/R1BR2K1 b - - 1 10",
      "r1bq1rk1/p3bppp/1pn1p3/3n4/3p4/2NBPN2/PP2QPPP/R1BR2K1 w - - 0 11",
      "r1bq1rk1/p3bppp/1pn1p3/3N4/3p4/3BPN2/PP2QPPP/R1BR2K1 b - - 0 11",
      "r1b2rk1/p3bppp/1pn1p3/3q4/3p4/3BPN2/PP2QPPP/R1BR2K1 w - - 0 12",
      "r1b2rk1/p3bppp/1pn1p3/3q4/3P4/3B1N2/PP2QPPP/R1BR2K1 b - - 0 12",
      "r4rk1/pb2bppp/1pn1p3/3q4/3P4/3B1N2/PP2QPPP/R1BR2K1 w - - 1 13",
      "r4rk1/pb2bppp/1pn1p3/3q4/3PB3/5N2/PP2QPPP/R1BR2K1 b - - 2 13",
      "r4rk1/pb2bppp/1pnqp3/8/3PB3/5N2/PP2QPPP/R1BR2K1 w - - 3 14",
      "r4rk1/pb2bppp/1pnqp3/8/3PB3/5NP1/PP2QP1P/R1BR2K1 b - - 0 14",
      "r4rk1/pb3ppp/1pnqpb2/8/3PB3/5NP1/PP2QP1P/R1BR2K1 w - - 1 15",
      "r4rk1/pb3ppp/1pnqpb2/6B1/3PB3/5NP1/PP2QP1P/R2R2K1 b - - 2 15",
      "r4rk1/pb2qppp/1pn1pb2/6B1/3PB3/5NP1/PP2QP1P/R2R2K1 w - - 3 16",
      "r4rk1/pb2qppp/1pn1pB2/8/3PB3/5NP1/PP2QP1P/R2R2K1 b - - 0 16",
      "r4rk1/pb3ppp/1pn1pq2/8/3PB3/5NP1/PP2QP1P/R2R2K1 w - - 0 17",
      "r4rk1/pb3ppp/1pn1pq2/4N3/3PB3/6P1/PP2QP1P/R2R2K1 b - - 1 17",
      "r1r3k1/pb3ppp/1pn1pq2/4N3/3PB3/6P1/PP2QP1P/R2R2K1 w - - 2 18",
      "r1r3k1/pb3ppp/1pn1pq2/1Q2N3/3PB3/6P1/PP3P1P/R2R2K1 b - - 3 18",
      "r1r3k1/pb3ppp/1p2pq2/nQ2N3/3PB3/6P1/PP3P1P/R2R2K1 w - - 4 19",
      "r1r3k1/pB3ppp/1p2pq2/nQ2N3/3P4/6P1/PP3P1P/R2R2K1 b - - 0 19",
      "r1r3k1/pn3ppp/1p2pq2/1Q2N3/3P4/6P1/PP3P1P/R2R2K1 w - - 0 20",
      "r1r3k1/pn1Q1ppp/1p2pq2/4N3/3P4/6P1/PP3P1P/R2R2K1 b - - 1 20",
      "r1r3k1/p2Q1ppp/1p2pq2/2n1N3/3P4/6P1/PP3P1P/R2R2K1 w - - 2 21",
      "r1r3k1/p2Q1ppp/1p2pq2/2P1N3/8/6P1/PP3P1P/R2R2K1 b - - 0 21",
      "r1r3k1/p2Q1ppp/1p2p3/2P1q3/8/6P1/PP3P1P/R2R2K1 w - - 0 22",
      "r1r3k1/p2Q1ppp/1pP1p3/4q3/8/6P1/PP3P1P/R2R2K1 b - - 0 22",
      "r1r3k1/p2Q1pp1/1pP1p3/4q2p/8/6P1/PP3P1P/R2R2K1 w - - 0 23",
      "r1r3k1/p2Q1pp1/1pPRp3/4q2p/8/6P1/PP3P1P/R5K1 b - - 1 23",
      "r1r3k1/p2Q1pp1/1pPRp3/7p/8/6P1/Pq3P1P/R5K1 w - - 0 24",
      "r1r3k1/p2Q1pp1/1pPRp3/7p/8/6P1/Pq3P1P/3R2K1 b - - 1 24",
      "r1r3k1/p2Q1pp1/1pPRp3/7p/8/6P1/P1q2P1P/3R2K1 w - - 2 25",
      "r1r3k1/p2Q1pp1/1pPRp3/7p/7P/6P1/P1q2P2/3R2K1 b - - 0 25",
      "r2r2k1/p2Q1pp1/1pPRp3/7p/7P/6P1/P1q2P2/3R2K1 w - - 1 26",
      "r2Q2k1/p4pp1/1pPRp3/7p/7P/6P1/P1q2P2/3R2K1 b - - 0 26",
      "3r2k1/p4pp1/1pPRp3/7p/7P/6P1/P1q2P2/3R2K1 w - - 0 27",
      "3R2k1/p4pp1/1pP1p3/7p/7P/6P1/P1q2P2/3R2K1 b - - 0 27",
      "3R4/p4ppk/1pP1p3/7p/7P/6P1/P1q2P2/3R2K1 w - - 1 28",
      "8/p2R1ppk/1pP1p3/7p/7P/6P1/P1q2P2/3R2K1 b - - 2 28",
      "8/3R1ppk/1pP1p3/p6p/7P/6P1/P1q2P2/3R2K1 w - - 0 29",
      "8/2PR1ppk/1p2p3/p6p/7P/6P1/P1q2P2/3R2K1 b - - 0 29",
      "8/2PR1ppk/4p3/pp5p/7P/6P1/P1q2P2/3R2K1 w - - 0 30",
      "8/2PR1ppk/4p3/pp5p/7P/6P1/P1qR1P2/6K1 b - - 1 30",
      "8/2PR1ppk/4p3/pp5p/7P/6P1/P2R1P2/2q3K1 w - - 2 31",
      "8/2PR1ppk/4p3/pp5p/7P/6P1/P4P2/2qR2K1 b - - 3 31",
      "8/2PR1ppk/4p3/pp5p/7P/6P1/P1q2P2/3R2K1 w - - 4 32",
      "8/2PR1ppk/4p3/pp5p/3R3P/6P1/P1q2P2/6K1 b - - 5 32",
      "8/2PR2pk/4pp2/pp5p/3R3P/6P1/P1q2P2/6K1 w - - 0 33",
      "8/2PR2pk/4pp2/pp5p/7P/6P1/P1qR1P2/6K1 b - - 1 33",
      "8/2PR2pk/4pp2/pp5p/7P/6P1/P2R1P2/2q3K1 w - - 2 34",
      "8/2PR2pk/4pp2/pp5p/7P/6P1/P4P2/2qR2K1 b - - 3 34",
      "8/2PR2pk/4pp2/pp5p/7P/6P1/P1q2P2/3R2K1 w - - 4 35",
      "8/2PR2pk/3Rpp2/pp5p/7P/6P1/P1q2P2/6K1 b - - 5 35",
      "8/2PR2pk/3Rpp2/pp5p/7P/6P1/P4P2/1q4K1 w - - 6 36",
      "8/2PR2pk/4pp2/pp5p/7P/6P1/P4P2/1q1R2K1 b - - 7 36",
      "8/2PR2pk/4pp2/pp5p/7P/6P1/P1q2P2/3R2K1 w - - 8 37",
      "8/2PR2pk/3Rpp2/pp5p/7P/6P1/P1q2P2/6K1 b - - 9 37",
      "8/2PR2pk/3Rpp2/pp5p/7P/6P1/P4P2/1q4K1 w - - 10 38",
      "8/2PR2pk/3Rpp2/pp5p/7P/6P1/P4PK1/1q6 b - - 11 38",
      "8/2PR2pk/3Rpp2/pp5p/4q2P/6P1/P4PK1/8 w - - 12 39",
      "8/2PR2pk/3Rpp2/pp5p/4q2P/6P1/P4P1K/8 b - - 13 39",
      "8/2PR2pk/3Rpp2/pp5p/7P/6P1/P1q2P1K/8 w - - 14 40",
      "8/2PR2pk/4pp2/pp5p/7P/6P1/P1qR1P1K/8 b - - 15 40",
      "8/2PR2pk/4pp2/pp5p/7P/2q3P1/P2R1P1K/8 w - - 16 41",
      "8/2PR2pk/3Rpp2/pp5p/7P/2q3P1/P4P1K/8 b - - 17 41",
      "8/2PR2pk/3Rpp2/pp5p/7P/6P1/P1q2P1K/8 w - - 18 42",
      "8/2PR2pk/4pp2/pp5p/7P/6P1/P1qR1P1K/8 b - - 19 42",
      "8/2PR2pk/4pp2/pp5p/7P/2q3P1/P2R1P1K/8 w - - 20 43",
      "8/2PR2pk/4pp2/pp5p/7P/2q3P1/P3RP1K/8 b - - 21 43",
      "8/2PR2pk/5p2/pp2p2p/7P/2q3P1/P3RP1K/8 w - - 0 44",
      "8/2PR2pk/5p2/pp2p2p/7P/2q3P1/P2R1P1K/8 b - - 1 44",
      "8/2PR2pk/5p2/p3p2p/1p5P/2q3P1/P2R1P1K/8 w - - 0 45",
      "8/2PR2pk/3R1p2/p3p2p/1p5P/2q3P1/P4P1K/8 b - - 1 45",
      "8/2PR2p1/3R1pk1/p3p2p/1p5P/2q3P1/P4P1K/8 w - - 2 46",
      "8/2PR2p1/3R1pk1/p3p2p/1p5P/2q3P1/P4PK1/8 b - - 3 46",
      "8/2PR2p1/3R1pk1/p3p2p/1p5P/6P1/P1q2PK1/8 w - - 4 47",
      "8/2P1R1p1/3R1pk1/p3p2p/1p5P/6P1/P1q2PK1/8 b - - 5 47",
      "8/2P1R1p1/3R1pk1/p3p2p/1p2q2P/6P1/P4PK1/8 w - - 6 48",
      "8/2P1R1p1/3R1pk1/p3p2p/1p2q2P/6P1/P4P2/6K1 b - - 7 48",
      "8/2P1R1p1/3R1pk1/p3p2p/1p5P/6P1/P4P2/4q1K1 w - - 8 49",
      "8/2P1R1p1/3R1pk1/p3p2p/1p5P/6P1/P4PK1/4q3 b - - 9 49",
      "8/2P1R1p1/3R1pk1/p3p2p/1p2q2P/6P1/P4PK1/8 w - - 10 50",
      "8/2P1R1p1/3R1pk1/p3p2p/1p2q2P/6P1/P4P2/6K1 b - - 11 50",
      "8/2P1R1p1/3R1pk1/p3p2p/1p5P/6P1/P4P2/4q1K1 w - - 12 51",
      "8/2P1R1p1/3R1pk1/p3p2p/1p5P/6P1/P4PK1/4q3 b - - 13 51",
      "8/2P1R1p1/3R1pk1/p3p2p/1p2q2P/6P1/P4PK1/8 w - - 14 52",
    ]
    for (index, history) in chess.getMoveHistory().enumerated() {
      XCTAssertEqual(history.fen, fens20[index], "Sinquefield(g21): FEN move (index)")
    }

    pgn = pgns.removeFirst()
    chess = try pgn.validate()
    XCTAssertEqual(chess.getTag("Event")?.value, "Sinquefield Cup", "Sinquefield(g22): event")
    XCTAssertEqual(
      chess.getTag("White")?.value, "Vachier-Lagrave, Maxime", "Sinquefield(g22): white")
    XCTAssertEqual(chess.getTag("Black")?.value, "Caruana, Fabiano", "Sinquefield(g22): black")
    XCTAssertEqual(chess.getMoveCount(), 40, "Sinquefield(g22): move count")
    XCTAssertEqual(
      chess.getMoveHistory().map { $0.pcn }.joined(separator: ","),
      "e2e4,e7e5,g1f3,g8f6,f3e5,d7d6,e5f3,f6e4,b1c3,e4c3,d2c3,f8e7,c1e3,b8c6,d1d2,c8e6,e1c1,d8d7,c1b1,e7f6,h2h4,e8c8,f3d4,c6d4,e3d4,f6e5,f1e2,d7a4,b2b3,a4a5,f2f4,e5d4,d2d4,g7g6,h4h5,a5c5,d4d2,h8e8,e2f3,e6f5,h5g6,h7g6,h1h7,e8e7,g2g4,f5d7,d1e1,e7e1,d2e1,d8e8,e1d2,c5e3,d2e3,e8e3,h7h8,e3e8,h8e8,d7e8,b1c1,b7b6,g4g5,c8d8,c1d2,e8d7,f3e4,d8e7,d2e3,d7e6,c3c4,c7c5,e3f3,e6d7,f3e3,d7e6,e3f3,e6d7,f3e3,d7e6,e3f3",
      "Sinquefield(g22): PCN move history"
    )
    let fens21 = [
      "rnbqkbnr/pppppppp/8/8/4P3/8/PPPP1PPP/RNBQKBNR b KQkq - 0 1",
      "rnbqkbnr/pppp1ppp/8/4p3/4P3/8/PPPP1PPP/RNBQKBNR w KQkq - 0 2",
      "rnbqkbnr/pppp1ppp/8/4p3/4P3/5N2/PPPP1PPP/RNBQKB1R b KQkq - 1 2",
      "rnbqkb1r/pppp1ppp/5n2/4p3/4P3/5N2/PPPP1PPP/RNBQKB1R w KQkq - 2 3",
      "rnbqkb1r/pppp1ppp/5n2/4N3/4P3/8/PPPP1PPP/RNBQKB1R b KQkq - 0 3",
      "rnbqkb1r/ppp2ppp/3p1n2/4N3/4P3/8/PPPP1PPP/RNBQKB1R w KQkq - 0 4",
      "rnbqkb1r/ppp2ppp/3p1n2/8/4P3/5N2/PPPP1PPP/RNBQKB1R b KQkq - 1 4",
      "rnbqkb1r/ppp2ppp/3p4/8/4n3/5N2/PPPP1PPP/RNBQKB1R w KQkq - 0 5",
      "rnbqkb1r/ppp2ppp/3p4/8/4n3/2N2N2/PPPP1PPP/R1BQKB1R b KQkq - 1 5",
      "rnbqkb1r/ppp2ppp/3p4/8/8/2n2N2/PPPP1PPP/R1BQKB1R w KQkq - 0 6",
      "rnbqkb1r/ppp2ppp/3p4/8/8/2P2N2/PPP2PPP/R1BQKB1R b KQkq - 0 6",
      "rnbqk2r/ppp1bppp/3p4/8/8/2P2N2/PPP2PPP/R1BQKB1R w KQkq - 1 7",
      "rnbqk2r/ppp1bppp/3p4/8/8/2P1BN2/PPP2PPP/R2QKB1R b KQkq - 2 7",
      "r1bqk2r/ppp1bppp/2np4/8/8/2P1BN2/PPP2PPP/R2QKB1R w KQkq - 3 8",
      "r1bqk2r/ppp1bppp/2np4/8/8/2P1BN2/PPPQ1PPP/R3KB1R b KQkq - 4 8",
      "r2qk2r/ppp1bppp/2npb3/8/8/2P1BN2/PPPQ1PPP/R3KB1R w KQkq - 5 9",
      "r2qk2r/ppp1bppp/2npb3/8/8/2P1BN2/PPPQ1PPP/2KR1B1R b kq - 6 9",
      "r3k2r/pppqbppp/2npb3/8/8/2P1BN2/PPPQ1PPP/2KR1B1R w kq - 7 10",
      "r3k2r/pppqbppp/2npb3/8/8/2P1BN2/PPPQ1PPP/1K1R1B1R b kq - 8 10",
      "r3k2r/pppq1ppp/2npbb2/8/8/2P1BN2/PPPQ1PPP/1K1R1B1R w kq - 9 11",
      "r3k2r/pppq1ppp/2npbb2/8/7P/2P1BN2/PPPQ1PP1/1K1R1B1R b kq - 0 11",
      "2kr3r/pppq1ppp/2npbb2/8/7P/2P1BN2/PPPQ1PP1/1K1R1B1R w - - 1 12",
      "2kr3r/pppq1ppp/2npbb2/8/3N3P/2P1B3/PPPQ1PP1/1K1R1B1R b - - 2 12",
      "2kr3r/pppq1ppp/3pbb2/8/3n3P/2P1B3/PPPQ1PP1/1K1R1B1R w - - 0 13",
      "2kr3r/pppq1ppp/3pbb2/8/3B3P/2P5/PPPQ1PP1/1K1R1B1R b - - 0 13",
      "2kr3r/pppq1ppp/3pb3/4b3/3B3P/2P5/PPPQ1PP1/1K1R1B1R w - - 1 14",
      "2kr3r/pppq1ppp/3pb3/4b3/3B3P/2P5/PPPQBPP1/1K1R3R b - - 2 14",
      "2kr3r/ppp2ppp/3pb3/4b3/q2B3P/2P5/PPPQBPP1/1K1R3R w - - 3 15",
      "2kr3r/ppp2ppp/3pb3/4b3/q2B3P/1PP5/P1PQBPP1/1K1R3R b - - 0 15",
      "2kr3r/ppp2ppp/3pb3/q3b3/3B3P/1PP5/P1PQBPP1/1K1R3R w - - 1 16",
      "2kr3r/ppp2ppp/3pb3/q3b3/3B1P1P/1PP5/P1PQB1P1/1K1R3R b - - 0 16",
      "2kr3r/ppp2ppp/3pb3/q7/3b1P1P/1PP5/P1PQB1P1/1K1R3R w - - 0 17",
      "2kr3r/ppp2ppp/3pb3/q7/3Q1P1P/1PP5/P1P1B1P1/1K1R3R b - - 0 17",
      "2kr3r/ppp2p1p/3pb1p1/q7/3Q1P1P/1PP5/P1P1B1P1/1K1R3R w - - 0 18",
      "2kr3r/ppp2p1p/3pb1p1/q6P/3Q1P2/1PP5/P1P1B1P1/1K1R3R b - - 0 18",
      "2kr3r/ppp2p1p/3pb1p1/2q4P/3Q1P2/1PP5/P1P1B1P1/1K1R3R w - - 1 19",
      "2kr3r/ppp2p1p/3pb1p1/2q4P/5P2/1PP5/P1PQB1P1/1K1R3R b - - 2 19",
      "2krr3/ppp2p1p/3pb1p1/2q4P/5P2/1PP5/P1PQB1P1/1K1R3R w - - 3 20",
      "2krr3/ppp2p1p/3pb1p1/2q4P/5P2/1PP2B2/P1PQ2P1/1K1R3R b - - 4 20",
      "2krr3/ppp2p1p/3p2p1/2q2b1P/5P2/1PP2B2/P1PQ2P1/1K1R3R w - - 5 21",
      "2krr3/ppp2p1p/3p2P1/2q2b2/5P2/1PP2B2/P1PQ2P1/1K1R3R b - - 0 21",
      "2krr3/ppp2p2/3p2p1/2q2b2/5P2/1PP2B2/P1PQ2P1/1K1R3R w - - 0 22",
      "2krr3/ppp2p1R/3p2p1/2q2b2/5P2/1PP2B2/P1PQ2P1/1K1R4 b - - 1 22",
      "2kr4/ppp1rp1R/3p2p1/2q2b2/5P2/1PP2B2/P1PQ2P1/1K1R4 w - - 2 23",
      "2kr4/ppp1rp1R/3p2p1/2q2b2/5PP1/1PP2B2/P1PQ4/1K1R4 b - - 0 23",
      "2kr4/pppbrp1R/3p2p1/2q5/5PP1/1PP2B2/P1PQ4/1K1R4 w - - 1 24",
      "2kr4/pppbrp1R/3p2p1/2q5/5PP1/1PP2B2/P1PQ4/1K2R3 b - - 2 24",
      "2kr4/pppb1p1R/3p2p1/2q5/5PP1/1PP2B2/P1PQ4/1K2r3 w - - 0 25",
      "2kr4/pppb1p1R/3p2p1/2q5/5PP1/1PP2B2/P1P5/1K2Q3 b - - 0 25",
      "2k1r3/pppb1p1R/3p2p1/2q5/5PP1/1PP2B2/P1P5/1K2Q3 w - - 1 26",
      "2k1r3/pppb1p1R/3p2p1/2q5/5PP1/1PP2B2/P1PQ4/1K6 b - - 2 26",
      "2k1r3/pppb1p1R/3p2p1/8/5PP1/1PP1qB2/P1PQ4/1K6 w - - 3 27",
      "2k1r3/pppb1p1R/3p2p1/8/5PP1/1PP1QB2/P1P5/1K6 b - - 0 27",
      "2k5/pppb1p1R/3p2p1/8/5PP1/1PP1rB2/P1P5/1K6 w - - 0 28",
      "2k4R/pppb1p2/3p2p1/8/5PP1/1PP1rB2/P1P5/1K6 b - - 1 28",
      "2k1r2R/pppb1p2/3p2p1/8/5PP1/1PP2B2/P1P5/1K6 w - - 2 29",
      "2k1R3/pppb1p2/3p2p1/8/5PP1/1PP2B2/P1P5/1K6 b - - 0 29",
      "2k1b3/ppp2p2/3p2p1/8/5PP1/1PP2B2/P1P5/1K6 w - - 0 30",
      "2k1b3/ppp2p2/3p2p1/8/5PP1/1PP2B2/P1P5/2K5 b - - 1 30",
      "2k1b3/p1p2p2/1p1p2p1/8/5PP1/1PP2B2/P1P5/2K5 w - - 0 31",
      "2k1b3/p1p2p2/1p1p2p1/6P1/5P2/1PP2B2/P1P5/2K5 b - - 0 31",
      "3kb3/p1p2p2/1p1p2p1/6P1/5P2/1PP2B2/P1P5/2K5 w - - 1 32",
      "3kb3/p1p2p2/1p1p2p1/6P1/5P2/1PP2B2/P1PK4/8 b - - 2 32",
      "3k4/p1pb1p2/1p1p2p1/6P1/5P2/1PP2B2/P1PK4/8 w - - 3 33",
      "3k4/p1pb1p2/1p1p2p1/6P1/4BP2/1PP5/P1PK4/8 b - - 4 33",
      "8/p1pbkp2/1p1p2p1/6P1/4BP2/1PP5/P1PK4/8 w - - 5 34",
      "8/p1pbkp2/1p1p2p1/6P1/4BP2/1PP1K3/P1P5/8 b - - 6 34",
      "8/p1p1kp2/1p1pb1p1/6P1/4BP2/1PP1K3/P1P5/8 w - - 7 35",
      "8/p1p1kp2/1p1pb1p1/6P1/2P1BP2/1P2K3/P1P5/8 b - - 0 35",
      "8/p3kp2/1p1pb1p1/2p3P1/2P1BP2/1P2K3/P1P5/8 w - - 0 36",
      "8/p3kp2/1p1pb1p1/2p3P1/2P1BP2/1P3K2/P1P5/8 b - - 1 36",
      "8/p2bkp2/1p1p2p1/2p3P1/2P1BP2/1P3K2/P1P5/8 w - - 2 37",
      "8/p2bkp2/1p1p2p1/2p3P1/2P1BP2/1P2K3/P1P5/8 b - - 3 37",
      "8/p3kp2/1p1pb1p1/2p3P1/2P1BP2/1P2K3/P1P5/8 w - - 4 38",
      "8/p3kp2/1p1pb1p1/2p3P1/2P1BP2/1P3K2/P1P5/8 b - - 5 38",
      "8/p2bkp2/1p1p2p1/2p3P1/2P1BP2/1P3K2/P1P5/8 w - - 6 39",
      "8/p2bkp2/1p1p2p1/2p3P1/2P1BP2/1P2K3/P1P5/8 b - - 7 39",
      "8/p3kp2/1p1pb1p1/2p3P1/2P1BP2/1P2K3/P1P5/8 w - - 8 40",
      "8/p3kp2/1p1pb1p1/2p3P1/2P1BP2/1P3K2/P1P5/8 b - - 9 40",
    ]
    for (index, history) in chess.getMoveHistory().enumerated() {
      XCTAssertEqual(history.fen, fens21[index], "Sinquefield(g22): FEN move (index)")
    }

    pgn = pgns.removeFirst()
    chess = try pgn.validate()
    XCTAssertEqual(chess.getTag("Event")?.value, "Sinquefield Cup", "Sinquefield(g23): event")
    XCTAssertEqual(chess.getTag("White")?.value, "Nakamura, Hikaru", "Sinquefield(g23): white")
    XCTAssertEqual(
      chess.getTag("Black")?.value, "Mamedyarov, Shakhriyar", "Sinquefield(g23): black")
    XCTAssertEqual(chess.getMoveCount(), 52, "Sinquefield(g23): move count")
    XCTAssertEqual(
      chess.getMoveHistory().map { $0.pcn }.joined(separator: ","),
      "d2d4,d7d5,c2c4,e7e6,g1f3,c7c5,c4d5,e6d5,g2g3,b8c6,f1g2,g8f6,e1g1,f8e7,b1c3,e8g8,h2h3,f6e4,d4c5,e7c5,c1f4,e4c3,b2c3,c8f5,f3d2,f8e8,g3g4,f5g6,e2e3,c5b6,d1b3,e8e7,f1d1,e7d7,a2a4,a8c8,a1c1,h7h6,b3a2,b6c7,d2b3,b7b6,a2d2,f7f5,c3c4,c7f4,e3f4,d5d4,g2d5,g6f7,d2e2,f5g4,h3g4,d8f6,e2f3,d7d8,b3d2,d8f8,d2e4,f6e7,e4g3,e7f6,g3e4,f6e7,e4g3,e7f6,g3f5,g8h8,d5f7,f8f7,c4c5,c8c7,c5b6,a7b6,d1e1,f7f8,f3e4,g7g6,f5d4,f6d4,e4d4,c6d4,c1c7,d4f3,g1f1,f3e1,f1e1,f8f4,c7c6,h8g7,c6b6,f4a4,f2f3,g6g5,b6b7,g7g6,b7b6,g6g7,b6b7,g7g6,b7b6,g6g7,b6b7",
      "Sinquefield(g23): PCN move history"
    )
    let fens22 = [
      "rnbqkbnr/pppppppp/8/8/3P4/8/PPP1PPPP/RNBQKBNR b KQkq - 0 1",
      "rnbqkbnr/ppp1pppp/8/3p4/3P4/8/PPP1PPPP/RNBQKBNR w KQkq - 0 2",
      "rnbqkbnr/ppp1pppp/8/3p4/2PP4/8/PP2PPPP/RNBQKBNR b KQkq - 0 2",
      "rnbqkbnr/ppp2ppp/4p3/3p4/2PP4/8/PP2PPPP/RNBQKBNR w KQkq - 0 3",
      "rnbqkbnr/ppp2ppp/4p3/3p4/2PP4/5N2/PP2PPPP/RNBQKB1R b KQkq - 1 3",
      "rnbqkbnr/pp3ppp/4p3/2pp4/2PP4/5N2/PP2PPPP/RNBQKB1R w KQkq - 0 4",
      "rnbqkbnr/pp3ppp/4p3/2pP4/3P4/5N2/PP2PPPP/RNBQKB1R b KQkq - 0 4",
      "rnbqkbnr/pp3ppp/8/2pp4/3P4/5N2/PP2PPPP/RNBQKB1R w KQkq - 0 5",
      "rnbqkbnr/pp3ppp/8/2pp4/3P4/5NP1/PP2PP1P/RNBQKB1R b KQkq - 0 5",
      "r1bqkbnr/pp3ppp/2n5/2pp4/3P4/5NP1/PP2PP1P/RNBQKB1R w KQkq - 1 6",
      "r1bqkbnr/pp3ppp/2n5/2pp4/3P4/5NP1/PP2PPBP/RNBQK2R b KQkq - 2 6",
      "r1bqkb1r/pp3ppp/2n2n2/2pp4/3P4/5NP1/PP2PPBP/RNBQK2R w KQkq - 3 7",
      "r1bqkb1r/pp3ppp/2n2n2/2pp4/3P4/5NP1/PP2PPBP/RNBQ1RK1 b kq - 4 7",
      "r1bqk2r/pp2bppp/2n2n2/2pp4/3P4/5NP1/PP2PPBP/RNBQ1RK1 w kq - 5 8",
      "r1bqk2r/pp2bppp/2n2n2/2pp4/3P4/2N2NP1/PP2PPBP/R1BQ1RK1 b kq - 6 8",
      "r1bq1rk1/pp2bppp/2n2n2/2pp4/3P4/2N2NP1/PP2PPBP/R1BQ1RK1 w - - 7 9",
      "r1bq1rk1/pp2bppp/2n2n2/2pp4/3P4/2N2NPP/PP2PPB1/R1BQ1RK1 b - - 0 9",
      "r1bq1rk1/pp2bppp/2n5/2pp4/3Pn3/2N2NPP/PP2PPB1/R1BQ1RK1 w - - 1 10",
      "r1bq1rk1/pp2bppp/2n5/2Pp4/4n3/2N2NPP/PP2PPB1/R1BQ1RK1 b - - 0 10",
      "r1bq1rk1/pp3ppp/2n5/2bp4/4n3/2N2NPP/PP2PPB1/R1BQ1RK1 w - - 0 11",
      "r1bq1rk1/pp3ppp/2n5/2bp4/4nB2/2N2NPP/PP2PPB1/R2Q1RK1 b - - 1 11",
      "r1bq1rk1/pp3ppp/2n5/2bp4/5B2/2n2NPP/PP2PPB1/R2Q1RK1 w - - 0 12",
      "r1bq1rk1/pp3ppp/2n5/2bp4/5B2/2P2NPP/P3PPB1/R2Q1RK1 b - - 0 12",
      "r2q1rk1/pp3ppp/2n5/2bp1b2/5B2/2P2NPP/P3PPB1/R2Q1RK1 w - - 1 13",
      "r2q1rk1/pp3ppp/2n5/2bp1b2/5B2/2P3PP/P2NPPB1/R2Q1RK1 b - - 2 13",
      "r2qr1k1/pp3ppp/2n5/2bp1b2/5B2/2P3PP/P2NPPB1/R2Q1RK1 w - - 3 14",
      "r2qr1k1/pp3ppp/2n5/2bp1b2/5BP1/2P4P/P2NPPB1/R2Q1RK1 b - - 0 14",
      "r2qr1k1/pp3ppp/2n3b1/2bp4/5BP1/2P4P/P2NPPB1/R2Q1RK1 w - - 1 15",
      "r2qr1k1/pp3ppp/2n3b1/2bp4/5BP1/2P1P2P/P2N1PB1/R2Q1RK1 b - - 0 15",
      "r2qr1k1/pp3ppp/1bn3b1/3p4/5BP1/2P1P2P/P2N1PB1/R2Q1RK1 w - - 1 16",
      "r2qr1k1/pp3ppp/1bn3b1/3p4/5BP1/1QP1P2P/P2N1PB1/R4RK1 b - - 2 16",
      "r2q2k1/pp2rppp/1bn3b1/3p4/5BP1/1QP1P2P/P2N1PB1/R4RK1 w - - 3 17",
      "r2q2k1/pp2rppp/1bn3b1/3p4/5BP1/1QP1P2P/P2N1PB1/R2R2K1 b - - 4 17",
      "r2q2k1/pp1r1ppp/1bn3b1/3p4/5BP1/1QP1P2P/P2N1PB1/R2R2K1 w - - 5 18",
      "r2q2k1/pp1r1ppp/1bn3b1/3p4/P4BP1/1QP1P2P/3N1PB1/R2R2K1 b - - 0 18",
      "2rq2k1/pp1r1ppp/1bn3b1/3p4/P4BP1/1QP1P2P/3N1PB1/R2R2K1 w - - 1 19",
      "2rq2k1/pp1r1ppp/1bn3b1/3p4/P4BP1/1QP1P2P/3N1PB1/2RR2K1 b - - 2 19",
      "2rq2k1/pp1r1pp1/1bn3bp/3p4/P4BP1/1QP1P2P/3N1PB1/2RR2K1 w - - 0 20",
      "2rq2k1/pp1r1pp1/1bn3bp/3p4/P4BP1/2P1P2P/Q2N1PB1/2RR2K1 b - - 1 20",
      "2rq2k1/ppbr1pp1/2n3bp/3p4/P4BP1/2P1P2P/Q2N1PB1/2RR2K1 w - - 2 21",
      "2rq2k1/ppbr1pp1/2n3bp/3p4/P4BP1/1NP1P2P/Q4PB1/2RR2K1 b - - 3 21",
      "2rq2k1/p1br1pp1/1pn3bp/3p4/P4BP1/1NP1P2P/Q4PB1/2RR2K1 w - - 0 22",
      "2rq2k1/p1br1pp1/1pn3bp/3p4/P4BP1/1NP1P2P/3Q1PB1/2RR2K1 b - - 1 22",
      "2rq2k1/p1br2p1/1pn3bp/3p1p2/P4BP1/1NP1P2P/3Q1PB1/2RR2K1 w - - 0 23",
      "2rq2k1/p1br2p1/1pn3bp/3p1p2/P1P2BP1/1N2P2P/3Q1PB1/2RR2K1 b - - 0 23",
      "2rq2k1/p2r2p1/1pn3bp/3p1p2/P1P2bP1/1N2P2P/3Q1PB1/2RR2K1 w - - 0 24",
      "2rq2k1/p2r2p1/1pn3bp/3p1p2/P1P2PP1/1N5P/3Q1PB1/2RR2K1 b - - 0 24",
      "2rq2k1/p2r2p1/1pn3bp/5p2/P1Pp1PP1/1N5P/3Q1PB1/2RR2K1 w - - 0 25",
      "2rq2k1/p2r2p1/1pn3bp/3B1p2/P1Pp1PP1/1N5P/3Q1P2/2RR2K1 b - - 1 25",
      "2rq2k1/p2r1bp1/1pn4p/3B1p2/P1Pp1PP1/1N5P/3Q1P2/2RR2K1 w - - 2 26",
      "2rq2k1/p2r1bp1/1pn4p/3B1p2/P1Pp1PP1/1N5P/4QP2/2RR2K1 b - - 3 26",
      "2rq2k1/p2r1bp1/1pn4p/3B4/P1Pp1Pp1/1N5P/4QP2/2RR2K1 w - - 0 27",
      "2rq2k1/p2r1bp1/1pn4p/3B4/P1Pp1PP1/1N6/4QP2/2RR2K1 b - - 0 27",
      "2r3k1/p2r1bp1/1pn2q1p/3B4/P1Pp1PP1/1N6/4QP2/2RR2K1 w - - 1 28",
      "2r3k1/p2r1bp1/1pn2q1p/3B4/P1Pp1PP1/1N3Q2/5P2/2RR2K1 b - - 2 28",
      "2rr2k1/p4bp1/1pn2q1p/3B4/P1Pp1PP1/1N3Q2/5P2/2RR2K1 w - - 3 29",
      "2rr2k1/p4bp1/1pn2q1p/3B4/P1Pp1PP1/5Q2/3N1P2/2RR2K1 b - - 4 29",
      "2r2rk1/p4bp1/1pn2q1p/3B4/P1Pp1PP1/5Q2/3N1P2/2RR2K1 w - - 5 30",
      "2r2rk1/p4bp1/1pn2q1p/3B4/P1PpNPP1/5Q2/5P2/2RR2K1 b - - 6 30",
      "2r2rk1/p3qbp1/1pn4p/3B4/P1PpNPP1/5Q2/5P2/2RR2K1 w - - 7 31",
      "2r2rk1/p3qbp1/1pn4p/3B4/P1Pp1PP1/5QN1/5P2/2RR2K1 b - - 8 31",
      "2r2rk1/p4bp1/1pn2q1p/3B4/P1Pp1PP1/5QN1/5P2/2RR2K1 w - - 9 32",
      "2r2rk1/p4bp1/1pn2q1p/3B4/P1PpNPP1/5Q2/5P2/2RR2K1 b - - 10 32",
      "2r2rk1/p3qbp1/1pn4p/3B4/P1PpNPP1/5Q2/5P2/2RR2K1 w - - 11 33",
      "2r2rk1/p3qbp1/1pn4p/3B4/P1Pp1PP1/5QN1/5P2/2RR2K1 b - - 12 33",
      "2r2rk1/p4bp1/1pn2q1p/3B4/P1Pp1PP1/5QN1/5P2/2RR2K1 w - - 13 34",
      "2r2rk1/p4bp1/1pn2q1p/3B1N2/P1Pp1PP1/5Q2/5P2/2RR2K1 b - - 14 34",
      "2r2r1k/p4bp1/1pn2q1p/3B1N2/P1Pp1PP1/5Q2/5P2/2RR2K1 w - - 15 35",
      "2r2r1k/p4Bp1/1pn2q1p/5N2/P1Pp1PP1/5Q2/5P2/2RR2K1 b - - 0 35",
      "2r4k/p4rp1/1pn2q1p/5N2/P1Pp1PP1/5Q2/5P2/2RR2K1 w - - 0 36",
      "2r4k/p4rp1/1pn2q1p/2P2N2/P2p1PP1/5Q2/5P2/2RR2K1 b - - 0 36",
      "7k/p1r2rp1/1pn2q1p/2P2N2/P2p1PP1/5Q2/5P2/2RR2K1 w - - 1 37",
      "7k/p1r2rp1/1Pn2q1p/5N2/P2p1PP1/5Q2/5P2/2RR2K1 b - - 0 37",
      "7k/2r2rp1/1pn2q1p/5N2/P2p1PP1/5Q2/5P2/2RR2K1 w - - 0 38",
      "7k/2r2rp1/1pn2q1p/5N2/P2p1PP1/5Q2/5P2/2R1R1K1 b - - 1 38",
      "5r1k/2r3p1/1pn2q1p/5N2/P2p1PP1/5Q2/5P2/2R1R1K1 w - - 2 39",
      "5r1k/2r3p1/1pn2q1p/5N2/P2pQPP1/8/5P2/2R1R1K1 b - - 3 39",
      "5r1k/2r5/1pn2qpp/5N2/P2pQPP1/8/5P2/2R1R1K1 w - - 0 40",
      "5r1k/2r5/1pn2qpp/8/P2NQPP1/8/5P2/2R1R1K1 b - - 0 40",
      "5r1k/2r5/1pn3pp/8/P2qQPP1/8/5P2/2R1R1K1 w - - 0 41",
      "5r1k/2r5/1pn3pp/8/P2Q1PP1/8/5P2/2R1R1K1 b - - 0 41",
      "5r1k/2r5/1p4pp/8/P2n1PP1/8/5P2/2R1R1K1 w - - 0 42",
      "5r1k/2R5/1p4pp/8/P2n1PP1/8/5P2/4R1K1 b - - 0 42",
      "5r1k/2R5/1p4pp/8/P4PP1/5n2/5P2/4R1K1 w - - 1 43",
      "5r1k/2R5/1p4pp/8/P4PP1/5n2/5P2/4RK2 b - - 2 43",
      "5r1k/2R5/1p4pp/8/P4PP1/8/5P2/4nK2 w - - 0 44",
      "5r1k/2R5/1p4pp/8/P4PP1/8/5P2/4K3 b - - 0 44",
      "7k/2R5/1p4pp/8/P4rP1/8/5P2/4K3 w - - 0 45",
      "7k/8/1pR3pp/8/P4rP1/8/5P2/4K3 b - - 1 45",
      "8/6k1/1pR3pp/8/P4rP1/8/5P2/4K3 w - - 2 46",
      "8/6k1/1R4pp/8/P4rP1/8/5P2/4K3 b - - 0 46",
      "8/6k1/1R4pp/8/r5P1/8/5P2/4K3 w - - 0 47",
      "8/6k1/1R4pp/8/r5P1/5P2/8/4K3 b - - 0 47",
      "8/6k1/1R5p/6p1/r5P1/5P2/8/4K3 w - - 0 48",
      "8/1R4k1/7p/6p1/r5P1/5P2/8/4K3 b - - 1 48",
      "8/1R6/6kp/6p1/r5P1/5P2/8/4K3 w - - 2 49",
      "8/8/1R4kp/6p1/r5P1/5P2/8/4K3 b - - 3 49",
      "8/6k1/1R5p/6p1/r5P1/5P2/8/4K3 w - - 4 50",
      "8/1R4k1/7p/6p1/r5P1/5P2/8/4K3 b - - 5 50",
      "8/1R6/6kp/6p1/r5P1/5P2/8/4K3 w - - 6 51",
      "8/8/1R4kp/6p1/r5P1/5P2/8/4K3 b - - 7 51",
      "8/6k1/1R5p/6p1/r5P1/5P2/8/4K3 w - - 8 52",
      "8/1R4k1/7p/6p1/r5P1/5P2/8/4K3 b - - 9 52",
    ]
    for (index, history) in chess.getMoveHistory().enumerated() {
      XCTAssertEqual(history.fen, fens22[index], "Sinquefield(g23): FEN move (index)")
    }

    pgn = pgns.removeFirst()
    chess = try pgn.validate()
    XCTAssertEqual(chess.getTag("Event")?.value, "Sinquefield Cup", "Sinquefield(g24): event")
    XCTAssertEqual(chess.getTag("White")?.value, "Aronian, Levon", "Sinquefield(g24): white")
    XCTAssertEqual(chess.getTag("Black")?.value, "Anand, Viswanathan", "Sinquefield(g24): black")
    XCTAssertEqual(chess.getMoveCount(), 36, "Sinquefield(g24): move count")
    XCTAssertEqual(
      chess.getMoveHistory().map { $0.pcn }.joined(separator: ","),
      "d2d4,g8f6,c2c4,e7e6,g1f3,d7d5,b1c3,f8e7,c1f4,e8g8,e2e3,c7c5,d4c5,e7c5,c4d5,f6d5,c3d5,e6d5,a2a3,b8c6,f1d3,c5b6,e1g1,c8g4,h2h3,g4h5,b2b4,d5d4,b4b5,c6a5,e3d4,d8f6,f4e3,h5f3,d1f3,f6f3,g2f3,f8d8,f1d1,a5b3,a1b1,b3d4,g1g2,d4e6,d3f5,b6e3,f5e6,d8d1,b1d1,e3b6,e6b3,a8d8,d1d8,b6d8,f3f4,g8f8,f4f5,a7a6,b5b6,d8b6,b3d5,b6c5,d5b7,c5a3,b7a6,a3b2,a6f1,b2a3,f1a6,a3b2,a6f1",
      "Sinquefield(g24): PCN move history"
    )
    let fens23 = [
      "rnbqkbnr/pppppppp/8/8/3P4/8/PPP1PPPP/RNBQKBNR b KQkq - 0 1",
      "rnbqkb1r/pppppppp/5n2/8/3P4/8/PPP1PPPP/RNBQKBNR w KQkq - 1 2",
      "rnbqkb1r/pppppppp/5n2/8/2PP4/8/PP2PPPP/RNBQKBNR b KQkq - 0 2",
      "rnbqkb1r/pppp1ppp/4pn2/8/2PP4/8/PP2PPPP/RNBQKBNR w KQkq - 0 3",
      "rnbqkb1r/pppp1ppp/4pn2/8/2PP4/5N2/PP2PPPP/RNBQKB1R b KQkq - 1 3",
      "rnbqkb1r/ppp2ppp/4pn2/3p4/2PP4/5N2/PP2PPPP/RNBQKB1R w KQkq - 0 4",
      "rnbqkb1r/ppp2ppp/4pn2/3p4/2PP4/2N2N2/PP2PPPP/R1BQKB1R b KQkq - 1 4",
      "rnbqk2r/ppp1bppp/4pn2/3p4/2PP4/2N2N2/PP2PPPP/R1BQKB1R w KQkq - 2 5",
      "rnbqk2r/ppp1bppp/4pn2/3p4/2PP1B2/2N2N2/PP2PPPP/R2QKB1R b KQkq - 3 5",
      "rnbq1rk1/ppp1bppp/4pn2/3p4/2PP1B2/2N2N2/PP2PPPP/R2QKB1R w KQ - 4 6",
      "rnbq1rk1/ppp1bppp/4pn2/3p4/2PP1B2/2N1PN2/PP3PPP/R2QKB1R b KQ - 0 6",
      "rnbq1rk1/pp2bppp/4pn2/2pp4/2PP1B2/2N1PN2/PP3PPP/R2QKB1R w KQ - 0 7",
      "rnbq1rk1/pp2bppp/4pn2/2Pp4/2P2B2/2N1PN2/PP3PPP/R2QKB1R b KQ - 0 7",
      "rnbq1rk1/pp3ppp/4pn2/2bp4/2P2B2/2N1PN2/PP3PPP/R2QKB1R w KQ - 0 8",
      "rnbq1rk1/pp3ppp/4pn2/2bP4/5B2/2N1PN2/PP3PPP/R2QKB1R b KQ - 0 8",
      "rnbq1rk1/pp3ppp/4p3/2bn4/5B2/2N1PN2/PP3PPP/R2QKB1R w KQ - 0 9",
      "rnbq1rk1/pp3ppp/4p3/2bN4/5B2/4PN2/PP3PPP/R2QKB1R b KQ - 0 9",
      "rnbq1rk1/pp3ppp/8/2bp4/5B2/4PN2/PP3PPP/R2QKB1R w KQ - 0 10",
      "rnbq1rk1/pp3ppp/8/2bp4/5B2/P3PN2/1P3PPP/R2QKB1R b KQ - 0 10",
      "r1bq1rk1/pp3ppp/2n5/2bp4/5B2/P3PN2/1P3PPP/R2QKB1R w KQ - 1 11",
      "r1bq1rk1/pp3ppp/2n5/2bp4/5B2/P2BPN2/1P3PPP/R2QK2R b KQ - 2 11",
      "r1bq1rk1/pp3ppp/1bn5/3p4/5B2/P2BPN2/1P3PPP/R2QK2R w KQ - 3 12",
      "r1bq1rk1/pp3ppp/1bn5/3p4/5B2/P2BPN2/1P3PPP/R2Q1RK1 b - - 4 12",
      "r2q1rk1/pp3ppp/1bn5/3p4/5Bb1/P2BPN2/1P3PPP/R2Q1RK1 w - - 5 13",
      "r2q1rk1/pp3ppp/1bn5/3p4/5Bb1/P2BPN1P/1P3PP1/R2Q1RK1 b - - 0 13",
      "r2q1rk1/pp3ppp/1bn5/3p3b/5B2/P2BPN1P/1P3PP1/R2Q1RK1 w - - 1 14",
      "r2q1rk1/pp3ppp/1bn5/3p3b/1P3B2/P2BPN1P/5PP1/R2Q1RK1 b - - 0 14",
      "r2q1rk1/pp3ppp/1bn5/7b/1P1p1B2/P2BPN1P/5PP1/R2Q1RK1 w - - 0 15",
      "r2q1rk1/pp3ppp/1bn5/1P5b/3p1B2/P2BPN1P/5PP1/R2Q1RK1 b - - 0 15",
      "r2q1rk1/pp3ppp/1b6/nP5b/3p1B2/P2BPN1P/5PP1/R2Q1RK1 w - - 1 16",
      "r2q1rk1/pp3ppp/1b6/nP5b/3P1B2/P2B1N1P/5PP1/R2Q1RK1 b - - 0 16",
      "r4rk1/pp3ppp/1b3q2/nP5b/3P1B2/P2B1N1P/5PP1/R2Q1RK1 w - - 1 17",
      "r4rk1/pp3ppp/1b3q2/nP5b/3P4/P2BBN1P/5PP1/R2Q1RK1 b - - 2 17",
      "r4rk1/pp3ppp/1b3q2/nP6/3P4/P2BBb1P/5PP1/R2Q1RK1 w - - 0 18",
      "r4rk1/pp3ppp/1b3q2/nP6/3P4/P2BBQ1P/5PP1/R4RK1 b - - 0 18",
      "r4rk1/pp3ppp/1b6/nP6/3P4/P2BBq1P/5PP1/R4RK1 w - - 0 19",
      "r4rk1/pp3ppp/1b6/nP6/3P4/P2BBP1P/5P2/R4RK1 b - - 0 19",
      "r2r2k1/pp3ppp/1b6/nP6/3P4/P2BBP1P/5P2/R4RK1 w - - 1 20",
      "r2r2k1/pp3ppp/1b6/nP6/3P4/P2BBP1P/5P2/R2R2K1 b - - 2 20",
      "r2r2k1/pp3ppp/1b6/1P6/3P4/Pn1BBP1P/5P2/R2R2K1 w - - 3 21",
      "r2r2k1/pp3ppp/1b6/1P6/3P4/Pn1BBP1P/5P2/1R1R2K1 b - - 4 21",
      "r2r2k1/pp3ppp/1b6/1P6/3n4/P2BBP1P/5P2/1R1R2K1 w - - 0 22",
      "r2r2k1/pp3ppp/1b6/1P6/3n4/P2BBP1P/5PK1/1R1R4 b - - 1 22",
      "r2r2k1/pp3ppp/1b2n3/1P6/8/P2BBP1P/5PK1/1R1R4 w - - 2 23",
      "r2r2k1/pp3ppp/1b2n3/1P3B2/8/P3BP1P/5PK1/1R1R4 b - - 3 23",
      "r2r2k1/pp3ppp/4n3/1P3B2/8/P3bP1P/5PK1/1R1R4 w - - 0 24",
      "r2r2k1/pp3ppp/4B3/1P6/8/P3bP1P/5PK1/1R1R4 b - - 0 24",
      "r5k1/pp3ppp/4B3/1P6/8/P3bP1P/5PK1/1R1r4 w - - 0 25",
      "r5k1/pp3ppp/4B3/1P6/8/P3bP1P/5PK1/3R4 b - - 0 25",
      "r5k1/pp3ppp/1b2B3/1P6/8/P4P1P/5PK1/3R4 w - - 1 26",
      "r5k1/pp3ppp/1b6/1P6/8/PB3P1P/5PK1/3R4 b - - 2 26",
      "3r2k1/pp3ppp/1b6/1P6/8/PB3P1P/5PK1/3R4 w - - 3 27",
      "3R2k1/pp3ppp/1b6/1P6/8/PB3P1P/5PK1/8 b - - 0 27",
      "3b2k1/pp3ppp/8/1P6/8/PB3P1P/5PK1/8 w - - 0 28",
      "3b2k1/pp3ppp/8/1P6/5P2/PB5P/5PK1/8 b - - 0 28",
      "3b1k2/pp3ppp/8/1P6/5P2/PB5P/5PK1/8 w - - 1 29",
      "3b1k2/pp3ppp/8/1P3P2/8/PB5P/5PK1/8 b - - 0 29",
      "3b1k2/1p3ppp/p7/1P3P2/8/PB5P/5PK1/8 w - - 0 30",
      "3b1k2/1p3ppp/pP6/5P2/8/PB5P/5PK1/8 b - - 0 30",
      "5k2/1p3ppp/pb6/5P2/8/PB5P/5PK1/8 w - - 0 31",
      "5k2/1p3ppp/pb6/3B1P2/8/P6P/5PK1/8 b - - 1 31",
      "5k2/1p3ppp/p7/2bB1P2/8/P6P/5PK1/8 w - - 2 32",
      "5k2/1B3ppp/p7/2b2P2/8/P6P/5PK1/8 b - - 0 32",
      "5k2/1B3ppp/p7/5P2/8/b6P/5PK1/8 w - - 0 33",
      "5k2/5ppp/B7/5P2/8/b6P/5PK1/8 b - - 0 33",
      "5k2/5ppp/B7/5P2/8/7P/1b3PK1/8 w - - 1 34",
      "5k2/5ppp/8/5P2/8/7P/1b3PK1/5B2 b - - 2 34",
      "5k2/5ppp/8/5P2/8/b6P/5PK1/5B2 w - - 3 35",
      "5k2/5ppp/B7/5P2/8/b6P/5PK1/8 b - - 4 35",
      "5k2/5ppp/B7/5P2/8/7P/1b3PK1/8 w - - 5 36",
      "5k2/5ppp/8/5P2/8/7P/1b3PK1/5B2 b - - 6 36",
    ]
    for (index, history) in chess.getMoveHistory().enumerated() {
      XCTAssertEqual(history.fen, fens23[index], "Sinquefield(g24): FEN move (index)")
    }

    pgn = pgns.removeFirst()
    chess = try pgn.validate()
    XCTAssertEqual(chess.getTag("Event")?.value, "Sinquefield Cup", "Sinquefield(g25): event")
    XCTAssertEqual(chess.getTag("White")?.value, "Karjakin, Sergey", "Sinquefield(g25): white")
    XCTAssertEqual(chess.getTag("Black")?.value, "Grischuk, Alexander", "Sinquefield(g25): black")
    XCTAssertEqual(chess.getMoveCount(), 40, "Sinquefield(g25): move count")
    XCTAssertEqual(
      chess.getMoveHistory().map { $0.pcn }.joined(separator: ","),
      "e2e4,e7e5,g1f3,b8c6,f1b5,g8f6,e1g1,f6e4,d2d4,e4d6,b5c6,d7c6,d4e5,d6f5,d1d8,e8d8,h2h3,h7h6,f1d1,d8e8,b1c3,f5e7,c1f4,e7g6,f4h2,f8e7,f3d4,g6f8,a2a4,a7a5,c3e2,h6h5,e5e6,f8e6,d4e6,c8e6,h2c7,e7d8,c7d6,f7f6,e2d4,e6c8,h3h4,e8f7,f2f3,g7g5,d6g3,d8b6,g3f2,h8e8,d1d2,b6d4,d2d4,c8f5,d4d2,a8d8,a1d1,d8d2,d1d2,e8e5,g1f1,e5d5,f1e2,f7e6,b2b3,g5h4,f2h4,c6c5,h4g3,d5d2,e2d2,e6d7,g3h4,d7e6,h4g3,e6d7,g3h4,d7e6,h4g3",
      "Sinquefield(g25): PCN move history"
    )
    let fens24 = [
      "rnbqkbnr/pppppppp/8/8/4P3/8/PPPP1PPP/RNBQKBNR b KQkq - 0 1",
      "rnbqkbnr/pppp1ppp/8/4p3/4P3/8/PPPP1PPP/RNBQKBNR w KQkq - 0 2",
      "rnbqkbnr/pppp1ppp/8/4p3/4P3/5N2/PPPP1PPP/RNBQKB1R b KQkq - 1 2",
      "r1bqkbnr/pppp1ppp/2n5/4p3/4P3/5N2/PPPP1PPP/RNBQKB1R w KQkq - 2 3",
      "r1bqkbnr/pppp1ppp/2n5/1B2p3/4P3/5N2/PPPP1PPP/RNBQK2R b KQkq - 3 3",
      "r1bqkb1r/pppp1ppp/2n2n2/1B2p3/4P3/5N2/PPPP1PPP/RNBQK2R w KQkq - 4 4",
      "r1bqkb1r/pppp1ppp/2n2n2/1B2p3/4P3/5N2/PPPP1PPP/RNBQ1RK1 b kq - 5 4",
      "r1bqkb1r/pppp1ppp/2n5/1B2p3/4n3/5N2/PPPP1PPP/RNBQ1RK1 w kq - 0 5",
      "r1bqkb1r/pppp1ppp/2n5/1B2p3/3Pn3/5N2/PPP2PPP/RNBQ1RK1 b kq - 0 5",
      "r1bqkb1r/pppp1ppp/2nn4/1B2p3/3P4/5N2/PPP2PPP/RNBQ1RK1 w kq - 1 6",
      "r1bqkb1r/pppp1ppp/2Bn4/4p3/3P4/5N2/PPP2PPP/RNBQ1RK1 b kq - 0 6",
      "r1bqkb1r/ppp2ppp/2pn4/4p3/3P4/5N2/PPP2PPP/RNBQ1RK1 w kq - 0 7",
      "r1bqkb1r/ppp2ppp/2pn4/4P3/8/5N2/PPP2PPP/RNBQ1RK1 b kq - 0 7",
      "r1bqkb1r/ppp2ppp/2p5/4Pn2/8/5N2/PPP2PPP/RNBQ1RK1 w kq - 1 8",
      "r1bQkb1r/ppp2ppp/2p5/4Pn2/8/5N2/PPP2PPP/RNB2RK1 b kq - 0 8",
      "r1bk1b1r/ppp2ppp/2p5/4Pn2/8/5N2/PPP2PPP/RNB2RK1 w - - 0 9",
      "r1bk1b1r/ppp2ppp/2p5/4Pn2/8/5N1P/PPP2PP1/RNB2RK1 b - - 0 9",
      "r1bk1b1r/ppp2pp1/2p4p/4Pn2/8/5N1P/PPP2PP1/RNB2RK1 w - - 0 10",
      "r1bk1b1r/ppp2pp1/2p4p/4Pn2/8/5N1P/PPP2PP1/RNBR2K1 b - - 1 10",
      "r1b1kb1r/ppp2pp1/2p4p/4Pn2/8/5N1P/PPP2PP1/RNBR2K1 w - - 2 11",
      "r1b1kb1r/ppp2pp1/2p4p/4Pn2/8/2N2N1P/PPP2PP1/R1BR2K1 b - - 3 11",
      "r1b1kb1r/ppp1npp1/2p4p/4P3/8/2N2N1P/PPP2PP1/R1BR2K1 w - - 4 12",
      "r1b1kb1r/ppp1npp1/2p4p/4P3/5B2/2N2N1P/PPP2PP1/R2R2K1 b - - 5 12",
      "r1b1kb1r/ppp2pp1/2p3np/4P3/5B2/2N2N1P/PPP2PP1/R2R2K1 w - - 6 13",
      "r1b1kb1r/ppp2pp1/2p3np/4P3/8/2N2N1P/PPP2PPB/R2R2K1 b - - 7 13",
      "r1b1k2r/ppp1bpp1/2p3np/4P3/8/2N2N1P/PPP2PPB/R2R2K1 w - - 8 14",
      "r1b1k2r/ppp1bpp1/2p3np/4P3/3N4/2N4P/PPP2PPB/R2R2K1 b - - 9 14",
      "r1b1kn1r/ppp1bpp1/2p4p/4P3/3N4/2N4P/PPP2PPB/R2R2K1 w - - 10 15",
      "r1b1kn1r/ppp1bpp1/2p4p/4P3/P2N4/2N4P/1PP2PPB/R2R2K1 b - - 0 15",
      "r1b1kn1r/1pp1bpp1/2p4p/p3P3/P2N4/2N4P/1PP2PPB/R2R2K1 w - - 0 16",
      "r1b1kn1r/1pp1bpp1/2p4p/p3P3/P2N4/7P/1PP1NPPB/R2R2K1 b - - 1 16",
      "r1b1kn1r/1pp1bpp1/2p5/p3P2p/P2N4/7P/1PP1NPPB/R2R2K1 w - - 0 17",
      "r1b1kn1r/1pp1bpp1/2p1P3/p6p/P2N4/7P/1PP1NPPB/R2R2K1 b - - 0 17",
      "r1b1k2r/1pp1bpp1/2p1n3/p6p/P2N4/7P/1PP1NPPB/R2R2K1 w - - 0 18",
      "r1b1k2r/1pp1bpp1/2p1N3/p6p/P7/7P/1PP1NPPB/R2R2K1 b - - 0 18",
      "r3k2r/1pp1bpp1/2p1b3/p6p/P7/7P/1PP1NPPB/R2R2K1 w - - 0 19",
      "r3k2r/1pB1bpp1/2p1b3/p6p/P7/7P/1PP1NPP1/R2R2K1 b - - 0 19",
      "r2bk2r/1pB2pp1/2p1b3/p6p/P7/7P/1PP1NPP1/R2R2K1 w - - 1 20",
      "r2bk2r/1p3pp1/2pBb3/p6p/P7/7P/1PP1NPP1/R2R2K1 b - - 2 20",
      "r2bk2r/1p4p1/2pBbp2/p6p/P7/7P/1PP1NPP1/R2R2K1 w - - 0 21",
      "r2bk2r/1p4p1/2pBbp2/p6p/P2N4/7P/1PP2PP1/R2R2K1 b - - 1 21",
      "r1bbk2r/1p4p1/2pB1p2/p6p/P2N4/7P/1PP2PP1/R2R2K1 w - - 2 22",
      "r1bbk2r/1p4p1/2pB1p2/p6p/P2N3P/8/1PP2PP1/R2R2K1 b - - 0 22",
      "r1bb3r/1p3kp1/2pB1p2/p6p/P2N3P/8/1PP2PP1/R2R2K1 w - - 1 23",
      "r1bb3r/1p3kp1/2pB1p2/p6p/P2N3P/5P2/1PP3P1/R2R2K1 b - - 0 23",
      "r1bb3r/1p3k2/2pB1p2/p5pp/P2N3P/5P2/1PP3P1/R2R2K1 w - - 0 24",
      "r1bb3r/1p3k2/2p2p2/p5pp/P2N3P/5PB1/1PP3P1/R2R2K1 b - - 1 24",
      "r1b4r/1p3k2/1bp2p2/p5pp/P2N3P/5PB1/1PP3P1/R2R2K1 w - - 2 25",
      "r1b4r/1p3k2/1bp2p2/p5pp/P2N3P/5P2/1PP2BP1/R2R2K1 b - - 3 25",
      "r1b1r3/1p3k2/1bp2p2/p5pp/P2N3P/5P2/1PP2BP1/R2R2K1 w - - 4 26",
      "r1b1r3/1p3k2/1bp2p2/p5pp/P2N3P/5P2/1PPR1BP1/R5K1 b - - 5 26",
      "r1b1r3/1p3k2/2p2p2/p5pp/P2b3P/5P2/1PPR1BP1/R5K1 w - - 0 27",
      "r1b1r3/1p3k2/2p2p2/p5pp/P2R3P/5P2/1PP2BP1/R5K1 b - - 0 27",
      "r3r3/1p3k2/2p2p2/p4bpp/P2R3P/5P2/1PP2BP1/R5K1 w - - 1 28",
      "r3r3/1p3k2/2p2p2/p4bpp/P6P/5P2/1PPR1BP1/R5K1 b - - 2 28",
      "3rr3/1p3k2/2p2p2/p4bpp/P6P/5P2/1PPR1BP1/R5K1 w - - 3 29",
      "3rr3/1p3k2/2p2p2/p4bpp/P6P/5P2/1PPR1BP1/3R2K1 b - - 4 29",
      "4r3/1p3k2/2p2p2/p4bpp/P6P/5P2/1PPr1BP1/3R2K1 w - - 0 30",
      "4r3/1p3k2/2p2p2/p4bpp/P6P/5P2/1PPR1BP1/6K1 b - - 0 30",
      "8/1p3k2/2p2p2/p3rbpp/P6P/5P2/1PPR1BP1/6K1 w - - 1 31",
      "8/1p3k2/2p2p2/p3rbpp/P6P/5P2/1PPR1BP1/5K2 b - - 2 31",
      "8/1p3k2/2p2p2/p2r1bpp/P6P/5P2/1PPR1BP1/5K2 w - - 3 32",
      "8/1p3k2/2p2p2/p2r1bpp/P6P/5P2/1PPRKBP1/8 b - - 4 32",
      "8/1p6/2p1kp2/p2r1bpp/P6P/5P2/1PPRKBP1/8 w - - 5 33",
      "8/1p6/2p1kp2/p2r1bpp/P6P/1P3P2/2PRKBP1/8 b - - 0 33",
      "8/1p6/2p1kp2/p2r1b1p/P6p/1P3P2/2PRKBP1/8 w - - 0 34",
      "8/1p6/2p1kp2/p2r1b1p/P6B/1P3P2/2PRK1P1/8 b - - 0 34",
      "8/1p6/4kp2/p1pr1b1p/P6B/1P3P2/2PRK1P1/8 w - - 0 35",
      "8/1p6/4kp2/p1pr1b1p/P7/1P3PB1/2PRK1P1/8 b - - 1 35",
      "8/1p6/4kp2/p1p2b1p/P7/1P3PB1/2PrK1P1/8 w - - 0 36",
      "8/1p6/4kp2/p1p2b1p/P7/1P3PB1/2PK2P1/8 b - - 0 36",
      "8/1p1k4/5p2/p1p2b1p/P7/1P3PB1/2PK2P1/8 w - - 1 37",
      "8/1p1k4/5p2/p1p2b1p/P6B/1P3P2/2PK2P1/8 b - - 2 37",
      "8/1p6/4kp2/p1p2b1p/P6B/1P3P2/2PK2P1/8 w - - 3 38",
      "8/1p6/4kp2/p1p2b1p/P7/1P3PB1/2PK2P1/8 b - - 4 38",
      "8/1p1k4/5p2/p1p2b1p/P7/1P3PB1/2PK2P1/8 w - - 5 39",
      "8/1p1k4/5p2/p1p2b1p/P6B/1P3P2/2PK2P1/8 b - - 6 39",
      "8/1p6/4kp2/p1p2b1p/P6B/1P3P2/2PK2P1/8 w - - 7 40",
      "8/1p6/4kp2/p1p2b1p/P7/1P3PB1/2PK2P1/8 b - - 8 40",
    ]
    for (index, history) in chess.getMoveHistory().enumerated() {
      XCTAssertEqual(history.fen, fens24[index], "Sinquefield(g25): FEN move (index)")
    }

    pgn = pgns.removeFirst()
    chess = try pgn.validate()
    XCTAssertEqual(chess.getTag("Event")?.value, "Sinquefield Cup", "Sinquefield(g26): event")
    XCTAssertEqual(chess.getTag("White")?.value, "Grischuk, Alexander", "Sinquefield(g26): white")
    XCTAssertEqual(chess.getTag("Black")?.value, "Carlsen, Magnus", "Sinquefield(g26): black")
    XCTAssertEqual(chess.getMoveCount(), 35, "Sinquefield(g26): move count")
    XCTAssertEqual(
      chess.getMoveHistory().map { $0.pcn }.joined(separator: ","),
      "g1f3,g8f6,g2g3,g7g6,f1g2,f8g7,c2c4,e8g8,d2d4,d7d6,e1g1,c7c5,d4d5,b7b5,c4b5,a7a6,b5a6,c8f5,f3d2,b8a6,b1c3,a6b4,d2c4,b4c2,g3g4,f6g4,e2e4,c2a1,e4f5,g7c3,b2c3,g4f6,d1e2,f8e8,c1g5,d8d7,f5g6,h7g6,f1a1,d7f5,g5f6,f5f6,e2f3,f6h4,f3e4,h4f6,e4f3,f6h4,f3e4,h4f6,e4d3,e8b8,a2a3,b8b3,a1c1,a8a4,d3c2,f6f4,c2b3,f4c1,g2f1,c1g5,f1g2,g5c1,g2f1,c1g5,f1g2,g5c1",
      "Sinquefield(g26): PCN move history"
    )
    let fens25 = [
      "rnbqkbnr/pppppppp/8/8/8/5N2/PPPPPPPP/RNBQKB1R b KQkq - 1 1",
      "rnbqkb1r/pppppppp/5n2/8/8/5N2/PPPPPPPP/RNBQKB1R w KQkq - 2 2",
      "rnbqkb1r/pppppppp/5n2/8/8/5NP1/PPPPPP1P/RNBQKB1R b KQkq - 0 2",
      "rnbqkb1r/pppppp1p/5np1/8/8/5NP1/PPPPPP1P/RNBQKB1R w KQkq - 0 3",
      "rnbqkb1r/pppppp1p/5np1/8/8/5NP1/PPPPPPBP/RNBQK2R b KQkq - 1 3",
      "rnbqk2r/ppppppbp/5np1/8/8/5NP1/PPPPPPBP/RNBQK2R w KQkq - 2 4",
      "rnbqk2r/ppppppbp/5np1/8/2P5/5NP1/PP1PPPBP/RNBQK2R b KQkq - 0 4",
      "rnbq1rk1/ppppppbp/5np1/8/2P5/5NP1/PP1PPPBP/RNBQK2R w KQ - 1 5",
      "rnbq1rk1/ppppppbp/5np1/8/2PP4/5NP1/PP2PPBP/RNBQK2R b KQ - 0 5",
      "rnbq1rk1/ppp1ppbp/3p1np1/8/2PP4/5NP1/PP2PPBP/RNBQK2R w KQ - 0 6",
      "rnbq1rk1/ppp1ppbp/3p1np1/8/2PP4/5NP1/PP2PPBP/RNBQ1RK1 b - - 1 6",
      "rnbq1rk1/pp2ppbp/3p1np1/2p5/2PP4/5NP1/PP2PPBP/RNBQ1RK1 w - - 0 7",
      "rnbq1rk1/pp2ppbp/3p1np1/2pP4/2P5/5NP1/PP2PPBP/RNBQ1RK1 b - - 0 7",
      "rnbq1rk1/p3ppbp/3p1np1/1ppP4/2P5/5NP1/PP2PPBP/RNBQ1RK1 w - - 0 8",
      "rnbq1rk1/p3ppbp/3p1np1/1PpP4/8/5NP1/PP2PPBP/RNBQ1RK1 b - - 0 8",
      "rnbq1rk1/4ppbp/p2p1np1/1PpP4/8/5NP1/PP2PPBP/RNBQ1RK1 w - - 0 9",
      "rnbq1rk1/4ppbp/P2p1np1/2pP4/8/5NP1/PP2PPBP/RNBQ1RK1 b - - 0 9",
      "rn1q1rk1/4ppbp/P2p1np1/2pP1b2/8/5NP1/PP2PPBP/RNBQ1RK1 w - - 1 10",
      "rn1q1rk1/4ppbp/P2p1np1/2pP1b2/8/6P1/PP1NPPBP/RNBQ1RK1 b - - 2 10",
      "r2q1rk1/4ppbp/n2p1np1/2pP1b2/8/6P1/PP1NPPBP/RNBQ1RK1 w - - 0 11",
      "r2q1rk1/4ppbp/n2p1np1/2pP1b2/8/2N3P1/PP1NPPBP/R1BQ1RK1 b - - 1 11",
      "r2q1rk1/4ppbp/3p1np1/2pP1b2/1n6/2N3P1/PP1NPPBP/R1BQ1RK1 w - - 2 12",
      "r2q1rk1/4ppbp/3p1np1/2pP1b2/1nN5/2N3P1/PP2PPBP/R1BQ1RK1 b - - 3 12",
      "r2q1rk1/4ppbp/3p1np1/2pP1b2/2N5/2N3P1/PPn1PPBP/R1BQ1RK1 w - - 4 13",
      "r2q1rk1/4ppbp/3p1np1/2pP1b2/2N3P1/2N5/PPn1PPBP/R1BQ1RK1 b - - 0 13",
      "r2q1rk1/4ppbp/3p2p1/2pP1b2/2N3n1/2N5/PPn1PPBP/R1BQ1RK1 w - - 0 14",
      "r2q1rk1/4ppbp/3p2p1/2pP1b2/2N1P1n1/2N5/PPn2PBP/R1BQ1RK1 b - - 0 14",
      "r2q1rk1/4ppbp/3p2p1/2pP1b2/2N1P1n1/2N5/PP3PBP/n1BQ1RK1 w - - 0 15",
      "r2q1rk1/4ppbp/3p2p1/2pP1P2/2N3n1/2N5/PP3PBP/n1BQ1RK1 b - - 0 15",
      "r2q1rk1/4pp1p/3p2p1/2pP1P2/2N3n1/2b5/PP3PBP/n1BQ1RK1 w - - 0 16",
      "r2q1rk1/4pp1p/3p2p1/2pP1P2/2N3n1/2P5/P4PBP/n1BQ1RK1 b - - 0 16",
      "r2q1rk1/4pp1p/3p1np1/2pP1P2/2N5/2P5/P4PBP/n1BQ1RK1 w - - 1 17",
      "r2q1rk1/4pp1p/3p1np1/2pP1P2/2N5/2P5/P3QPBP/n1B2RK1 b - - 2 17",
      "r2qr1k1/4pp1p/3p1np1/2pP1P2/2N5/2P5/P3QPBP/n1B2RK1 w - - 3 18",
      "r2qr1k1/4pp1p/3p1np1/2pP1PB1/2N5/2P5/P3QPBP/n4RK1 b - - 4 18",
      "r3r1k1/3qpp1p/3p1np1/2pP1PB1/2N5/2P5/P3QPBP/n4RK1 w - - 5 19",
      "r3r1k1/3qpp1p/3p1nP1/2pP2B1/2N5/2P5/P3QPBP/n4RK1 b - - 0 19",
      "r3r1k1/3qpp2/3p1np1/2pP2B1/2N5/2P5/P3QPBP/n4RK1 w - - 0 20",
      "r3r1k1/3qpp2/3p1np1/2pP2B1/2N5/2P5/P3QPBP/R5K1 b - - 0 20",
      "r3r1k1/4pp2/3p1np1/2pP1qB1/2N5/2P5/P3QPBP/R5K1 w - - 1 21",
      "r3r1k1/4pp2/3p1Bp1/2pP1q2/2N5/2P5/P3QPBP/R5K1 b - - 0 21",
      "r3r1k1/4pp2/3p1qp1/2pP4/2N5/2P5/P3QPBP/R5K1 w - - 0 22",
      "r3r1k1/4pp2/3p1qp1/2pP4/2N5/2P2Q2/P4PBP/R5K1 b - - 1 22",
      "r3r1k1/4pp2/3p2p1/2pP4/2N4q/2P2Q2/P4PBP/R5K1 w - - 2 23",
      "r3r1k1/4pp2/3p2p1/2pP4/2N1Q2q/2P5/P4PBP/R5K1 b - - 3 23",
      "r3r1k1/4pp2/3p1qp1/2pP4/2N1Q3/2P5/P4PBP/R5K1 w - - 4 24",
      "r3r1k1/4pp2/3p1qp1/2pP4/2N5/2P2Q2/P4PBP/R5K1 b - - 5 24",
      "r3r1k1/4pp2/3p2p1/2pP4/2N4q/2P2Q2/P4PBP/R5K1 w - - 6 25",
      "r3r1k1/4pp2/3p2p1/2pP4/2N1Q2q/2P5/P4PBP/R5K1 b - - 7 25",
      "r3r1k1/4pp2/3p1qp1/2pP4/2N1Q3/2P5/P4PBP/R5K1 w - - 8 26",
      "r3r1k1/4pp2/3p1qp1/2pP4/2N5/2PQ4/P4PBP/R5K1 b - - 9 26",
      "rr4k1/4pp2/3p1qp1/2pP4/2N5/2PQ4/P4PBP/R5K1 w - - 10 27",
      "rr4k1/4pp2/3p1qp1/2pP4/2N5/P1PQ4/5PBP/R5K1 b - - 0 27",
      "r5k1/4pp2/3p1qp1/2pP4/2N5/PrPQ4/5PBP/R5K1 w - - 1 28",
      "r5k1/4pp2/3p1qp1/2pP4/2N5/PrPQ4/5PBP/2R3K1 b - - 2 28",
      "6k1/4pp2/3p1qp1/2pP4/r1N5/PrPQ4/5PBP/2R3K1 w - - 3 29",
      "6k1/4pp2/3p1qp1/2pP4/r1N5/PrP5/2Q2PBP/2R3K1 b - - 4 29",
      "6k1/4pp2/3p2p1/2pP4/r1N2q2/PrP5/2Q2PBP/2R3K1 w - - 5 30",
      "6k1/4pp2/3p2p1/2pP4/r1N2q2/PQP5/5PBP/2R3K1 b - - 0 30",
      "6k1/4pp2/3p2p1/2pP4/r1N5/PQP5/5PBP/2q3K1 w - - 0 31",
      "6k1/4pp2/3p2p1/2pP4/r1N5/PQP5/5P1P/2q2BK1 b - - 1 31",
      "6k1/4pp2/3p2p1/2pP2q1/r1N5/PQP5/5P1P/5BK1 w - - 2 32",
      "6k1/4pp2/3p2p1/2pP2q1/r1N5/PQP5/5PBP/6K1 b - - 3 32",
      "6k1/4pp2/3p2p1/2pP4/r1N5/PQP5/5PBP/2q3K1 w - - 4 33",
      "6k1/4pp2/3p2p1/2pP4/r1N5/PQP5/5P1P/2q2BK1 b - - 5 33",
      "6k1/4pp2/3p2p1/2pP2q1/r1N5/PQP5/5P1P/5BK1 w - - 6 34",
      "6k1/4pp2/3p2p1/2pP2q1/r1N5/PQP5/5PBP/6K1 b - - 7 34",
      "6k1/4pp2/3p2p1/2pP4/r1N5/PQP5/5PBP/2q3K1 w - - 8 35",
    ]
    for (index, history) in chess.getMoveHistory().enumerated() {
      XCTAssertEqual(history.fen, fens25[index], "Sinquefield(g26): FEN move (index)")
    }

    pgn = pgns.removeFirst()
    chess = try pgn.validate()
    XCTAssertEqual(chess.getTag("Event")?.value, "Sinquefield Cup", "Sinquefield(g27): event")
    XCTAssertEqual(
      chess.getTag("White")?.value, "Mamedyarov, Shakhriyar", "Sinquefield(g27): white")
    XCTAssertEqual(
      chess.getTag("Black")?.value, "Vachier-Lagrave, Maxime", "Sinquefield(g27): black")
    XCTAssertEqual(chess.getMoveCount(), 44, "Sinquefield(g27): move count")
    XCTAssertEqual(
      chess.getMoveHistory().map { $0.pcn }.joined(separator: ","),
      "d2d4,g8f6,c2c4,g7g6,b1c3,d7d5,c4d5,f6d5,e2e4,d5c3,b2c3,f8g7,d1a4,d8d7,f1b5,c7c6,b5d3,e8g8,g1f3,c6c5,a4d7,c8d7,a1b1,b7b6,c1e3,f8d8,e1g1,d7a4,f1c1,e7e6,h2h3,b8d7,d3a6,a4c6,f3d2,d7b8,a6b5,c6b5,b1b5,b8a6,e4e5,a6c7,b5b1,c7d5,e3g5,d8d7,d2e4,h7h6,g5d2,c5d4,c3d4,a8d8,g2g4,g6g5,c1c4,d5f4,d2f4,g5f4,b1b4,f4f3,e4f6,g7f6,e5f6,g8h7,g1h2,h7g6,h2g3,d7d6,c4c7,d6d4,b4d4,d8d4,c7a7,g6f6,a7b7,d4a4,b7b6,a4a2,g3f3,a2a3,f3g2,a3a2,g2f3,a2a3,f3g2,a3a2,g2f3",
      "Sinquefield(g27): PCN move history"
    )
    let fens26 = [
      "rnbqkbnr/pppppppp/8/8/3P4/8/PPP1PPPP/RNBQKBNR b KQkq - 0 1",
      "rnbqkb1r/pppppppp/5n2/8/3P4/8/PPP1PPPP/RNBQKBNR w KQkq - 1 2",
      "rnbqkb1r/pppppppp/5n2/8/2PP4/8/PP2PPPP/RNBQKBNR b KQkq - 0 2",
      "rnbqkb1r/pppppp1p/5np1/8/2PP4/8/PP2PPPP/RNBQKBNR w KQkq - 0 3",
      "rnbqkb1r/pppppp1p/5np1/8/2PP4/2N5/PP2PPPP/R1BQKBNR b KQkq - 1 3",
      "rnbqkb1r/ppp1pp1p/5np1/3p4/2PP4/2N5/PP2PPPP/R1BQKBNR w KQkq - 0 4",
      "rnbqkb1r/ppp1pp1p/5np1/3P4/3P4/2N5/PP2PPPP/R1BQKBNR b KQkq - 0 4",
      "rnbqkb1r/ppp1pp1p/6p1/3n4/3P4/2N5/PP2PPPP/R1BQKBNR w KQkq - 0 5",
      "rnbqkb1r/ppp1pp1p/6p1/3n4/3PP3/2N5/PP3PPP/R1BQKBNR b KQkq - 0 5",
      "rnbqkb1r/ppp1pp1p/6p1/8/3PP3/2n5/PP3PPP/R1BQKBNR w KQkq - 0 6",
      "rnbqkb1r/ppp1pp1p/6p1/8/3PP3/2P5/P4PPP/R1BQKBNR b KQkq - 0 6",
      "rnbqk2r/ppp1ppbp/6p1/8/3PP3/2P5/P4PPP/R1BQKBNR w KQkq - 1 7",
      "rnbqk2r/ppp1ppbp/6p1/8/Q2PP3/2P5/P4PPP/R1B1KBNR b KQkq - 2 7",
      "rnb1k2r/pppqppbp/6p1/8/Q2PP3/2P5/P4PPP/R1B1KBNR w KQkq - 3 8",
      "rnb1k2r/pppqppbp/6p1/1B6/Q2PP3/2P5/P4PPP/R1B1K1NR b KQkq - 4 8",
      "rnb1k2r/pp1qppbp/2p3p1/1B6/Q2PP3/2P5/P4PPP/R1B1K1NR w KQkq - 0 9",
      "rnb1k2r/pp1qppbp/2p3p1/8/Q2PP3/2PB4/P4PPP/R1B1K1NR b KQkq - 1 9",
      "rnb2rk1/pp1qppbp/2p3p1/8/Q2PP3/2PB4/P4PPP/R1B1K1NR w KQ - 2 10",
      "rnb2rk1/pp1qppbp/2p3p1/8/Q2PP3/2PB1N2/P4PPP/R1B1K2R b KQ - 3 10",
      "rnb2rk1/pp1qppbp/6p1/2p5/Q2PP3/2PB1N2/P4PPP/R1B1K2R w KQ - 0 11",
      "rnb2rk1/pp1Qppbp/6p1/2p5/3PP3/2PB1N2/P4PPP/R1B1K2R b KQ - 0 11",
      "rn3rk1/pp1bppbp/6p1/2p5/3PP3/2PB1N2/P4PPP/R1B1K2R w KQ - 0 12",
      "rn3rk1/pp1bppbp/6p1/2p5/3PP3/2PB1N2/P4PPP/1RB1K2R b K - 1 12",
      "rn3rk1/p2bppbp/1p4p1/2p5/3PP3/2PB1N2/P4PPP/1RB1K2R w K - 0 13",
      "rn3rk1/p2bppbp/1p4p1/2p5/3PP3/2PBBN2/P4PPP/1R2K2R b K - 1 13",
      "rn1r2k1/p2bppbp/1p4p1/2p5/3PP3/2PBBN2/P4PPP/1R2K2R w K - 2 14",
      "rn1r2k1/p2bppbp/1p4p1/2p5/3PP3/2PBBN2/P4PPP/1R3RK1 b - - 3 14",
      "rn1r2k1/p3ppbp/1p4p1/2p5/b2PP3/2PBBN2/P4PPP/1R3RK1 w - - 4 15",
      "rn1r2k1/p3ppbp/1p4p1/2p5/b2PP3/2PBBN2/P4PPP/1RR3K1 b - - 5 15",
      "rn1r2k1/p4pbp/1p2p1p1/2p5/b2PP3/2PBBN2/P4PPP/1RR3K1 w - - 0 16",
      "rn1r2k1/p4pbp/1p2p1p1/2p5/b2PP3/2PBBN1P/P4PP1/1RR3K1 b - - 0 16",
      "r2r2k1/p2n1pbp/1p2p1p1/2p5/b2PP3/2PBBN1P/P4PP1/1RR3K1 w - - 1 17",
      "r2r2k1/p2n1pbp/Bp2p1p1/2p5/b2PP3/2P1BN1P/P4PP1/1RR3K1 b - - 2 17",
      "r2r2k1/p2n1pbp/Bpb1p1p1/2p5/3PP3/2P1BN1P/P4PP1/1RR3K1 w - - 3 18",
      "r2r2k1/p2n1pbp/Bpb1p1p1/2p5/3PP3/2P1B2P/P2N1PP1/1RR3K1 b - - 4 18",
      "rn1r2k1/p4pbp/Bpb1p1p1/2p5/3PP3/2P1B2P/P2N1PP1/1RR3K1 w - - 5 19",
      "rn1r2k1/p4pbp/1pb1p1p1/1Bp5/3PP3/2P1B2P/P2N1PP1/1RR3K1 b - - 6 19",
      "rn1r2k1/p4pbp/1p2p1p1/1bp5/3PP3/2P1B2P/P2N1PP1/1RR3K1 w - - 0 20",
      "rn1r2k1/p4pbp/1p2p1p1/1Rp5/3PP3/2P1B2P/P2N1PP1/2R3K1 b - - 0 20",
      "r2r2k1/p4pbp/np2p1p1/1Rp5/3PP3/2P1B2P/P2N1PP1/2R3K1 w - - 1 21",
      "r2r2k1/p4pbp/np2p1p1/1Rp1P3/3P4/2P1B2P/P2N1PP1/2R3K1 b - - 0 21",
      "r2r2k1/p1n2pbp/1p2p1p1/1Rp1P3/3P4/2P1B2P/P2N1PP1/2R3K1 w - - 1 22",
      "r2r2k1/p1n2pbp/1p2p1p1/2p1P3/3P4/2P1B2P/P2N1PP1/1RR3K1 b - - 2 22",
      "r2r2k1/p4pbp/1p2p1p1/2pnP3/3P4/2P1B2P/P2N1PP1/1RR3K1 w - - 3 23",
      "r2r2k1/p4pbp/1p2p1p1/2pnP1B1/3P4/2P4P/P2N1PP1/1RR3K1 b - - 4 23",
      "r5k1/p2r1pbp/1p2p1p1/2pnP1B1/3P4/2P4P/P2N1PP1/1RR3K1 w - - 5 24",
      "r5k1/p2r1pbp/1p2p1p1/2pnP1B1/3PN3/2P4P/P4PP1/1RR3K1 b - - 6 24",
      "r5k1/p2r1pb1/1p2p1pp/2pnP1B1/3PN3/2P4P/P4PP1/1RR3K1 w - - 0 25",
      "r5k1/p2r1pb1/1p2p1pp/2pnP3/3PN3/2P4P/P2B1PP1/1RR3K1 b - - 1 25",
      "r5k1/p2r1pb1/1p2p1pp/3nP3/3pN3/2P4P/P2B1PP1/1RR3K1 w - - 0 26",
      "r5k1/p2r1pb1/1p2p1pp/3nP3/3PN3/7P/P2B1PP1/1RR3K1 b - - 0 26",
      "3r2k1/p2r1pb1/1p2p1pp/3nP3/3PN3/7P/P2B1PP1/1RR3K1 w - - 1 27",
      "3r2k1/p2r1pb1/1p2p1pp/3nP3/3PN1P1/7P/P2B1P2/1RR3K1 b - - 0 27",
      "3r2k1/p2r1pb1/1p2p2p/3nP1p1/3PN1P1/7P/P2B1P2/1RR3K1 w - - 0 28",
      "3r2k1/p2r1pb1/1p2p2p/3nP1p1/2RPN1P1/7P/P2B1P2/1R4K1 b - - 1 28",
      "3r2k1/p2r1pb1/1p2p2p/4P1p1/2RPNnP1/7P/P2B1P2/1R4K1 w - - 2 29",
      "3r2k1/p2r1pb1/1p2p2p/4P1p1/2RPNBP1/7P/P4P2/1R4K1 b - - 0 29",
      "3r2k1/p2r1pb1/1p2p2p/4P3/2RPNpP1/7P/P4P2/1R4K1 w - - 0 30",
      "3r2k1/p2r1pb1/1p2p2p/4P3/1RRPNpP1/7P/P4P2/6K1 b - - 1 30",
      "3r2k1/p2r1pb1/1p2p2p/4P3/1RRPN1P1/5p1P/P4P2/6K1 w - - 0 31",
      "3r2k1/p2r1pb1/1p2pN1p/4P3/1RRP2P1/5p1P/P4P2/6K1 b - - 1 31",
      "3r2k1/p2r1p2/1p2pb1p/4P3/1RRP2P1/5p1P/P4P2/6K1 w - - 0 32",
      "3r2k1/p2r1p2/1p2pP1p/8/1RRP2P1/5p1P/P4P2/6K1 b - - 0 32",
      "3r4/p2r1p1k/1p2pP1p/8/1RRP2P1/5p1P/P4P2/6K1 w - - 1 33",
      "3r4/p2r1p1k/1p2pP1p/8/1RRP2P1/5p1P/P4P1K/8 b - - 2 33",
      "3r4/p2r1p2/1p2pPkp/8/1RRP2P1/5p1P/P4P1K/8 w - - 3 34",
      "3r4/p2r1p2/1p2pPkp/8/1RRP2P1/5pKP/P4P2/8 b - - 4 34",
      "3r4/p4p2/1p1rpPkp/8/1RRP2P1/5pKP/P4P2/8 w - - 5 35",
      "3r4/p1R2p2/1p1rpPkp/8/1R1P2P1/5pKP/P4P2/8 b - - 6 35",
      "3r4/p1R2p2/1p2pPkp/8/1R1r2P1/5pKP/P4P2/8 w - - 0 36",
      "3r4/p1R2p2/1p2pPkp/8/3R2P1/5pKP/P4P2/8 b - - 0 36",
      "8/p1R2p2/1p2pPkp/8/3r2P1/5pKP/P4P2/8 w - - 0 37",
      "8/R4p2/1p2pPkp/8/3r2P1/5pKP/P4P2/8 b - - 0 37",
      "8/R4p2/1p2pk1p/8/3r2P1/5pKP/P4P2/8 w - - 0 38",
      "8/1R3p2/1p2pk1p/8/3r2P1/5pKP/P4P2/8 b - - 1 38",
      "8/1R3p2/1p2pk1p/8/r5P1/5pKP/P4P2/8 w - - 2 39",
      "8/5p2/1R2pk1p/8/r5P1/5pKP/P4P2/8 b - - 0 39",
      "8/5p2/1R2pk1p/8/6P1/5pKP/r4P2/8 w - - 0 40",
      "8/5p2/1R2pk1p/8/6P1/5K1P/r4P2/8 b - - 0 40",
      "8/5p2/1R2pk1p/8/6P1/r4K1P/5P2/8 w - - 1 41",
      "8/5p2/1R2pk1p/8/6P1/r6P/5PK1/8 b - - 2 41",
      "8/5p2/1R2pk1p/8/6P1/7P/r4PK1/8 w - - 3 42",
      "8/5p2/1R2pk1p/8/6P1/5K1P/r4P2/8 b - - 4 42",
      "8/5p2/1R2pk1p/8/6P1/r4K1P/5P2/8 w - - 5 43",
      "8/5p2/1R2pk1p/8/6P1/r6P/5PK1/8 b - - 6 43",
      "8/5p2/1R2pk1p/8/6P1/7P/r4PK1/8 w - - 7 44",
      "8/5p2/1R2pk1p/8/6P1/5K1P/r4P2/8 b - - 8 44",
    ]
    for (index, history) in chess.getMoveHistory().enumerated() {
      XCTAssertEqual(history.fen, fens26[index], "Sinquefield(g27): FEN move (index)")
    }

    pgn = pgns.removeFirst()
    chess = try pgn.validate()
    XCTAssertEqual(chess.getTag("Event")?.value, "Sinquefield Cup", "Sinquefield(g28): event")
    XCTAssertEqual(chess.getTag("White")?.value, "Caruana, Fabiano", "Sinquefield(g28): white")
    XCTAssertEqual(chess.getTag("Black")?.value, "Karjakin, Sergey", "Sinquefield(g28): black")
    XCTAssertEqual(chess.getMoveCount(), 30, "Sinquefield(g28): move count")
    XCTAssertEqual(
      chess.getMoveHistory().map { $0.pcn }.joined(separator: ","),
      "d2d4,g8f6,c2c4,e7e6,b1c3,f8b4,g2g3,e8g8,f1g2,d7d5,g1f3,d5c4,e1g1,b8c6,d1a4,c8d7,c1g5,a7a5,g5f6,d8f6,a2a3,b4c3,b2c3,f6d8,a4c4,a5a4,f3d2,c6a5,c4b4,a8a7,a1b1,b7b6,e2e3,d7c6,g2c6,a5c6,b4b5,d8a8,c3c4,f8d8,f1c1,e6e5,d4d5,c6b8,c4c5,a7a5,b5b2,a8d5,c5b6,c7b6,d2c4,a5c5,b2b6,f7f6,c1d1,d5d1,b1d1,d8d1,g1g2",
      "Sinquefield(g28): PCN move history"
    )
    let fens27 = [
      "rnbqkbnr/pppppppp/8/8/3P4/8/PPP1PPPP/RNBQKBNR b KQkq - 0 1",
      "rnbqkb1r/pppppppp/5n2/8/3P4/8/PPP1PPPP/RNBQKBNR w KQkq - 1 2",
      "rnbqkb1r/pppppppp/5n2/8/2PP4/8/PP2PPPP/RNBQKBNR b KQkq - 0 2",
      "rnbqkb1r/pppp1ppp/4pn2/8/2PP4/8/PP2PPPP/RNBQKBNR w KQkq - 0 3",
      "rnbqkb1r/pppp1ppp/4pn2/8/2PP4/2N5/PP2PPPP/R1BQKBNR b KQkq - 1 3",
      "rnbqk2r/pppp1ppp/4pn2/8/1bPP4/2N5/PP2PPPP/R1BQKBNR w KQkq - 2 4",
      "rnbqk2r/pppp1ppp/4pn2/8/1bPP4/2N3P1/PP2PP1P/R1BQKBNR b KQkq - 0 4",
      "rnbq1rk1/pppp1ppp/4pn2/8/1bPP4/2N3P1/PP2PP1P/R1BQKBNR w KQ - 1 5",
      "rnbq1rk1/pppp1ppp/4pn2/8/1bPP4/2N3P1/PP2PPBP/R1BQK1NR b KQ - 2 5",
      "rnbq1rk1/ppp2ppp/4pn2/3p4/1bPP4/2N3P1/PP2PPBP/R1BQK1NR w KQ - 0 6",
      "rnbq1rk1/ppp2ppp/4pn2/3p4/1bPP4/2N2NP1/PP2PPBP/R1BQK2R b KQ - 1 6",
      "rnbq1rk1/ppp2ppp/4pn2/8/1bpP4/2N2NP1/PP2PPBP/R1BQK2R w KQ - 0 7",
      "rnbq1rk1/ppp2ppp/4pn2/8/1bpP4/2N2NP1/PP2PPBP/R1BQ1RK1 b - - 1 7",
      "r1bq1rk1/ppp2ppp/2n1pn2/8/1bpP4/2N2NP1/PP2PPBP/R1BQ1RK1 w - - 2 8",
      "r1bq1rk1/ppp2ppp/2n1pn2/8/QbpP4/2N2NP1/PP2PPBP/R1B2RK1 b - - 3 8",
      "r2q1rk1/pppb1ppp/2n1pn2/8/QbpP4/2N2NP1/PP2PPBP/R1B2RK1 w - - 4 9",
      "r2q1rk1/pppb1ppp/2n1pn2/6B1/QbpP4/2N2NP1/PP2PPBP/R4RK1 b - - 5 9",
      "r2q1rk1/1ppb1ppp/2n1pn2/p5B1/QbpP4/2N2NP1/PP2PPBP/R4RK1 w - - 0 10",
      "r2q1rk1/1ppb1ppp/2n1pB2/p7/QbpP4/2N2NP1/PP2PPBP/R4RK1 b - - 0 10",
      "r4rk1/1ppb1ppp/2n1pq2/p7/QbpP4/2N2NP1/PP2PPBP/R4RK1 w - - 0 11",
      "r4rk1/1ppb1ppp/2n1pq2/p7/QbpP4/P1N2NP1/1P2PPBP/R4RK1 b - - 0 11",
      "r4rk1/1ppb1ppp/2n1pq2/p7/Q1pP4/P1b2NP1/1P2PPBP/R4RK1 w - - 0 12",
      "r4rk1/1ppb1ppp/2n1pq2/p7/Q1pP4/P1P2NP1/4PPBP/R4RK1 b - - 0 12",
      "r2q1rk1/1ppb1ppp/2n1p3/p7/Q1pP4/P1P2NP1/4PPBP/R4RK1 w - - 1 13",
      "r2q1rk1/1ppb1ppp/2n1p3/p7/2QP4/P1P2NP1/4PPBP/R4RK1 b - - 0 13",
      "r2q1rk1/1ppb1ppp/2n1p3/8/p1QP4/P1P2NP1/4PPBP/R4RK1 w - - 0 14",
      "r2q1rk1/1ppb1ppp/2n1p3/8/p1QP4/P1P3P1/3NPPBP/R4RK1 b - - 1 14",
      "r2q1rk1/1ppb1ppp/4p3/n7/p1QP4/P1P3P1/3NPPBP/R4RK1 w - - 2 15",
      "r2q1rk1/1ppb1ppp/4p3/n7/pQ1P4/P1P3P1/3NPPBP/R4RK1 b - - 3 15",
      "3q1rk1/rppb1ppp/4p3/n7/pQ1P4/P1P3P1/3NPPBP/R4RK1 w - - 4 16",
      "3q1rk1/rppb1ppp/4p3/n7/pQ1P4/P1P3P1/3NPPBP/1R3RK1 b - - 5 16",
      "3q1rk1/r1pb1ppp/1p2p3/n7/pQ1P4/P1P3P1/3NPPBP/1R3RK1 w - - 0 17",
      "3q1rk1/r1pb1ppp/1p2p3/n7/pQ1P4/P1P1P1P1/3N1PBP/1R3RK1 b - - 0 17",
      "3q1rk1/r1p2ppp/1pb1p3/n7/pQ1P4/P1P1P1P1/3N1PBP/1R3RK1 w - - 1 18",
      "3q1rk1/r1p2ppp/1pB1p3/n7/pQ1P4/P1P1P1P1/3N1P1P/1R3RK1 b - - 0 18",
      "3q1rk1/r1p2ppp/1pn1p3/8/pQ1P4/P1P1P1P1/3N1P1P/1R3RK1 w - - 0 19",
      "3q1rk1/r1p2ppp/1pn1p3/1Q6/p2P4/P1P1P1P1/3N1P1P/1R3RK1 b - - 1 19",
      "q4rk1/r1p2ppp/1pn1p3/1Q6/p2P4/P1P1P1P1/3N1P1P/1R3RK1 w - - 2 20",
      "q4rk1/r1p2ppp/1pn1p3/1Q6/p1PP4/P3P1P1/3N1P1P/1R3RK1 b - - 0 20",
      "q2r2k1/r1p2ppp/1pn1p3/1Q6/p1PP4/P3P1P1/3N1P1P/1R3RK1 w - - 1 21",
      "q2r2k1/r1p2ppp/1pn1p3/1Q6/p1PP4/P3P1P1/3N1P1P/1RR3K1 b - - 2 21",
      "q2r2k1/r1p2ppp/1pn5/1Q2p3/p1PP4/P3P1P1/3N1P1P/1RR3K1 w - - 0 22",
      "q2r2k1/r1p2ppp/1pn5/1Q1Pp3/p1P5/P3P1P1/3N1P1P/1RR3K1 b - - 0 22",
      "qn1r2k1/r1p2ppp/1p6/1Q1Pp3/p1P5/P3P1P1/3N1P1P/1RR3K1 w - - 1 23",
      "qn1r2k1/r1p2ppp/1p6/1QPPp3/p7/P3P1P1/3N1P1P/1RR3K1 b - - 0 23",
      "qn1r2k1/2p2ppp/1p6/rQPPp3/p7/P3P1P1/3N1P1P/1RR3K1 w - - 1 24",
      "qn1r2k1/2p2ppp/1p6/r1PPp3/p7/P3P1P1/1Q1N1P1P/1RR3K1 b - - 2 24",
      "1n1r2k1/2p2ppp/1p6/r1Pqp3/p7/P3P1P1/1Q1N1P1P/1RR3K1 w - - 0 25",
      "1n1r2k1/2p2ppp/1P6/r2qp3/p7/P3P1P1/1Q1N1P1P/1RR3K1 b - - 0 25",
      "1n1r2k1/5ppp/1p6/r2qp3/p7/P3P1P1/1Q1N1P1P/1RR3K1 w - - 0 26",
      "1n1r2k1/5ppp/1p6/r2qp3/p1N5/P3P1P1/1Q3P1P/1RR3K1 b - - 1 26",
      "1n1r2k1/5ppp/1p6/2rqp3/p1N5/P3P1P1/1Q3P1P/1RR3K1 w - - 2 27",
      "1n1r2k1/5ppp/1Q6/2rqp3/p1N5/P3P1P1/5P1P/1RR3K1 b - - 0 27",
      "1n1r2k1/6pp/1Q3p2/2rqp3/p1N5/P3P1P1/5P1P/1RR3K1 w - - 0 28",
      "1n1r2k1/6pp/1Q3p2/2rqp3/p1N5/P3P1P1/5P1P/1R1R2K1 b - - 1 28",
      "1n1r2k1/6pp/1Q3p2/2r1p3/p1N5/P3P1P1/5P1P/1R1q2K1 w - - 0 29",
      "1n1r2k1/6pp/1Q3p2/2r1p3/p1N5/P3P1P1/5P1P/3R2K1 b - - 0 29",
      "1n4k1/6pp/1Q3p2/2r1p3/p1N5/P3P1P1/5P1P/3r2K1 w - - 0 30",
      "1n4k1/6pp/1Q3p2/2r1p3/p1N5/P3P1P1/5PKP/3r4 b - - 1 30",
    ]
    for (index, history) in chess.getMoveHistory().enumerated() {
      XCTAssertEqual(history.fen, fens27[index], "Sinquefield(g28): FEN move (index)")
    }

    pgn = pgns.removeFirst()
    chess = try pgn.validate()
    XCTAssertEqual(chess.getTag("Event")?.value, "Sinquefield Cup", "Sinquefield(g29): event")
    XCTAssertEqual(chess.getTag("White")?.value, "Nakamura, Hikaru", "Sinquefield(g29): white")
    XCTAssertEqual(chess.getTag("Black")?.value, "Aronian, Levon", "Sinquefield(g29): black")
    XCTAssertEqual(chess.getMoveCount(), 68, "Sinquefield(g29): move count")
    XCTAssertEqual(
      chess.getMoveHistory().map { $0.pcn }.joined(separator: ","),
      "c2c4,g8f6,b1c3,e7e5,g1f3,b8c6,g2g3,d7d5,c4d5,f6d5,f1g2,f8c5,e1g1,e8g8,c3d5,d8d5,d2d3,d5d8,c1e3,c5e3,f2e3,e5e4,d3e4,d8e7,d1c2,c8g4,a1c1,a8d8,h2h3,g4c8,a2a3,d8e8,e4e5,h7h6,c2c5,e7c5,c1c5,c6e7,c5c7,e7d5,c7c5,d5e3,f1c1,e8d8,c1c3,e3g2,g1g2,c8f5,c5c7,f5e4,g2f2,f8e8,c3c4,e4f3,f2f3,e8e5,c7b7,d8d2,e2e3,g7g5,c4d4,d2c2,d4d7,e5f5,f3e4,f5f6,b7b8,g8g7,d7a7,f6e6,e4f3,e6f6,f3e4,f6e6,e4d3,c2g2,g3g4,g2g3,b8b7,e6e3,d3c2,e3f3,a3a4,g3h3,a4a5,h3h4,a5a6,h4g4,a7a8,g4a4,a6a7,g5g4,a8c8,g4g3,a7a8q,a4a8,c8a8,h6h5,b7b8,g7f6,b8g8,h5h4,a8a6,f6e7,a6h6,f3f2,c2d3,f2h2,d3e4,g3g2,e4e5,h4h3,h6c6,f7f6,e5d5,e7f7,g8g3,h2h1,c6c7,f7f8,c7c8,f8f7,c8c7,f7f8,d5e6,h1e1,e6f6,e1f1,f6e6,f1e1,e6f6,e1f1,f6e6,f1e1,e6f6",
      "Sinquefield(g29): PCN move history"
    )
    let fens28 = [
      "rnbqkbnr/pppppppp/8/8/2P5/8/PP1PPPPP/RNBQKBNR b KQkq - 0 1",
      "rnbqkb1r/pppppppp/5n2/8/2P5/8/PP1PPPPP/RNBQKBNR w KQkq - 1 2",
      "rnbqkb1r/pppppppp/5n2/8/2P5/2N5/PP1PPPPP/R1BQKBNR b KQkq - 2 2",
      "rnbqkb1r/pppp1ppp/5n2/4p3/2P5/2N5/PP1PPPPP/R1BQKBNR w KQkq - 0 3",
      "rnbqkb1r/pppp1ppp/5n2/4p3/2P5/2N2N2/PP1PPPPP/R1BQKB1R b KQkq - 1 3",
      "r1bqkb1r/pppp1ppp/2n2n2/4p3/2P5/2N2N2/PP1PPPPP/R1BQKB1R w KQkq - 2 4",
      "r1bqkb1r/pppp1ppp/2n2n2/4p3/2P5/2N2NP1/PP1PPP1P/R1BQKB1R b KQkq - 0 4",
      "r1bqkb1r/ppp2ppp/2n2n2/3pp3/2P5/2N2NP1/PP1PPP1P/R1BQKB1R w KQkq - 0 5",
      "r1bqkb1r/ppp2ppp/2n2n2/3Pp3/8/2N2NP1/PP1PPP1P/R1BQKB1R b KQkq - 0 5",
      "r1bqkb1r/ppp2ppp/2n5/3np3/8/2N2NP1/PP1PPP1P/R1BQKB1R w KQkq - 0 6",
      "r1bqkb1r/ppp2ppp/2n5/3np3/8/2N2NP1/PP1PPPBP/R1BQK2R b KQkq - 1 6",
      "r1bqk2r/ppp2ppp/2n5/2bnp3/8/2N2NP1/PP1PPPBP/R1BQK2R w KQkq - 2 7",
      "r1bqk2r/ppp2ppp/2n5/2bnp3/8/2N2NP1/PP1PPPBP/R1BQ1RK1 b kq - 3 7",
      "r1bq1rk1/ppp2ppp/2n5/2bnp3/8/2N2NP1/PP1PPPBP/R1BQ1RK1 w - - 4 8",
      "r1bq1rk1/ppp2ppp/2n5/2bNp3/8/5NP1/PP1PPPBP/R1BQ1RK1 b - - 0 8",
      "r1b2rk1/ppp2ppp/2n5/2bqp3/8/5NP1/PP1PPPBP/R1BQ1RK1 w - - 0 9",
      "r1b2rk1/ppp2ppp/2n5/2bqp3/8/3P1NP1/PP2PPBP/R1BQ1RK1 b - - 0 9",
      "r1bq1rk1/ppp2ppp/2n5/2b1p3/8/3P1NP1/PP2PPBP/R1BQ1RK1 w - - 1 10",
      "r1bq1rk1/ppp2ppp/2n5/2b1p3/8/3PBNP1/PP2PPBP/R2Q1RK1 b - - 2 10",
      "r1bq1rk1/ppp2ppp/2n5/4p3/8/3PbNP1/PP2PPBP/R2Q1RK1 w - - 0 11",
      "r1bq1rk1/ppp2ppp/2n5/4p3/8/3PPNP1/PP2P1BP/R2Q1RK1 b - - 0 11",
      "r1bq1rk1/ppp2ppp/2n5/8/4p3/3PPNP1/PP2P1BP/R2Q1RK1 w - - 0 12",
      "r1bq1rk1/ppp2ppp/2n5/8/4P3/4PNP1/PP2P1BP/R2Q1RK1 b - - 0 12",
      "r1b2rk1/ppp1qppp/2n5/8/4P3/4PNP1/PP2P1BP/R2Q1RK1 w - - 1 13",
      "r1b2rk1/ppp1qppp/2n5/8/4P3/4PNP1/PPQ1P1BP/R4RK1 b - - 2 13",
      "r4rk1/ppp1qppp/2n5/8/4P1b1/4PNP1/PPQ1P1BP/R4RK1 w - - 3 14",
      "r4rk1/ppp1qppp/2n5/8/4P1b1/4PNP1/PPQ1P1BP/2R2RK1 b - - 4 14",
      "3r1rk1/ppp1qppp/2n5/8/4P1b1/4PNP1/PPQ1P1BP/2R2RK1 w - - 5 15",
      "3r1rk1/ppp1qppp/2n5/8/4P1b1/4PNPP/PPQ1P1B1/2R2RK1 b - - 0 15",
      "2br1rk1/ppp1qppp/2n5/8/4P3/4PNPP/PPQ1P1B1/2R2RK1 w - - 1 16",
      "2br1rk1/ppp1qppp/2n5/8/4P3/P3PNPP/1PQ1P1B1/2R2RK1 b - - 0 16",
      "2b1rrk1/ppp1qppp/2n5/8/4P3/P3PNPP/1PQ1P1B1/2R2RK1 w - - 1 17",
      "2b1rrk1/ppp1qppp/2n5/4P3/8/P3PNPP/1PQ1P1B1/2R2RK1 b - - 0 17",
      "2b1rrk1/ppp1qpp1/2n4p/4P3/8/P3PNPP/1PQ1P1B1/2R2RK1 w - - 0 18",
      "2b1rrk1/ppp1qpp1/2n4p/2Q1P3/8/P3PNPP/1P2P1B1/2R2RK1 b - - 1 18",
      "2b1rrk1/ppp2pp1/2n4p/2q1P3/8/P3PNPP/1P2P1B1/2R2RK1 w - - 0 19",
      "2b1rrk1/ppp2pp1/2n4p/2R1P3/8/P3PNPP/1P2P1B1/5RK1 b - - 0 19",
      "2b1rrk1/ppp1npp1/7p/2R1P3/8/P3PNPP/1P2P1B1/5RK1 w - - 1 20",
      "2b1rrk1/ppR1npp1/7p/4P3/8/P3PNPP/1P2P1B1/5RK1 b - - 0 20",
      "2b1rrk1/ppR2pp1/7p/3nP3/8/P3PNPP/1P2P1B1/5RK1 w - - 1 21",
      "2b1rrk1/pp3pp1/7p/2RnP3/8/P3PNPP/1P2P1B1/5RK1 b - - 2 21",
      "2b1rrk1/pp3pp1/7p/2R1P3/8/P3nNPP/1P2P1B1/5RK1 w - - 0 22",
      "2b1rrk1/pp3pp1/7p/2R1P3/8/P3nNPP/1P2P1B1/2R3K1 b - - 1 22",
      "2br1rk1/pp3pp1/7p/2R1P3/8/P3nNPP/1P2P1B1/2R3K1 w - - 2 23",
      "2br1rk1/pp3pp1/7p/2R1P3/8/P1R1nNPP/1P2P1B1/6K1 b - - 3 23",
      "2br1rk1/pp3pp1/7p/2R1P3/8/P1R2NPP/1P2P1n1/6K1 w - - 0 24",
      "2br1rk1/pp3pp1/7p/2R1P3/8/P1R2NPP/1P2P1K1/8 b - - 0 24",
      "3r1rk1/pp3pp1/7p/2R1Pb2/8/P1R2NPP/1P2P1K1/8 w - - 1 25",
      "3r1rk1/ppR2pp1/7p/4Pb2/8/P1R2NPP/1P2P1K1/8 b - - 2 25",
      "3r1rk1/ppR2pp1/7p/4P3/4b3/P1R2NPP/1P2P1K1/8 w - - 3 26",
      "3r1rk1/ppR2pp1/7p/4P3/4b3/P1R2NPP/1P2PK2/8 b - - 4 26",
      "3rr1k1/ppR2pp1/7p/4P3/4b3/P1R2NPP/1P2PK2/8 w - - 5 27",
      "3rr1k1/ppR2pp1/7p/4P3/2R1b3/P4NPP/1P2PK2/8 b - - 6 27",
      "3rr1k1/ppR2pp1/7p/4P3/2R5/P4bPP/1P2PK2/8 w - - 0 28",
      "3rr1k1/ppR2pp1/7p/4P3/2R5/P4KPP/1P2P3/8 b - - 0 28",
      "3r2k1/ppR2pp1/7p/4r3/2R5/P4KPP/1P2P3/8 w - - 0 29",
      "3r2k1/pR3pp1/7p/4r3/2R5/P4KPP/1P2P3/8 b - - 0 29",
      "6k1/pR3pp1/7p/4r3/2R5/P4KPP/1P1rP3/8 w - - 1 30",
      "6k1/pR3pp1/7p/4r3/2R5/P3PKPP/1P1r4/8 b - - 0 30",
      "6k1/pR3p2/7p/4r1p1/2R5/P3PKPP/1P1r4/8 w - - 0 31",
      "6k1/pR3p2/7p/4r1p1/3R4/P3PKPP/1P1r4/8 b - - 1 31",
      "6k1/pR3p2/7p/4r1p1/3R4/P3PKPP/1Pr5/8 w - - 2 32",
      "6k1/pR1R1p2/7p/4r1p1/8/P3PKPP/1Pr5/8 b - - 3 32",
      "6k1/pR1R1p2/7p/5rp1/8/P3PKPP/1Pr5/8 w - - 4 33",
      "6k1/pR1R1p2/7p/5rp1/4K3/P3P1PP/1Pr5/8 b - - 5 33",
      "6k1/pR1R1p2/5r1p/6p1/4K3/P3P1PP/1Pr5/8 w - - 6 34",
      "1R4k1/p2R1p2/5r1p/6p1/4K3/P3P1PP/1Pr5/8 b - - 7 34",
      "1R6/p2R1pk1/5r1p/6p1/4K3/P3P1PP/1Pr5/8 w - - 8 35",
      "1R6/R4pk1/5r1p/6p1/4K3/P3P1PP/1Pr5/8 b - - 0 35",
      "1R6/R4pk1/4r2p/6p1/4K3/P3P1PP/1Pr5/8 w - - 1 36",
      "1R6/R4pk1/4r2p/6p1/8/P3PKPP/1Pr5/8 b - - 2 36",
      "1R6/R4pk1/5r1p/6p1/8/P3PKPP/1Pr5/8 w - - 3 37",
      "1R6/R4pk1/5r1p/6p1/4K3/P3P1PP/1Pr5/8 b - - 4 37",
      "1R6/R4pk1/4r2p/6p1/4K3/P3P1PP/1Pr5/8 w - - 5 38",
      "1R6/R4pk1/4r2p/6p1/8/P2KP1PP/1Pr5/8 b - - 6 38",
      "1R6/R4pk1/4r2p/6p1/8/P2KP1PP/1P4r1/8 w - - 7 39",
      "1R6/R4pk1/4r2p/6p1/6P1/P2KP2P/1P4r1/8 b - - 0 39",
      "1R6/R4pk1/4r2p/6p1/6P1/P2KP1rP/1P6/8 w - - 1 40",
      "8/RR3pk1/4r2p/6p1/6P1/P2KP1rP/1P6/8 b - - 2 40",
      "8/RR3pk1/7p/6p1/6P1/P2Kr1rP/1P6/8 w - - 0 41",
      "8/RR3pk1/7p/6p1/6P1/P3r1rP/1PK5/8 b - - 1 41",
      "8/RR3pk1/7p/6p1/6P1/P4rrP/1PK5/8 w - - 2 42",
      "8/RR3pk1/7p/6p1/P5P1/5rrP/1PK5/8 b - - 0 42",
      "8/RR3pk1/7p/6p1/P5P1/5r1r/1PK5/8 w - - 0 43",
      "8/RR3pk1/7p/P5p1/6P1/5r1r/1PK5/8 b - - 0 43",
      "8/RR3pk1/7p/P5p1/6Pr/5r2/1PK5/8 w - - 1 44",
      "8/RR3pk1/P6p/6p1/6Pr/5r2/1PK5/8 b - - 0 44",
      "8/RR3pk1/P6p/6p1/6r1/5r2/1PK5/8 w - - 0 45",
      "R7/1R3pk1/P6p/6p1/6r1/5r2/1PK5/8 b - - 1 45",
      "R7/1R3pk1/P6p/6p1/r7/5r2/1PK5/8 w - - 2 46",
      "R7/PR3pk1/7p/6p1/r7/5r2/1PK5/8 b - - 0 46",
      "R7/PR3pk1/7p/8/r5p1/5r2/1PK5/8 w - - 0 47",
      "2R5/PR3pk1/7p/8/r5p1/5r2/1PK5/8 b - - 1 47",
      "2R5/PR3pk1/7p/8/r7/5rp1/1PK5/8 w - - 0 48",
      "Q1R5/1R3pk1/7p/8/r7/5rp1/1PK5/8 b - - 0 48",
      "r1R5/1R3pk1/7p/8/8/5rp1/1PK5/8 w - - 0 49",
      "R7/1R3pk1/7p/8/8/5rp1/1PK5/8 b - - 0 49",
      "R7/1R3pk1/8/7p/8/5rp1/1PK5/8 w - - 0 50",
      "RR6/5pk1/8/7p/8/5rp1/1PK5/8 b - - 1 50",
      "RR6/5p2/5k2/7p/8/5rp1/1PK5/8 w - - 2 51",
      "R5R1/5p2/5k2/7p/8/5rp1/1PK5/8 b - - 3 51",
      "R5R1/5p2/5k2/8/7p/5rp1/1PK5/8 w - - 0 52",
      "6R1/5p2/R4k2/8/7p/5rp1/1PK5/8 b - - 1 52",
      "6R1/4kp2/R7/8/7p/5rp1/1PK5/8 w - - 2 53",
      "6R1/4kp2/7R/8/7p/5rp1/1PK5/8 b - - 3 53",
      "6R1/4kp2/7R/8/7p/6p1/1PK2r2/8 w - - 4 54",
      "6R1/4kp2/7R/8/7p/3K2p1/1P3r2/8 b - - 5 54",
      "6R1/4kp2/7R/8/7p/3K2p1/1P5r/8 w - - 6 55",
      "6R1/4kp2/7R/8/4K2p/6p1/1P5r/8 b - - 7 55",
      "6R1/4kp2/7R/8/4K2p/8/1P4pr/8 w - - 0 56",
      "6R1/4kp2/7R/4K3/7p/8/1P4pr/8 b - - 1 56",
      "6R1/4kp2/7R/4K3/8/7p/1P4pr/8 w - - 0 57",
      "6R1/4kp2/2R5/4K3/8/7p/1P4pr/8 b - - 1 57",
      "6R1/4k3/2R2p2/4K3/8/7p/1P4pr/8 w - - 0 58",
      "6R1/4k3/2R2p2/3K4/8/7p/1P4pr/8 b - - 1 58",
      "6R1/5k2/2R2p2/3K4/8/7p/1P4pr/8 w - - 2 59",
      "8/5k2/2R2p2/3K4/8/6Rp/1P4pr/8 b - - 3 59",
      "8/5k2/2R2p2/3K4/8/6Rp/1P4p1/7r w - - 4 60",
      "8/2R2k2/5p2/3K4/8/6Rp/1P4p1/7r b - - 5 60",
      "5k2/2R5/5p2/3K4/8/6Rp/1P4p1/7r w - - 6 61",
      "2R2k2/8/5p2/3K4/8/6Rp/1P4p1/7r b - - 7 61",
      "2R5/5k2/5p2/3K4/8/6Rp/1P4p1/7r w - - 8 62",
      "8/2R2k2/5p2/3K4/8/6Rp/1P4p1/7r b - - 9 62",
      "5k2/2R5/5p2/3K4/8/6Rp/1P4p1/7r w - - 10 63",
      "5k2/2R5/4Kp2/8/8/6Rp/1P4p1/7r b - - 11 63",
      "5k2/2R5/4Kp2/8/8/6Rp/1P4p1/4r3 w - - 12 64",
      "5k2/2R5/5K2/8/8/6Rp/1P4p1/4r3 b - - 0 64",
      "5k2/2R5/5K2/8/8/6Rp/1P4p1/5r2 w - - 1 65",
      "5k2/2R5/4K3/8/8/6Rp/1P4p1/5r2 b - - 2 65",
      "5k2/2R5/4K3/8/8/6Rp/1P4p1/4r3 w - - 3 66",
      "5k2/2R5/5K2/8/8/6Rp/1P4p1/4r3 b - - 4 66",
      "5k2/2R5/5K2/8/8/6Rp/1P4p1/5r2 w - - 5 67",
      "5k2/2R5/4K3/8/8/6Rp/1P4p1/5r2 b - - 6 67",
      "5k2/2R5/4K3/8/8/6Rp/1P4p1/4r3 w - - 7 68",
      "5k2/2R5/5K2/8/8/6Rp/1P4p1/4r3 b - - 8 68",
    ]
    for (index, history) in chess.getMoveHistory().enumerated() {
      XCTAssertEqual(history.fen, fens28[index], "Sinquefield(g29): FEN move (index)")
    }

    pgn = pgns.removeFirst()
    chess = try pgn.validate()
    XCTAssertEqual(chess.getTag("Event")?.value, "Sinquefield Cup", "Sinquefield(g30): event")
    XCTAssertEqual(chess.getTag("White")?.value, "So, Wesley", "Sinquefield(g30): white")
    XCTAssertEqual(chess.getTag("Black")?.value, "Anand, Viswanathan", "Sinquefield(g30): black")
    XCTAssertEqual(chess.getMoveCount(), 66, "Sinquefield(g30): move count")
    XCTAssertEqual(
      chess.getMoveHistory().map { $0.pcn }.joined(separator: ","),
      "d2d4,g8f6,c2c4,e7e6,g1f3,d7d5,b1c3,f8e7,c1f4,e8g8,e2e3,c7c5,d4c5,e7c5,c4d5,f6d5,c3d5,e6d5,a2a3,b8c6,f1d3,c5b6,e1g1,c8g4,h2h3,g4h5,d3b1,d5d4,d1d3,h5g6,e3e4,f8e8,f1e1,d8e7,d3b5,f7f6,f3h4,g6f7,h4f5,e7c5,b5e2,c6e5,f4e5,c5e5,b1d3,f7g6,e2d2,g6f5,e4f5,e5d5,d2c2,g8f8,e1e6,e8e6,f5e6,g7g6,a1e1,a8e8,d3c4,d4d3,c2d3,d5d3,c4d3,f8e7,d3c4,e8d8,e1e2,b6a5,b2b4,d8d1,g1h2,a5c7,g2g3,d1c1,c4a2,c1c3,a3a4,c7d6,b4b5,c3a3,a2d5,b7b6,e2a2,a3a2,d5a2,f6f5,h2g2,d6e5,g3g4,f5g4,h3g4,h7h5,g4h5,g6h5,g2h3,e5f6,a2c4,e7d6,h3g3,d6e7,g3f4,h5h4,f4g4,e7d6,f2f3,d6e7,f3f4,e7d6,g4f5,d6e7,c4f1,f6a1,f1h3,a1f6,h3g4,f6a1,f5e4,e7d6,g4h3,a1b2,e4d3,b2f6,d3c4,f6e7,c4d4,e7f6,d4c4,f6e7,c4d4,e7f6,d4c4",
      "Sinquefield(g30): PCN move history"
    )
    let fens29 = [
      "rnbqkbnr/pppppppp/8/8/3P4/8/PPP1PPPP/RNBQKBNR b KQkq - 0 1",
      "rnbqkb1r/pppppppp/5n2/8/3P4/8/PPP1PPPP/RNBQKBNR w KQkq - 1 2",
      "rnbqkb1r/pppppppp/5n2/8/2PP4/8/PP2PPPP/RNBQKBNR b KQkq - 0 2",
      "rnbqkb1r/pppp1ppp/4pn2/8/2PP4/8/PP2PPPP/RNBQKBNR w KQkq - 0 3",
      "rnbqkb1r/pppp1ppp/4pn2/8/2PP4/5N2/PP2PPPP/RNBQKB1R b KQkq - 1 3",
      "rnbqkb1r/ppp2ppp/4pn2/3p4/2PP4/5N2/PP2PPPP/RNBQKB1R w KQkq - 0 4",
      "rnbqkb1r/ppp2ppp/4pn2/3p4/2PP4/2N2N2/PP2PPPP/R1BQKB1R b KQkq - 1 4",
      "rnbqk2r/ppp1bppp/4pn2/3p4/2PP4/2N2N2/PP2PPPP/R1BQKB1R w KQkq - 2 5",
      "rnbqk2r/ppp1bppp/4pn2/3p4/2PP1B2/2N2N2/PP2PPPP/R2QKB1R b KQkq - 3 5",
      "rnbq1rk1/ppp1bppp/4pn2/3p4/2PP1B2/2N2N2/PP2PPPP/R2QKB1R w KQ - 4 6",
      "rnbq1rk1/ppp1bppp/4pn2/3p4/2PP1B2/2N1PN2/PP3PPP/R2QKB1R b KQ - 0 6",
      "rnbq1rk1/pp2bppp/4pn2/2pp4/2PP1B2/2N1PN2/PP3PPP/R2QKB1R w KQ - 0 7",
      "rnbq1rk1/pp2bppp/4pn2/2Pp4/2P2B2/2N1PN2/PP3PPP/R2QKB1R b KQ - 0 7",
      "rnbq1rk1/pp3ppp/4pn2/2bp4/2P2B2/2N1PN2/PP3PPP/R2QKB1R w KQ - 0 8",
      "rnbq1rk1/pp3ppp/4pn2/2bP4/5B2/2N1PN2/PP3PPP/R2QKB1R b KQ - 0 8",
      "rnbq1rk1/pp3ppp/4p3/2bn4/5B2/2N1PN2/PP3PPP/R2QKB1R w KQ - 0 9",
      "rnbq1rk1/pp3ppp/4p3/2bN4/5B2/4PN2/PP3PPP/R2QKB1R b KQ - 0 9",
      "rnbq1rk1/pp3ppp/8/2bp4/5B2/4PN2/PP3PPP/R2QKB1R w KQ - 0 10",
      "rnbq1rk1/pp3ppp/8/2bp4/5B2/P3PN2/1P3PPP/R2QKB1R b KQ - 0 10",
      "r1bq1rk1/pp3ppp/2n5/2bp4/5B2/P3PN2/1P3PPP/R2QKB1R w KQ - 1 11",
      "r1bq1rk1/pp3ppp/2n5/2bp4/5B2/P2BPN2/1P3PPP/R2QK2R b KQ - 2 11",
      "r1bq1rk1/pp3ppp/1bn5/3p4/5B2/P2BPN2/1P3PPP/R2QK2R w KQ - 3 12",
      "r1bq1rk1/pp3ppp/1bn5/3p4/5B2/P2BPN2/1P3PPP/R2Q1RK1 b - - 4 12",
      "r2q1rk1/pp3ppp/1bn5/3p4/5Bb1/P2BPN2/1P3PPP/R2Q1RK1 w - - 5 13",
      "r2q1rk1/pp3ppp/1bn5/3p4/5Bb1/P2BPN1P/1P3PP1/R2Q1RK1 b - - 0 13",
      "r2q1rk1/pp3ppp/1bn5/3p3b/5B2/P2BPN1P/1P3PP1/R2Q1RK1 w - - 1 14",
      "r2q1rk1/pp3ppp/1bn5/3p3b/5B2/P3PN1P/1P3PP1/RB1Q1RK1 b - - 2 14",
      "r2q1rk1/pp3ppp/1bn5/7b/3p1B2/P3PN1P/1P3PP1/RB1Q1RK1 w - - 0 15",
      "r2q1rk1/pp3ppp/1bn5/7b/3p1B2/P2QPN1P/1P3PP1/RB3RK1 b - - 1 15",
      "r2q1rk1/pp3ppp/1bn3b1/8/3p1B2/P2QPN1P/1P3PP1/RB3RK1 w - - 2 16",
      "r2q1rk1/pp3ppp/1bn3b1/8/3pPB2/P2Q1N1P/1P3PP1/RB3RK1 b - - 0 16",
      "r2qr1k1/pp3ppp/1bn3b1/8/3pPB2/P2Q1N1P/1P3PP1/RB3RK1 w - - 1 17",
      "r2qr1k1/pp3ppp/1bn3b1/8/3pPB2/P2Q1N1P/1P3PP1/RB2R1K1 b - - 2 17",
      "r3r1k1/pp2qppp/1bn3b1/8/3pPB2/P2Q1N1P/1P3PP1/RB2R1K1 w - - 3 18",
      "r3r1k1/pp2qppp/1bn3b1/1Q6/3pPB2/P4N1P/1P3PP1/RB2R1K1 b - - 4 18",
      "r3r1k1/pp2q1pp/1bn2pb1/1Q6/3pPB2/P4N1P/1P3PP1/RB2R1K1 w - - 0 19",
      "r3r1k1/pp2q1pp/1bn2pb1/1Q6/3pPB1N/P6P/1P3PP1/RB2R1K1 b - - 1 19",
      "r3r1k1/pp2qbpp/1bn2p2/1Q6/3pPB1N/P6P/1P3PP1/RB2R1K1 w - - 2 20",
      "r3r1k1/pp2qbpp/1bn2p2/1Q3N2/3pPB2/P6P/1P3PP1/RB2R1K1 b - - 3 20",
      "r3r1k1/pp3bpp/1bn2p2/1Qq2N2/3pPB2/P6P/1P3PP1/RB2R1K1 w - - 4 21",
      "r3r1k1/pp3bpp/1bn2p2/2q2N2/3pPB2/P6P/1P2QPP1/RB2R1K1 b - - 5 21",
      "r3r1k1/pp3bpp/1b3p2/2q1nN2/3pPB2/P6P/1P2QPP1/RB2R1K1 w - - 6 22",
      "r3r1k1/pp3bpp/1b3p2/2q1BN2/3pP3/P6P/1P2QPP1/RB2R1K1 b - - 0 22",
      "r3r1k1/pp3bpp/1b3p2/4qN2/3pP3/P6P/1P2QPP1/RB2R1K1 w - - 0 23",
      "r3r1k1/pp3bpp/1b3p2/4qN2/3pP3/P2B3P/1P2QPP1/R3R1K1 b - - 1 23",
      "r3r1k1/pp4pp/1b3pb1/4qN2/3pP3/P2B3P/1P2QPP1/R3R1K1 w - - 2 24",
      "r3r1k1/pp4pp/1b3pb1/4qN2/3pP3/P2B3P/1P1Q1PP1/R3R1K1 b - - 3 24",
      "r3r1k1/pp4pp/1b3p2/4qb2/3pP3/P2B3P/1P1Q1PP1/R3R1K1 w - - 0 25",
      "r3r1k1/pp4pp/1b3p2/4qP2/3p4/P2B3P/1P1Q1PP1/R3R1K1 b - - 0 25",
      "r3r1k1/pp4pp/1b3p2/3q1P2/3p4/P2B3P/1P1Q1PP1/R3R1K1 w - - 1 26",
      "r3r1k1/pp4pp/1b3p2/3q1P2/3p4/P2B3P/1PQ2PP1/R3R1K1 b - - 2 26",
      "r3rk2/pp4pp/1b3p2/3q1P2/3p4/P2B3P/1PQ2PP1/R3R1K1 w - - 3 27",
      "r3rk2/pp4pp/1b2Rp2/3q1P2/3p4/P2B3P/1PQ2PP1/R5K1 b - - 4 27",
      "r4k2/pp4pp/1b2rp2/3q1P2/3p4/P2B3P/1PQ2PP1/R5K1 w - - 0 28",
      "r4k2/pp4pp/1b2Pp2/3q4/3p4/P2B3P/1PQ2PP1/R5K1 b - - 0 28",
      "r4k2/pp5p/1b2Ppp1/3q4/3p4/P2B3P/1PQ2PP1/R5K1 w - - 0 29",
      "r4k2/pp5p/1b2Ppp1/3q4/3p4/P2B3P/1PQ2PP1/4R1K1 b - - 1 29",
      "4rk2/pp5p/1b2Ppp1/3q4/3p4/P2B3P/1PQ2PP1/4R1K1 w - - 2 30",
      "4rk2/pp5p/1b2Ppp1/3q4/2Bp4/P6P/1PQ2PP1/4R1K1 b - - 3 30",
      "4rk2/pp5p/1b2Ppp1/3q4/2B5/P2p3P/1PQ2PP1/4R1K1 w - - 0 31",
      "4rk2/pp5p/1b2Ppp1/3q4/2B5/P2Q3P/1P3PP1/4R1K1 b - - 0 31",
      "4rk2/pp5p/1b2Ppp1/8/2B5/P2q3P/1P3PP1/4R1K1 w - - 0 32",
      "4rk2/pp5p/1b2Ppp1/8/8/P2B3P/1P3PP1/4R1K1 b - - 0 32",
      "4r3/pp2k2p/1b2Ppp1/8/8/P2B3P/1P3PP1/4R1K1 w - - 1 33",
      "4r3/pp2k2p/1b2Ppp1/8/2B5/P6P/1P3PP1/4R1K1 b - - 2 33",
      "3r4/pp2k2p/1b2Ppp1/8/2B5/P6P/1P3PP1/4R1K1 w - - 3 34",
      "3r4/pp2k2p/1b2Ppp1/8/2B5/P6P/1P2RPP1/6K1 b - - 4 34",
      "3r4/pp2k2p/4Ppp1/b7/2B5/P6P/1P2RPP1/6K1 w - - 5 35",
      "3r4/pp2k2p/4Ppp1/b7/1PB5/P6P/4RPP1/6K1 b - - 0 35",
      "8/pp2k2p/4Ppp1/b7/1PB5/P6P/4RPP1/3r2K1 w - - 1 36",
      "8/pp2k2p/4Ppp1/b7/1PB5/P6P/4RPPK/3r4 b - - 2 36",
      "8/ppb1k2p/4Ppp1/8/1PB5/P6P/4RPPK/3r4 w - - 3 37",
      "8/ppb1k2p/4Ppp1/8/1PB5/P5PP/4RP1K/3r4 b - - 0 37",
      "8/ppb1k2p/4Ppp1/8/1PB5/P5PP/4RP1K/2r5 w - - 1 38",
      "8/ppb1k2p/4Ppp1/8/1P6/P5PP/B3RP1K/2r5 b - - 2 38",
      "8/ppb1k2p/4Ppp1/8/1P6/P1r3PP/B3RP1K/8 w - - 3 39",
      "8/ppb1k2p/4Ppp1/8/PP6/2r3PP/B3RP1K/8 b - - 0 39",
      "8/pp2k2p/3bPpp1/8/PP6/2r3PP/B3RP1K/8 w - - 1 40",
      "8/pp2k2p/3bPpp1/1P6/P7/2r3PP/B3RP1K/8 b - - 0 40",
      "8/pp2k2p/3bPpp1/1P6/P7/r5PP/B3RP1K/8 w - - 1 41",
      "8/pp2k2p/3bPpp1/1P1B4/P7/r5PP/4RP1K/8 b - - 2 41",
      "8/p3k2p/1p1bPpp1/1P1B4/P7/r5PP/4RP1K/8 w - - 0 42",
      "8/p3k2p/1p1bPpp1/1P1B4/P7/r5PP/R4P1K/8 b - - 1 42",
      "8/p3k2p/1p1bPpp1/1P1B4/P7/6PP/r4P1K/8 w - - 0 43",
      "8/p3k2p/1p1bPpp1/1P6/P7/6PP/B4P1K/8 b - - 0 43",
      "8/p3k2p/1p1bP1p1/1P3p2/P7/6PP/B4P1K/8 w - - 0 44",
      "8/p3k2p/1p1bP1p1/1P3p2/P7/6PP/B4PK1/8 b - - 1 44",
      "8/p3k2p/1p2P1p1/1P2bp2/P7/6PP/B4PK1/8 w - - 2 45",
      "8/p3k2p/1p2P1p1/1P2bp2/P5P1/7P/B4PK1/8 b - - 0 45",
      "8/p3k2p/1p2P1p1/1P2b3/P5p1/7P/B4PK1/8 w - - 0 46",
      "8/p3k2p/1p2P1p1/1P2b3/P5P1/8/B4PK1/8 b - - 0 46",
      "8/p3k3/1p2P1p1/1P2b2p/P5P1/8/B4PK1/8 w - - 0 47",
      "8/p3k3/1p2P1p1/1P2b2P/P7/8/B4PK1/8 b - - 0 47",
      "8/p3k3/1p2P3/1P2b2p/P7/8/B4PK1/8 w - - 0 48",
      "8/p3k3/1p2P3/1P2b2p/P7/7K/B4P2/8 b - - 1 48",
      "8/p3k3/1p2Pb2/1P5p/P7/7K/B4P2/8 w - - 2 49",
      "8/p3k3/1p2Pb2/1P5p/P1B5/7K/5P2/8 b - - 3 49",
      "8/p7/1p1kPb2/1P5p/P1B5/7K/5P2/8 w - - 4 50",
      "8/p7/1p1kPb2/1P5p/P1B5/6K1/5P2/8 b - - 5 50",
      "8/p3k3/1p2Pb2/1P5p/P1B5/6K1/5P2/8 w - - 6 51",
      "8/p3k3/1p2Pb2/1P5p/P1B2K2/8/5P2/8 b - - 7 51",
      "8/p3k3/1p2Pb2/1P6/P1B2K1p/8/5P2/8 w - - 0 52",
      "8/p3k3/1p2Pb2/1P6/P1B3Kp/8/5P2/8 b - - 1 52",
      "8/p7/1p1kPb2/1P6/P1B3Kp/8/5P2/8 w - - 2 53",
      "8/p7/1p1kPb2/1P6/P1B3Kp/5P2/8/8 b - - 0 53",
      "8/p3k3/1p2Pb2/1P6/P1B3Kp/5P2/8/8 w - - 1 54",
      "8/p3k3/1p2Pb2/1P6/P1B2PKp/8/8/8 b - - 0 54",
      "8/p7/1p1kPb2/1P6/P1B2PKp/8/8/8 w - - 1 55",
      "8/p7/1p1kPb2/1P3K2/P1B2P1p/8/8/8 b - - 2 55",
      "8/p3k3/1p2Pb2/1P3K2/P1B2P1p/8/8/8 w - - 3 56",
      "8/p3k3/1p2Pb2/1P3K2/P4P1p/8/8/5B2 b - - 4 56",
      "8/p3k3/1p2P3/1P3K2/P4P1p/8/8/b4B2 w - - 5 57",
      "8/p3k3/1p2P3/1P3K2/P4P1p/7B/8/b7 b - - 6 57",
      "8/p3k3/1p2Pb2/1P3K2/P4P1p/7B/8/8 w - - 7 58",
      "8/p3k3/1p2Pb2/1P3K2/P4PBp/8/8/8 b - - 8 58",
      "8/p3k3/1p2P3/1P3K2/P4PBp/8/8/b7 w - - 9 59",
      "8/p3k3/1p2P3/1P6/P3KPBp/8/8/b7 b - - 10 59",
      "8/p7/1p1kP3/1P6/P3KPBp/8/8/b7 w - - 11 60",
      "8/p7/1p1kP3/1P6/P3KP1p/7B/8/b7 b - - 12 60",
      "8/p7/1p1kP3/1P6/P3KP1p/7B/1b6/8 w - - 13 61",
      "8/p7/1p1kP3/1P6/P4P1p/3K3B/1b6/8 b - - 14 61",
      "8/p7/1p1kPb2/1P6/P4P1p/3K3B/8/8 w - - 15 62",
      "8/p7/1p1kPb2/1P6/P1K2P1p/7B/8/8 b - - 16 62",
      "8/p3b3/1p1kP3/1P6/P1K2P1p/7B/8/8 w - - 17 63",
      "8/p3b3/1p1kP3/1P6/P2K1P1p/7B/8/8 b - - 18 63",
      "8/p7/1p1kPb2/1P6/P2K1P1p/7B/8/8 w - - 19 64",
      "8/p7/1p1kPb2/1P6/P1K2P1p/7B/8/8 b - - 20 64",
      "8/p3b3/1p1kP3/1P6/P1K2P1p/7B/8/8 w - - 21 65",
      "8/p3b3/1p1kP3/1P6/P2K1P1p/7B/8/8 b - - 22 65",
      "8/p7/1p1kPb2/1P6/P2K1P1p/7B/8/8 w - - 23 66",
      "8/p7/1p1kPb2/1P6/P1K2P1p/7B/8/8 b - - 24 66",
    ]
    for (index, history) in chess.getMoveHistory().enumerated() {
      XCTAssertEqual(history.fen, fens29[index], "Sinquefield(g30): FEN move (index)")
    }

    pgn = pgns.removeFirst()
    chess = try pgn.validate()
    XCTAssertEqual(chess.getTag("Event")?.value, "Sinquefield Cup", "Sinquefield(g31): event")
    XCTAssertEqual(chess.getTag("White")?.value, "Carlsen, Magnus", "Sinquefield(g31): white")
    XCTAssertEqual(chess.getTag("Black")?.value, "Caruana, Fabiano", "Sinquefield(g31): black")
    XCTAssertEqual(chess.getMoveCount(), 42, "Sinquefield(g31): move count")
    XCTAssertEqual(
      chess.getMoveHistory().map { $0.pcn }.joined(separator: ","),
      "e2e4,e7e5,g1f3,g8f6,f3e5,d7d6,e5f3,f6e4,b1c3,e4c3,d2c3,f8e7,c1e3,b8c6,f1c4,e8g8,d1d2,c8f5,e1c1,d8d7,c1b1,f8e8,h2h4,e7f8,h4h5,h7h6,c4e2,f5g4,f3h2,g4e2,d2e2,c6e5,e3c1,d7c6,f2f4,e5c4,e2d3,c6e4,g2g4,c4e3,d1e1,e4d3,c2d3,e3d5,e1g1,e8e6,g4g5,d5e7,g5h6,e6h6,f4f5,h6h7,h2g4,g8h8,f5f6,e7g8,f6g7,h7g7,c1e3,c7c5,e3f4,a8e8,g4e3,g7g1,h1g1,e8e6,e3d5,g8f6,d5c7,e6e2,c7b5,e2e6,g1f1,h8g8,b5c7,e6e2,c7b5,e2e6,b5c7,e6e2,c7b5,e2e6",
      "Sinquefield(g31): PCN move history"
    )
    let fens30 = [
      "rnbqkbnr/pppppppp/8/8/4P3/8/PPPP1PPP/RNBQKBNR b KQkq - 0 1",
      "rnbqkbnr/pppp1ppp/8/4p3/4P3/8/PPPP1PPP/RNBQKBNR w KQkq - 0 2",
      "rnbqkbnr/pppp1ppp/8/4p3/4P3/5N2/PPPP1PPP/RNBQKB1R b KQkq - 1 2",
      "rnbqkb1r/pppp1ppp/5n2/4p3/4P3/5N2/PPPP1PPP/RNBQKB1R w KQkq - 2 3",
      "rnbqkb1r/pppp1ppp/5n2/4N3/4P3/8/PPPP1PPP/RNBQKB1R b KQkq - 0 3",
      "rnbqkb1r/ppp2ppp/3p1n2/4N3/4P3/8/PPPP1PPP/RNBQKB1R w KQkq - 0 4",
      "rnbqkb1r/ppp2ppp/3p1n2/8/4P3/5N2/PPPP1PPP/RNBQKB1R b KQkq - 1 4",
      "rnbqkb1r/ppp2ppp/3p4/8/4n3/5N2/PPPP1PPP/RNBQKB1R w KQkq - 0 5",
      "rnbqkb1r/ppp2ppp/3p4/8/4n3/2N2N2/PPPP1PPP/R1BQKB1R b KQkq - 1 5",
      "rnbqkb1r/ppp2ppp/3p4/8/8/2n2N2/PPPP1PPP/R1BQKB1R w KQkq - 0 6",
      "rnbqkb1r/ppp2ppp/3p4/8/8/2P2N2/PPP2PPP/R1BQKB1R b KQkq - 0 6",
      "rnbqk2r/ppp1bppp/3p4/8/8/2P2N2/PPP2PPP/R1BQKB1R w KQkq - 1 7",
      "rnbqk2r/ppp1bppp/3p4/8/8/2P1BN2/PPP2PPP/R2QKB1R b KQkq - 2 7",
      "r1bqk2r/ppp1bppp/2np4/8/8/2P1BN2/PPP2PPP/R2QKB1R w KQkq - 3 8",
      "r1bqk2r/ppp1bppp/2np4/8/2B5/2P1BN2/PPP2PPP/R2QK2R b KQkq - 4 8",
      "r1bq1rk1/ppp1bppp/2np4/8/2B5/2P1BN2/PPP2PPP/R2QK2R w KQ - 5 9",
      "r1bq1rk1/ppp1bppp/2np4/8/2B5/2P1BN2/PPPQ1PPP/R3K2R b KQ - 6 9",
      "r2q1rk1/ppp1bppp/2np4/5b2/2B5/2P1BN2/PPPQ1PPP/R3K2R w KQ - 7 10",
      "r2q1rk1/ppp1bppp/2np4/5b2/2B5/2P1BN2/PPPQ1PPP/2KR3R b - - 8 10",
      "r4rk1/pppqbppp/2np4/5b2/2B5/2P1BN2/PPPQ1PPP/2KR3R w - - 9 11",
      "r4rk1/pppqbppp/2np4/5b2/2B5/2P1BN2/PPPQ1PPP/1K1R3R b - - 10 11",
      "r3r1k1/pppqbppp/2np4/5b2/2B5/2P1BN2/PPPQ1PPP/1K1R3R w - - 11 12",
      "r3r1k1/pppqbppp/2np4/5b2/2B4P/2P1BN2/PPPQ1PP1/1K1R3R b - - 0 12",
      "r3rbk1/pppq1ppp/2np4/5b2/2B4P/2P1BN2/PPPQ1PP1/1K1R3R w - - 1 13",
      "r3rbk1/pppq1ppp/2np4/5b1P/2B5/2P1BN2/PPPQ1PP1/1K1R3R b - - 0 13",
      "r3rbk1/pppq1pp1/2np3p/5b1P/2B5/2P1BN2/PPPQ1PP1/1K1R3R w - - 0 14",
      "r3rbk1/pppq1pp1/2np3p/5b1P/8/2P1BN2/PPPQBPP1/1K1R3R b - - 1 14",
      "r3rbk1/pppq1pp1/2np3p/7P/6b1/2P1BN2/PPPQBPP1/1K1R3R w - - 2 15",
      "r3rbk1/pppq1pp1/2np3p/7P/6b1/2P1B3/PPPQBPPN/1K1R3R b - - 3 15",
      "r3rbk1/pppq1pp1/2np3p/7P/8/2P1B3/PPPQbPPN/1K1R3R w - - 0 16",
      "r3rbk1/pppq1pp1/2np3p/7P/8/2P1B3/PPP1QPPN/1K1R3R b - - 0 16",
      "r3rbk1/pppq1pp1/3p3p/4n2P/8/2P1B3/PPP1QPPN/1K1R3R w - - 1 17",
      "r3rbk1/pppq1pp1/3p3p/4n2P/8/2P5/PPP1QPPN/1KBR3R b - - 2 17",
      "r3rbk1/ppp2pp1/2qp3p/4n2P/8/2P5/PPP1QPPN/1KBR3R w - - 3 18",
      "r3rbk1/ppp2pp1/2qp3p/4n2P/5P2/2P5/PPP1Q1PN/1KBR3R b - - 0 18",
      "r3rbk1/ppp2pp1/2qp3p/7P/2n2P2/2P5/PPP1Q1PN/1KBR3R w - - 1 19",
      "r3rbk1/ppp2pp1/2qp3p/7P/2n2P2/2PQ4/PPP3PN/1KBR3R b - - 2 19",
      "r3rbk1/ppp2pp1/3p3p/7P/2n1qP2/2PQ4/PPP3PN/1KBR3R w - - 3 20",
      "r3rbk1/ppp2pp1/3p3p/7P/2n1qPP1/2PQ4/PPP4N/1KBR3R b - - 0 20",
      "r3rbk1/ppp2pp1/3p3p/7P/4qPP1/2PQn3/PPP4N/1KBR3R w - - 1 21",
      "r3rbk1/ppp2pp1/3p3p/7P/4qPP1/2PQn3/PPP4N/1KB1R2R b - - 2 21",
      "r3rbk1/ppp2pp1/3p3p/7P/5PP1/2Pqn3/PPP4N/1KB1R2R w - - 0 22",
      "r3rbk1/ppp2pp1/3p3p/7P/5PP1/2PPn3/PP5N/1KB1R2R b - - 0 22",
      "r3rbk1/ppp2pp1/3p3p/3n3P/5PP1/2PP4/PP5N/1KB1R2R w - - 1 23",
      "r3rbk1/ppp2pp1/3p3p/3n3P/5PP1/2PP4/PP5N/1KB3RR b - - 2 23",
      "r4bk1/ppp2pp1/3pr2p/3n3P/5PP1/2PP4/PP5N/1KB3RR w - - 3 24",
      "r4bk1/ppp2pp1/3pr2p/3n2PP/5P2/2PP4/PP5N/1KB3RR b - - 0 24",
      "r4bk1/ppp1npp1/3pr2p/6PP/5P2/2PP4/PP5N/1KB3RR w - - 1 25",
      "r4bk1/ppp1npp1/3pr2P/7P/5P2/2PP4/PP5N/1KB3RR b - - 0 25",
      "r4bk1/ppp1npp1/3p3r/7P/5P2/2PP4/PP5N/1KB3RR w - - 0 26",
      "r4bk1/ppp1npp1/3p3r/5P1P/8/2PP4/PP5N/1KB3RR b - - 0 26",
      "r4bk1/ppp1nppr/3p4/5P1P/8/2PP4/PP5N/1KB3RR w - - 1 27",
      "r4bk1/ppp1nppr/3p4/5P1P/6N1/2PP4/PP6/1KB3RR b - - 2 27",
      "r4b1k/ppp1nppr/3p4/5P1P/6N1/2PP4/PP6/1KB3RR w - - 3 28",
      "r4b1k/ppp1nppr/3p1P2/7P/6N1/2PP4/PP6/1KB3RR b - - 0 28",
      "r4bnk/ppp2ppr/3p1P2/7P/6N1/2PP4/PP6/1KB3RR w - - 1 29",
      "r4bnk/ppp2pPr/3p4/7P/6N1/2PP4/PP6/1KB3RR b - - 0 29",
      "r4bnk/ppp2pr1/3p4/7P/6N1/2PP4/PP6/1KB3RR w - - 0 30",
      "r4bnk/ppp2pr1/3p4/7P/6N1/2PPB3/PP6/1K4RR b - - 1 30",
      "r4bnk/pp3pr1/3p4/2p4P/6N1/2PPB3/PP6/1K4RR w - - 0 31",
      "r4bnk/pp3pr1/3p4/2p4P/5BN1/2PP4/PP6/1K4RR b - - 1 31",
      "4rbnk/pp3pr1/3p4/2p4P/5BN1/2PP4/PP6/1K4RR w - - 2 32",
      "4rbnk/pp3pr1/3p4/2p4P/5B2/2PPN3/PP6/1K4RR b - - 3 32",
      "4rbnk/pp3p2/3p4/2p4P/5B2/2PPN3/PP6/1K4rR w - - 0 33",
      "4rbnk/pp3p2/3p4/2p4P/5B2/2PPN3/PP6/1K4R1 b - - 0 33",
      "5bnk/pp3p2/3pr3/2p4P/5B2/2PPN3/PP6/1K4R1 w - - 1 34",
      "5bnk/pp3p2/3pr3/2pN3P/5B2/2PP4/PP6/1K4R1 b - - 2 34",
      "5b1k/pp3p2/3prn2/2pN3P/5B2/2PP4/PP6/1K4R1 w - - 3 35",
      "5b1k/ppN2p2/3prn2/2p4P/5B2/2PP4/PP6/1K4R1 b - - 4 35",
      "5b1k/ppN2p2/3p1n2/2p4P/5B2/2PP4/PP2r3/1K4R1 w - - 5 36",
      "5b1k/pp3p2/3p1n2/1Np4P/5B2/2PP4/PP2r3/1K4R1 b - - 6 36",
      "5b1k/pp3p2/3prn2/1Np4P/5B2/2PP4/PP6/1K4R1 w - - 7 37",
      "5b1k/pp3p2/3prn2/1Np4P/5B2/2PP4/PP6/1K3R2 b - - 8 37",
      "5bk1/pp3p2/3prn2/1Np4P/5B2/2PP4/PP6/1K3R2 w - - 9 38",
      "5bk1/ppN2p2/3prn2/2p4P/5B2/2PP4/PP6/1K3R2 b - - 10 38",
      "5bk1/ppN2p2/3p1n2/2p4P/5B2/2PP4/PP2r3/1K3R2 w - - 11 39",
      "5bk1/pp3p2/3p1n2/1Np4P/5B2/2PP4/PP2r3/1K3R2 b - - 12 39",
      "5bk1/pp3p2/3prn2/1Np4P/5B2/2PP4/PP6/1K3R2 w - - 13 40",
      "5bk1/ppN2p2/3prn2/2p4P/5B2/2PP4/PP6/1K3R2 b - - 14 40",
      "5bk1/ppN2p2/3p1n2/2p4P/5B2/2PP4/PP2r3/1K3R2 w - - 15 41",
      "5bk1/pp3p2/3p1n2/1Np4P/5B2/2PP4/PP2r3/1K3R2 b - - 16 41",
      "5bk1/pp3p2/3prn2/1Np4P/5B2/2PP4/PP6/1K3R2 w - - 17 42",
    ]
    for (index, history) in chess.getMoveHistory().enumerated() {
      XCTAssertEqual(history.fen, fens30[index], "Sinquefield(g31): FEN move (index)")
    }

    pgn = pgns.removeFirst()
    chess = try pgn.validate()
    XCTAssertEqual(chess.getTag("Event")?.value, "Sinquefield Cup", "Sinquefield(g32): event")
    XCTAssertEqual(chess.getTag("White")?.value, "Aronian, Levon", "Sinquefield(g32): white")
    XCTAssertEqual(chess.getTag("Black")?.value, "So, Wesley", "Sinquefield(g32): black")
    XCTAssertEqual(chess.getMoveCount(), 57, "Sinquefield(g32): move count")
    XCTAssertEqual(
      chess.getMoveHistory().map { $0.pcn }.joined(separator: ","),
      "d2d4,g8f6,c2c4,e7e6,g1f3,d7d5,g2g3,f8e7,f1g2,e8g8,e1g1,d5c4,d1c2,a7a6,a2a4,c8d7,c2c4,d7c6,c1f4,e7d6,b1c3,d6f4,g3f4,a6a5,e2e3,b8d7,g1h1,a8a6,f1g1,a6b6,c4e2,f6e4,e2c2,f7f5,c3e4,c6e4,c2c3,e4f3,g2f3,d7f6,c3a5,b6b2,g1g2,f6d5,f3d5,e6d5,a5c3,b2b6,a4a5,b6b5,g2g5,f8f6,c3c2,g7g6,h2h4,d8e7,h4h5,e7e4,c2e4,d5e4,g5g1,c7c5,d4c5,b5c5,a1b1,c5a5,b1b7,f6a6,b7b1,g8g7,h1g2,a6a7,g1h1,h7h6,g2g3,a5a6,g3h4,g6h5,h4h5,a6g6,h1g1,g6g1,b1g1,g7h7,g1g6,a7a1,g6h6,h7g7,h6b6,a1g1,h5h4,g7f7,h4h3,g1g8,h3h2,f7e7,b6h6,e7f7,h6h3,f7f6,h3g3,g8h8,h2g2,h8a8,g3h3,a8g8,g2f1,g8a8,h3h6,f6e7,h6c6,a8a1",
      "Sinquefield(g32): PCN move history"
    )
    let fens31 = [
      "rnbqkbnr/pppppppp/8/8/3P4/8/PPP1PPPP/RNBQKBNR b KQkq - 0 1",
      "rnbqkb1r/pppppppp/5n2/8/3P4/8/PPP1PPPP/RNBQKBNR w KQkq - 1 2",
      "rnbqkb1r/pppppppp/5n2/8/2PP4/8/PP2PPPP/RNBQKBNR b KQkq - 0 2",
      "rnbqkb1r/pppp1ppp/4pn2/8/2PP4/8/PP2PPPP/RNBQKBNR w KQkq - 0 3",
      "rnbqkb1r/pppp1ppp/4pn2/8/2PP4/5N2/PP2PPPP/RNBQKB1R b KQkq - 1 3",
      "rnbqkb1r/ppp2ppp/4pn2/3p4/2PP4/5N2/PP2PPPP/RNBQKB1R w KQkq - 0 4",
      "rnbqkb1r/ppp2ppp/4pn2/3p4/2PP4/5NP1/PP2PP1P/RNBQKB1R b KQkq - 0 4",
      "rnbqk2r/ppp1bppp/4pn2/3p4/2PP4/5NP1/PP2PP1P/RNBQKB1R w KQkq - 1 5",
      "rnbqk2r/ppp1bppp/4pn2/3p4/2PP4/5NP1/PP2PPBP/RNBQK2R b KQkq - 2 5",
      "rnbq1rk1/ppp1bppp/4pn2/3p4/2PP4/5NP1/PP2PPBP/RNBQK2R w KQ - 3 6",
      "rnbq1rk1/ppp1bppp/4pn2/3p4/2PP4/5NP1/PP2PPBP/RNBQ1RK1 b - - 4 6",
      "rnbq1rk1/ppp1bppp/4pn2/8/2pP4/5NP1/PP2PPBP/RNBQ1RK1 w - - 0 7",
      "rnbq1rk1/ppp1bppp/4pn2/8/2pP4/5NP1/PPQ1PPBP/RNB2RK1 b - - 1 7",
      "rnbq1rk1/1pp1bppp/p3pn2/8/2pP4/5NP1/PPQ1PPBP/RNB2RK1 w - - 0 8",
      "rnbq1rk1/1pp1bppp/p3pn2/8/P1pP4/5NP1/1PQ1PPBP/RNB2RK1 b - - 0 8",
      "rn1q1rk1/1ppbbppp/p3pn2/8/P1pP4/5NP1/1PQ1PPBP/RNB2RK1 w - - 1 9",
      "rn1q1rk1/1ppbbppp/p3pn2/8/P1QP4/5NP1/1P2PPBP/RNB2RK1 b - - 0 9",
      "rn1q1rk1/1pp1bppp/p1b1pn2/8/P1QP4/5NP1/1P2PPBP/RNB2RK1 w - - 1 10",
      "rn1q1rk1/1pp1bppp/p1b1pn2/8/P1QP1B2/5NP1/1P2PPBP/RN3RK1 b - - 2 10",
      "rn1q1rk1/1pp2ppp/p1bbpn2/8/P1QP1B2/5NP1/1P2PPBP/RN3RK1 w - - 3 11",
      "rn1q1rk1/1pp2ppp/p1bbpn2/8/P1QP1B2/2N2NP1/1P2PPBP/R4RK1 b - - 4 11",
      "rn1q1rk1/1pp2ppp/p1b1pn2/8/P1QP1b2/2N2NP1/1P2PPBP/R4RK1 w - - 0 12",
      "rn1q1rk1/1pp2ppp/p1b1pn2/8/P1QP1P2/2N2N2/1P2PPBP/R4RK1 b - - 0 12",
      "rn1q1rk1/1pp2ppp/2b1pn2/p7/P1QP1P2/2N2N2/1P2PPBP/R4RK1 w - - 0 13",
      "rn1q1rk1/1pp2ppp/2b1pn2/p7/P1QP1P2/2N1PN2/1P3PBP/R4RK1 b - - 0 13",
      "r2q1rk1/1ppn1ppp/2b1pn2/p7/P1QP1P2/2N1PN2/1P3PBP/R4RK1 w - - 1 14",
      "r2q1rk1/1ppn1ppp/2b1pn2/p7/P1QP1P2/2N1PN2/1P3PBP/R4R1K b - - 2 14",
      "3q1rk1/1ppn1ppp/r1b1pn2/p7/P1QP1P2/2N1PN2/1P3PBP/R4R1K w - - 3 15",
      "3q1rk1/1ppn1ppp/r1b1pn2/p7/P1QP1P2/2N1PN2/1P3PBP/R5RK b - - 4 15",
      "3q1rk1/1ppn1ppp/1rb1pn2/p7/P1QP1P2/2N1PN2/1P3PBP/R5RK w - - 5 16",
      "3q1rk1/1ppn1ppp/1rb1pn2/p7/P2P1P2/2N1PN2/1P2QPBP/R5RK b - - 6 16",
      "3q1rk1/1ppn1ppp/1rb1p3/p7/P2PnP2/2N1PN2/1P2QPBP/R5RK w - - 7 17",
      "3q1rk1/1ppn1ppp/1rb1p3/p7/P2PnP2/2N1PN2/1PQ2PBP/R5RK b - - 8 17",
      "3q1rk1/1ppn2pp/1rb1p3/p4p2/P2PnP2/2N1PN2/1PQ2PBP/R5RK w - - 0 18",
      "3q1rk1/1ppn2pp/1rb1p3/p4p2/P2PNP2/4PN2/1PQ2PBP/R5RK b - - 0 18",
      "3q1rk1/1ppn2pp/1r2p3/p4p2/P2PbP2/4PN2/1PQ2PBP/R5RK w - - 0 19",
      "3q1rk1/1ppn2pp/1r2p3/p4p2/P2PbP2/2Q1PN2/1P3PBP/R5RK b - - 1 19",
      "3q1rk1/1ppn2pp/1r2p3/p4p2/P2P1P2/2Q1Pb2/1P3PBP/R5RK w - - 0 20",
      "3q1rk1/1ppn2pp/1r2p3/p4p2/P2P1P2/2Q1PB2/1P3P1P/R5RK b - - 0 20",
      "3q1rk1/1pp3pp/1r2pn2/p4p2/P2P1P2/2Q1PB2/1P3P1P/R5RK w - - 1 21",
      "3q1rk1/1pp3pp/1r2pn2/Q4p2/P2P1P2/4PB2/1P3P1P/R5RK b - - 0 21",
      "3q1rk1/1pp3pp/4pn2/Q4p2/P2P1P2/4PB2/1r3P1P/R5RK w - - 0 22",
      "3q1rk1/1pp3pp/4pn2/Q4p2/P2P1P2/4PB2/1r3PRP/R6K b - - 1 22",
      "3q1rk1/1pp3pp/4p3/Q2n1p2/P2P1P2/4PB2/1r3PRP/R6K w - - 2 23",
      "3q1rk1/1pp3pp/4p3/Q2B1p2/P2P1P2/4P3/1r3PRP/R6K b - - 0 23",
      "3q1rk1/1pp3pp/8/Q2p1p2/P2P1P2/4P3/1r3PRP/R6K w - - 0 24",
      "3q1rk1/1pp3pp/8/3p1p2/P2P1P2/2Q1P3/1r3PRP/R6K b - - 1 24",
      "3q1rk1/1pp3pp/1r6/3p1p2/P2P1P2/2Q1P3/5PRP/R6K w - - 2 25",
      "3q1rk1/1pp3pp/1r6/P2p1p2/3P1P2/2Q1P3/5PRP/R6K b - - 0 25",
      "3q1rk1/1pp3pp/8/Pr1p1p2/3P1P2/2Q1P3/5PRP/R6K w - - 1 26",
      "3q1rk1/1pp3pp/8/Pr1p1pR1/3P1P2/2Q1P3/5P1P/R6K b - - 2 26",
      "3q2k1/1pp3pp/5r2/Pr1p1pR1/3P1P2/2Q1P3/5P1P/R6K w - - 3 27",
      "3q2k1/1pp3pp/5r2/Pr1p1pR1/3P1P2/4P3/2Q2P1P/R6K b - - 4 27",
      "3q2k1/1pp4p/5rp1/Pr1p1pR1/3P1P2/4P3/2Q2P1P/R6K w - - 0 28",
      "3q2k1/1pp4p/5rp1/Pr1p1pR1/3P1P1P/4P3/2Q2P2/R6K b - - 0 28",
      "6k1/1pp1q2p/5rp1/Pr1p1pR1/3P1P1P/4P3/2Q2P2/R6K w - - 1 29",
      "6k1/1pp1q2p/5rp1/Pr1p1pRP/3P1P2/4P3/2Q2P2/R6K b - - 0 29",
      "6k1/1pp4p/5rp1/Pr1p1pRP/3PqP2/4P3/2Q2P2/R6K w - - 1 30",
      "6k1/1pp4p/5rp1/Pr1p1pRP/3PQP2/4P3/5P2/R6K b - - 0 30",
      "6k1/1pp4p/5rp1/Pr3pRP/3PpP2/4P3/5P2/R6K w - - 0 31",
      "6k1/1pp4p/5rp1/Pr3p1P/3PpP2/4P3/5P2/R5RK b - - 1 31",
      "6k1/1p5p/5rp1/Prp2p1P/3PpP2/4P3/5P2/R5RK w - - 0 32",
      "6k1/1p5p/5rp1/PrP2p1P/4pP2/4P3/5P2/R5RK b - - 0 32",
      "6k1/1p5p/5rp1/P1r2p1P/4pP2/4P3/5P2/R5RK w - - 0 33",
      "6k1/1p5p/5rp1/P1r2p1P/4pP2/4P3/5P2/1R4RK b - - 1 33",
      "6k1/1p5p/5rp1/r4p1P/4pP2/4P3/5P2/1R4RK w - - 0 34",
      "6k1/1R5p/5rp1/r4p1P/4pP2/4P3/5P2/6RK b - - 0 34",
      "6k1/1R5p/r5p1/r4p1P/4pP2/4P3/5P2/6RK w - - 1 35",
      "6k1/7p/r5p1/r4p1P/4pP2/4P3/5P2/1R4RK b - - 2 35",
      "8/6kp/r5p1/r4p1P/4pP2/4P3/5P2/1R4RK w - - 3 36",
      "8/6kp/r5p1/r4p1P/4pP2/4P3/5PK1/1R4R1 b - - 4 36",
      "8/r5kp/6p1/r4p1P/4pP2/4P3/5PK1/1R4R1 w - - 5 37",
      "8/r5kp/6p1/r4p1P/4pP2/4P3/5PK1/1R5R b - - 6 37",
      "8/r5k1/6pp/r4p1P/4pP2/4P3/5PK1/1R5R w - - 0 38",
      "8/r5k1/6pp/r4p1P/4pP2/4P1K1/5P2/1R5R b - - 1 38",
      "8/r5k1/r5pp/5p1P/4pP2/4P1K1/5P2/1R5R w - - 2 39",
      "8/r5k1/r5pp/5p1P/4pP1K/4P3/5P2/1R5R b - - 3 39",
      "8/r5k1/r6p/5p1p/4pP1K/4P3/5P2/1R5R w - - 0 40",
      "8/r5k1/r6p/5p1K/4pP2/4P3/5P2/1R5R b - - 0 40",
      "8/r5k1/6rp/5p1K/4pP2/4P3/5P2/1R5R w - - 1 41",
      "8/r5k1/6rp/5p1K/4pP2/4P3/5P2/1R4R1 b - - 2 41",
      "8/r5k1/7p/5p1K/4pP2/4P3/5P2/1R4r1 w - - 0 42",
      "8/r5k1/7p/5p1K/4pP2/4P3/5P2/6R1 b - - 0 42",
      "8/r6k/7p/5p1K/4pP2/4P3/5P2/6R1 w - - 1 43",
      "8/r6k/6Rp/5p1K/4pP2/4P3/5P2/8 b - - 2 43",
      "8/7k/6Rp/5p1K/4pP2/4P3/5P2/r7 w - - 3 44",
      "8/7k/7R/5p1K/4pP2/4P3/5P2/r7 b - - 0 44",
      "8/6k1/7R/5p1K/4pP2/4P3/5P2/r7 w - - 1 45",
      "8/6k1/1R6/5p1K/4pP2/4P3/5P2/r7 b - - 2 45",
      "8/6k1/1R6/5p1K/4pP2/4P3/5P2/6r1 w - - 3 46",
      "8/6k1/1R6/5p2/4pP1K/4P3/5P2/6r1 b - - 4 46",
      "8/5k2/1R6/5p2/4pP1K/4P3/5P2/6r1 w - - 5 47",
      "8/5k2/1R6/5p2/4pP2/4P2K/5P2/6r1 b - - 6 47",
      "6r1/5k2/1R6/5p2/4pP2/4P2K/5P2/8 w - - 7 48",
      "6r1/5k2/1R6/5p2/4pP2/4P3/5P1K/8 b - - 8 48",
      "6r1/4k3/1R6/5p2/4pP2/4P3/5P1K/8 w - - 9 49",
      "6r1/4k3/7R/5p2/4pP2/4P3/5P1K/8 b - - 10 49",
      "6r1/5k2/7R/5p2/4pP2/4P3/5P1K/8 w - - 11 50",
      "6r1/5k2/8/5p2/4pP2/4P2R/5P1K/8 b - - 12 50",
      "6r1/8/5k2/5p2/4pP2/4P2R/5P1K/8 w - - 13 51",
      "6r1/8/5k2/5p2/4pP2/4P1R1/5P1K/8 b - - 14 51",
      "7r/8/5k2/5p2/4pP2/4P1R1/5P1K/8 w - - 15 52",
      "7r/8/5k2/5p2/4pP2/4P1R1/5PK1/8 b - - 16 52",
      "r7/8/5k2/5p2/4pP2/4P1R1/5PK1/8 w - - 17 53",
      "r7/8/5k2/5p2/4pP2/4P2R/5PK1/8 b - - 18 53",
      "6r1/8/5k2/5p2/4pP2/4P2R/5PK1/8 w - - 19 54",
      "6r1/8/5k2/5p2/4pP2/4P2R/5P2/5K2 b - - 20 54",
      "r7/8/5k2/5p2/4pP2/4P2R/5P2/5K2 w - - 21 55",
      "r7/8/5k1R/5p2/4pP2/4P3/5P2/5K2 b - - 22 55",
      "r7/4k3/7R/5p2/4pP2/4P3/5P2/5K2 w - - 23 56",
      "r7/4k3/2R5/5p2/4pP2/4P3/5P2/5K2 b - - 24 56",
      "8/4k3/2R5/5p2/4pP2/4P3/5P2/r4K2 w - - 25 57",
    ]
    for (index, history) in chess.getMoveHistory().enumerated() {
      XCTAssertEqual(history.fen, fens31[index], "Sinquefield(g32): FEN move (index)")
    }

    pgn = pgns.removeFirst()
    chess = try pgn.validate()
    XCTAssertEqual(chess.getTag("Event")?.value, "Sinquefield Cup", "Sinquefield(g33): event")
    XCTAssertEqual(chess.getTag("White")?.value, "Anand, Viswanathan", "Sinquefield(g33): white")
    XCTAssertEqual(chess.getTag("Black")?.value, "Grischuk, Alexander", "Sinquefield(g33): black")
    XCTAssertEqual(chess.getMoveCount(), 33, "Sinquefield(g33): move count")
    XCTAssertEqual(
      chess.getMoveHistory().map { $0.pcn }.joined(separator: ","),
      "e2e4,e7e5,g1f3,b8c6,f1c4,f8c5,e1g1,g8f6,d2d3,d7d6,c2c3,a7a6,a2a4,c5a7,f1e1,e8g8,h2h3,h7h6,b1d2,f8e8,d2f1,c8e6,c4e6,e8e6,c1e3,a7e3,f1e3,d6d5,d1c2,a6a5,a1d1,d8d7,c2b3,a8d8,e4d5,f6d5,d3d4,e5d4,e3d5,d7d5,b3b7,e6e1,d1e1,d4c3,b2c3,d5d6,b7b5,g7g6,f3d4,c6d4,c3d4,d6b4,e1e8,d8e8,b5e8,g8g7,e8e5,g7g8,e5e8,g8g7,e8e5,g7g8,e5e8,g8g7",
      "Sinquefield(g33): PCN move history"
    )
    let fens32 = [
      "rnbqkbnr/pppppppp/8/8/4P3/8/PPPP1PPP/RNBQKBNR b KQkq - 0 1",
      "rnbqkbnr/pppp1ppp/8/4p3/4P3/8/PPPP1PPP/RNBQKBNR w KQkq - 0 2",
      "rnbqkbnr/pppp1ppp/8/4p3/4P3/5N2/PPPP1PPP/RNBQKB1R b KQkq - 1 2",
      "r1bqkbnr/pppp1ppp/2n5/4p3/4P3/5N2/PPPP1PPP/RNBQKB1R w KQkq - 2 3",
      "r1bqkbnr/pppp1ppp/2n5/4p3/2B1P3/5N2/PPPP1PPP/RNBQK2R b KQkq - 3 3",
      "r1bqk1nr/pppp1ppp/2n5/2b1p3/2B1P3/5N2/PPPP1PPP/RNBQK2R w KQkq - 4 4",
      "r1bqk1nr/pppp1ppp/2n5/2b1p3/2B1P3/5N2/PPPP1PPP/RNBQ1RK1 b kq - 5 4",
      "r1bqk2r/pppp1ppp/2n2n2/2b1p3/2B1P3/5N2/PPPP1PPP/RNBQ1RK1 w kq - 6 5",
      "r1bqk2r/pppp1ppp/2n2n2/2b1p3/2B1P3/3P1N2/PPP2PPP/RNBQ1RK1 b kq - 0 5",
      "r1bqk2r/ppp2ppp/2np1n2/2b1p3/2B1P3/3P1N2/PPP2PPP/RNBQ1RK1 w kq - 0 6",
      "r1bqk2r/ppp2ppp/2np1n2/2b1p3/2B1P3/2PP1N2/PP3PPP/RNBQ1RK1 b kq - 0 6",
      "r1bqk2r/1pp2ppp/p1np1n2/2b1p3/2B1P3/2PP1N2/PP3PPP/RNBQ1RK1 w kq - 0 7",
      "r1bqk2r/1pp2ppp/p1np1n2/2b1p3/P1B1P3/2PP1N2/1P3PPP/RNBQ1RK1 b kq - 0 7",
      "r1bqk2r/bpp2ppp/p1np1n2/4p3/P1B1P3/2PP1N2/1P3PPP/RNBQ1RK1 w kq - 1 8",
      "r1bqk2r/bpp2ppp/p1np1n2/4p3/P1B1P3/2PP1N2/1P3PPP/RNBQR1K1 b kq - 2 8",
      "r1bq1rk1/bpp2ppp/p1np1n2/4p3/P1B1P3/2PP1N2/1P3PPP/RNBQR1K1 w - - 3 9",
      "r1bq1rk1/bpp2ppp/p1np1n2/4p3/P1B1P3/2PP1N1P/1P3PP1/RNBQR1K1 b - - 0 9",
      "r1bq1rk1/bpp2pp1/p1np1n1p/4p3/P1B1P3/2PP1N1P/1P3PP1/RNBQR1K1 w - - 0 10",
      "r1bq1rk1/bpp2pp1/p1np1n1p/4p3/P1B1P3/2PP1N1P/1P1N1PP1/R1BQR1K1 b - - 1 10",
      "r1bqr1k1/bpp2pp1/p1np1n1p/4p3/P1B1P3/2PP1N1P/1P1N1PP1/R1BQR1K1 w - - 2 11",
      "r1bqr1k1/bpp2pp1/p1np1n1p/4p3/P1B1P3/2PP1N1P/1P3PP1/R1BQRNK1 b - - 3 11",
      "r2qr1k1/bpp2pp1/p1npbn1p/4p3/P1B1P3/2PP1N1P/1P3PP1/R1BQRNK1 w - - 4 12",
      "r2qr1k1/bpp2pp1/p1npBn1p/4p3/P3P3/2PP1N1P/1P3PP1/R1BQRNK1 b - - 0 12",
      "r2q2k1/bpp2pp1/p1nprn1p/4p3/P3P3/2PP1N1P/1P3PP1/R1BQRNK1 w - - 0 13",
      "r2q2k1/bpp2pp1/p1nprn1p/4p3/P3P3/2PPBN1P/1P3PP1/R2QRNK1 b - - 1 13",
      "r2q2k1/1pp2pp1/p1nprn1p/4p3/P3P3/2PPbN1P/1P3PP1/R2QRNK1 w - - 0 14",
      "r2q2k1/1pp2pp1/p1nprn1p/4p3/P3P3/2PPNN1P/1P3PP1/R2QR1K1 b - - 0 14",
      "r2q2k1/1pp2pp1/p1n1rn1p/3pp3/P3P3/2PPNN1P/1P3PP1/R2QR1K1 w - - 0 15",
      "r2q2k1/1pp2pp1/p1n1rn1p/3pp3/P3P3/2PPNN1P/1PQ2PP1/R3R1K1 b - - 1 15",
      "r2q2k1/1pp2pp1/2n1rn1p/p2pp3/P3P3/2PPNN1P/1PQ2PP1/R3R1K1 w - - 0 16",
      "r2q2k1/1pp2pp1/2n1rn1p/p2pp3/P3P3/2PPNN1P/1PQ2PP1/3RR1K1 b - - 1 16",
      "r5k1/1ppq1pp1/2n1rn1p/p2pp3/P3P3/2PPNN1P/1PQ2PP1/3RR1K1 w - - 2 17",
      "r5k1/1ppq1pp1/2n1rn1p/p2pp3/P3P3/1QPPNN1P/1P3PP1/3RR1K1 b - - 3 17",
      "3r2k1/1ppq1pp1/2n1rn1p/p2pp3/P3P3/1QPPNN1P/1P3PP1/3RR1K1 w - - 4 18",
      "3r2k1/1ppq1pp1/2n1rn1p/p2Pp3/P7/1QPPNN1P/1P3PP1/3RR1K1 b - - 0 18",
      "3r2k1/1ppq1pp1/2n1r2p/p2np3/P7/1QPPNN1P/1P3PP1/3RR1K1 w - - 0 19",
      "3r2k1/1ppq1pp1/2n1r2p/p2np3/P2P4/1QP1NN1P/1P3PP1/3RR1K1 b - - 0 19",
      "3r2k1/1ppq1pp1/2n1r2p/p2n4/P2p4/1QP1NN1P/1P3PP1/3RR1K1 w - - 0 20",
      "3r2k1/1ppq1pp1/2n1r2p/p2N4/P2p4/1QP2N1P/1P3PP1/3RR1K1 b - - 0 20",
      "3r2k1/1pp2pp1/2n1r2p/p2q4/P2p4/1QP2N1P/1P3PP1/3RR1K1 w - - 0 21",
      "3r2k1/1Qp2pp1/2n1r2p/p2q4/P2p4/2P2N1P/1P3PP1/3RR1K1 b - - 0 21",
      "3r2k1/1Qp2pp1/2n4p/p2q4/P2p4/2P2N1P/1P3PP1/3Rr1K1 w - - 0 22",
      "3r2k1/1Qp2pp1/2n4p/p2q4/P2p4/2P2N1P/1P3PP1/4R1K1 b - - 0 22",
      "3r2k1/1Qp2pp1/2n4p/p2q4/P7/2p2N1P/1P3PP1/4R1K1 w - - 0 23",
      "3r2k1/1Qp2pp1/2n4p/p2q4/P7/2P2N1P/5PP1/4R1K1 b - - 0 23",
      "3r2k1/1Qp2pp1/2nq3p/p7/P7/2P2N1P/5PP1/4R1K1 w - - 1 24",
      "3r2k1/2p2pp1/2nq3p/pQ6/P7/2P2N1P/5PP1/4R1K1 b - - 2 24",
      "3r2k1/2p2p2/2nq2pp/pQ6/P7/2P2N1P/5PP1/4R1K1 w - - 0 25",
      "3r2k1/2p2p2/2nq2pp/pQ6/P2N4/2P4P/5PP1/4R1K1 b - - 1 25",
      "3r2k1/2p2p2/3q2pp/pQ6/P2n4/2P4P/5PP1/4R1K1 w - - 0 26",
      "3r2k1/2p2p2/3q2pp/pQ6/P2P4/7P/5PP1/4R1K1 b - - 0 26",
      "3r2k1/2p2p2/6pp/pQ6/Pq1P4/7P/5PP1/4R1K1 w - - 1 27",
      "3rR1k1/2p2p2/6pp/pQ6/Pq1P4/7P/5PP1/6K1 b - - 2 27",
      "4r1k1/2p2p2/6pp/pQ6/Pq1P4/7P/5PP1/6K1 w - - 0 28",
      "4Q1k1/2p2p2/6pp/p7/Pq1P4/7P/5PP1/6K1 b - - 0 28",
      "4Q3/2p2pk1/6pp/p7/Pq1P4/7P/5PP1/6K1 w - - 1 29",
      "8/2p2pk1/6pp/p3Q3/Pq1P4/7P/5PP1/6K1 b - - 2 29",
      "6k1/2p2p2/6pp/p3Q3/Pq1P4/7P/5PP1/6K1 w - - 3 30",
      "4Q1k1/2p2p2/6pp/p7/Pq1P4/7P/5PP1/6K1 b - - 4 30",
      "4Q3/2p2pk1/6pp/p7/Pq1P4/7P/5PP1/6K1 w - - 5 31",
      "8/2p2pk1/6pp/p3Q3/Pq1P4/7P/5PP1/6K1 b - - 6 31",
      "6k1/2p2p2/6pp/p3Q3/Pq1P4/7P/5PP1/6K1 w - - 7 32",
      "4Q1k1/2p2p2/6pp/p7/Pq1P4/7P/5PP1/6K1 b - - 8 32",
      "4Q3/2p2pk1/6pp/p7/Pq1P4/7P/5PP1/6K1 w - - 9 33",
    ]
    for (index, history) in chess.getMoveHistory().enumerated() {
      XCTAssertEqual(history.fen, fens32[index], "Sinquefield(g33): FEN move (index)")
    }

    pgn = pgns.removeFirst()
    chess = try pgn.validate()
    XCTAssertEqual(chess.getTag("Event")?.value, "Sinquefield Cup", "Sinquefield(g34): event")
    XCTAssertEqual(chess.getTag("White")?.value, "Karjakin, Sergey", "Sinquefield(g34): white")
    XCTAssertEqual(
      chess.getTag("Black")?.value, "Mamedyarov, Shakhriyar", "Sinquefield(g34): black")
    XCTAssertEqual(chess.getMoveCount(), 56, "Sinquefield(g34): move count")
    XCTAssertEqual(
      chess.getMoveHistory().map { $0.pcn }.joined(separator: ","),
      "e2e4,c7c5,g1f3,d7d6,d2d4,c5d4,f3d4,g8f6,b1c3,a7a6,h2h3,e7e6,g2g4,h7h6,f1g2,g7g5,c1e3,b8d7,d1e2,d7e5,e1c1,f6d7,h3h4,h8g8,h4g5,h6g5,c1b1,b7b5,f2f4,g5f4,e3f4,c8b7,g4g5,d8b6,h1h7,e8c8,f4e3,b6a5,d1f1,g8g7,h7g7,f8g7,g5g6,e5g6,f1f7,g7d4,e3d4,g6e5,f7f2,a5b4,d4e3,e5c4,e3c1,c8b8,c3d1,d8c8,b2b3,c4a3,c1a3,b4a3,g2h3,d7c5,e4e5,b7e4,e2e3,c5d3,f2f7,a3c5,e3c5,d3c5,e5d6,c8d8,d1c3,d8d6,b1b2,e4c6,a2a3,c5b7,f7h7,b7c5,h7h6,b8c7,b3b4,c5e4,h6e6,d6e6,h3e6,e4c3,b2c3,c7b6,c3d4,a6a5,e6d5,c6e8,b4a5,b6a5,d4c5,e8g6,c2c3,g6d3,d5c6,d3e2,c6d7,e2d3,d7c6,d3e2,c6d7,e2d3,d7c6,d3e2,c6d7",
      "Sinquefield(g34): PCN move history"
    )
    let fens33 = [
      "rnbqkbnr/pppppppp/8/8/4P3/8/PPPP1PPP/RNBQKBNR b KQkq - 0 1",
      "rnbqkbnr/pp1ppppp/8/2p5/4P3/8/PPPP1PPP/RNBQKBNR w KQkq - 0 2",
      "rnbqkbnr/pp1ppppp/8/2p5/4P3/5N2/PPPP1PPP/RNBQKB1R b KQkq - 1 2",
      "rnbqkbnr/pp2pppp/3p4/2p5/4P3/5N2/PPPP1PPP/RNBQKB1R w KQkq - 0 3",
      "rnbqkbnr/pp2pppp/3p4/2p5/3PP3/5N2/PPP2PPP/RNBQKB1R b KQkq - 0 3",
      "rnbqkbnr/pp2pppp/3p4/8/3pP3/5N2/PPP2PPP/RNBQKB1R w KQkq - 0 4",
      "rnbqkbnr/pp2pppp/3p4/8/3NP3/8/PPP2PPP/RNBQKB1R b KQkq - 0 4",
      "rnbqkb1r/pp2pppp/3p1n2/8/3NP3/8/PPP2PPP/RNBQKB1R w KQkq - 1 5",
      "rnbqkb1r/pp2pppp/3p1n2/8/3NP3/2N5/PPP2PPP/R1BQKB1R b KQkq - 2 5",
      "rnbqkb1r/1p2pppp/p2p1n2/8/3NP3/2N5/PPP2PPP/R1BQKB1R w KQkq - 0 6",
      "rnbqkb1r/1p2pppp/p2p1n2/8/3NP3/2N4P/PPP2PP1/R1BQKB1R b KQkq - 0 6",
      "rnbqkb1r/1p3ppp/p2ppn2/8/3NP3/2N4P/PPP2PP1/R1BQKB1R w KQkq - 0 7",
      "rnbqkb1r/1p3ppp/p2ppn2/8/3NP1P1/2N4P/PPP2P2/R1BQKB1R b KQkq - 0 7",
      "rnbqkb1r/1p3pp1/p2ppn1p/8/3NP1P1/2N4P/PPP2P2/R1BQKB1R w KQkq - 0 8",
      "rnbqkb1r/1p3pp1/p2ppn1p/8/3NP1P1/2N4P/PPP2PB1/R1BQK2R b KQkq - 1 8",
      "rnbqkb1r/1p3p2/p2ppn1p/6p1/3NP1P1/2N4P/PPP2PB1/R1BQK2R w KQkq - 0 9",
      "rnbqkb1r/1p3p2/p2ppn1p/6p1/3NP1P1/2N1B2P/PPP2PB1/R2QK2R b KQkq - 1 9",
      "r1bqkb1r/1p1n1p2/p2ppn1p/6p1/3NP1P1/2N1B2P/PPP2PB1/R2QK2R w KQkq - 2 10",
      "r1bqkb1r/1p1n1p2/p2ppn1p/6p1/3NP1P1/2N1B2P/PPP1QPB1/R3K2R b KQkq - 3 10",
      "r1bqkb1r/1p3p2/p2ppn1p/4n1p1/3NP1P1/2N1B2P/PPP1QPB1/R3K2R w KQkq - 4 11",
      "r1bqkb1r/1p3p2/p2ppn1p/4n1p1/3NP1P1/2N1B2P/PPP1QPB1/2KR3R b kq - 5 11",
      "r1bqkb1r/1p1n1p2/p2pp2p/4n1p1/3NP1P1/2N1B2P/PPP1QPB1/2KR3R w kq - 6 12",
      "r1bqkb1r/1p1n1p2/p2pp2p/4n1p1/3NP1PP/2N1B3/PPP1QPB1/2KR3R b kq - 0 12",
      "r1bqkbr1/1p1n1p2/p2pp2p/4n1p1/3NP1PP/2N1B3/PPP1QPB1/2KR3R w q - 1 13",
      "r1bqkbr1/1p1n1p2/p2pp2p/4n1P1/3NP1P1/2N1B3/PPP1QPB1/2KR3R b q - 0 13",
      "r1bqkbr1/1p1n1p2/p2pp3/4n1p1/3NP1P1/2N1B3/PPP1QPB1/2KR3R w q - 0 14",
      "r1bqkbr1/1p1n1p2/p2pp3/4n1p1/3NP1P1/2N1B3/PPP1QPB1/1K1R3R b q - 1 14",
      "r1bqkbr1/3n1p2/p2pp3/1p2n1p1/3NP1P1/2N1B3/PPP1QPB1/1K1R3R w q - 0 15",
      "r1bqkbr1/3n1p2/p2pp3/1p2n1p1/3NPPP1/2N1B3/PPP1Q1B1/1K1R3R b q - 0 15",
      "r1bqkbr1/3n1p2/p2pp3/1p2n3/3NPpP1/2N1B3/PPP1Q1B1/1K1R3R w q - 0 16",
      "r1bqkbr1/3n1p2/p2pp3/1p2n3/3NPBP1/2N5/PPP1Q1B1/1K1R3R b q - 0 16",
      "r2qkbr1/1b1n1p2/p2pp3/1p2n3/3NPBP1/2N5/PPP1Q1B1/1K1R3R w q - 1 17",
      "r2qkbr1/1b1n1p2/p2pp3/1p2n1P1/3NPB2/2N5/PPP1Q1B1/1K1R3R b q - 0 17",
      "r3kbr1/1b1n1p2/pq1pp3/1p2n1P1/3NPB2/2N5/PPP1Q1B1/1K1R3R w q - 1 18",
      "r3kbr1/1b1n1p1R/pq1pp3/1p2n1P1/3NPB2/2N5/PPP1Q1B1/1K1R4 b q - 2 18",
      "2kr1br1/1b1n1p1R/pq1pp3/1p2n1P1/3NPB2/2N5/PPP1Q1B1/1K1R4 w - - 3 19",
      "2kr1br1/1b1n1p1R/pq1pp3/1p2n1P1/3NP3/2N1B3/PPP1Q1B1/1K1R4 b - - 4 19",
      "2kr1br1/1b1n1p1R/p2pp3/qp2n1P1/3NP3/2N1B3/PPP1Q1B1/1K1R4 w - - 5 20",
      "2kr1br1/1b1n1p1R/p2pp3/qp2n1P1/3NP3/2N1B3/PPP1Q1B1/1K3R2 b - - 6 20",
      "2kr1b2/1b1n1prR/p2pp3/qp2n1P1/3NP3/2N1B3/PPP1Q1B1/1K3R2 w - - 7 21",
      "2kr1b2/1b1n1pR1/p2pp3/qp2n1P1/3NP3/2N1B3/PPP1Q1B1/1K3R2 b - - 0 21",
      "2kr4/1b1n1pb1/p2pp3/qp2n1P1/3NP3/2N1B3/PPP1Q1B1/1K3R2 w - - 0 22",
      "2kr4/1b1n1pb1/p2pp1P1/qp2n3/3NP3/2N1B3/PPP1Q1B1/1K3R2 b - - 0 22",
      "2kr4/1b1n1pb1/p2pp1n1/qp6/3NP3/2N1B3/PPP1Q1B1/1K3R2 w - - 0 23",
      "2kr4/1b1n1Rb1/p2pp1n1/qp6/3NP3/2N1B3/PPP1Q1B1/1K6 b - - 0 23",
      "2kr4/1b1n1R2/p2pp1n1/qp6/3bP3/2N1B3/PPP1Q1B1/1K6 w - - 0 24",
      "2kr4/1b1n1R2/p2pp1n1/qp6/3BP3/2N5/PPP1Q1B1/1K6 b - - 0 24",
      "2kr4/1b1n1R2/p2pp3/qp2n3/3BP3/2N5/PPP1Q1B1/1K6 w - - 1 25",
      "2kr4/1b1n4/p2pp3/qp2n3/3BP3/2N5/PPP1QRB1/1K6 b - - 2 25",
      "2kr4/1b1n4/p2pp3/1p2n3/1q1BP3/2N5/PPP1QRB1/1K6 w - - 3 26",
      "2kr4/1b1n4/p2pp3/1p2n3/1q2P3/2N1B3/PPP1QRB1/1K6 b - - 4 26",
      "2kr4/1b1n4/p2pp3/1p6/1qn1P3/2N1B3/PPP1QRB1/1K6 w - - 5 27",
      "2kr4/1b1n4/p2pp3/1p6/1qn1P3/2N5/PPP1QRB1/1KB5 b - - 6 27",
      "1k1r4/1b1n4/p2pp3/1p6/1qn1P3/2N5/PPP1QRB1/1KB5 w - - 7 28",
      "1k1r4/1b1n4/p2pp3/1p6/1qn1P3/8/PPP1QRB1/1KBN4 b - - 8 28",
      "1kr5/1b1n4/p2pp3/1p6/1qn1P3/8/PPP1QRB1/1KBN4 w - - 9 29",
      "1kr5/1b1n4/p2pp3/1p6/1qn1P3/1P6/P1P1QRB1/1KBN4 b - - 0 29",
      "1kr5/1b1n4/p2pp3/1p6/1q2P3/nP6/P1P1QRB1/1KBN4 w - - 1 30",
      "1kr5/1b1n4/p2pp3/1p6/1q2P3/BP6/P1P1QRB1/1K1N4 b - - 0 30",
      "1kr5/1b1n4/p2pp3/1p6/4P3/qP6/P1P1QRB1/1K1N4 w - - 0 31",
      "1kr5/1b1n4/p2pp3/1p6/4P3/qP5B/P1P1QR2/1K1N4 b - - 1 31",
      "1kr5/1b6/p2pp3/1pn5/4P3/qP5B/P1P1QR2/1K1N4 w - - 2 32",
      "1kr5/1b6/p2pp3/1pn1P3/8/qP5B/P1P1QR2/1K1N4 b - - 0 32",
      "1kr5/8/p2pp3/1pn1P3/4b3/qP5B/P1P1QR2/1K1N4 w - - 1 33",
      "1kr5/8/p2pp3/1pn1P3/4b3/qP2Q2B/P1P2R2/1K1N4 b - - 2 33",
      "1kr5/8/p2pp3/1p2P3/4b3/qP1nQ2B/P1P2R2/1K1N4 w - - 3 34",
      "1kr5/5R2/p2pp3/1p2P3/4b3/qP1nQ2B/P1P5/1K1N4 b - - 4 34",
      "1kr5/5R2/p2pp3/1pq1P3/4b3/1P1nQ2B/P1P5/1K1N4 w - - 5 35",
      "1kr5/5R2/p2pp3/1pQ1P3/4b3/1P1n3B/P1P5/1K1N4 b - - 0 35",
      "1kr5/5R2/p2pp3/1pn1P3/4b3/1P5B/P1P5/1K1N4 w - - 0 36",
      "1kr5/5R2/p2Pp3/1pn5/4b3/1P5B/P1P5/1K1N4 b - - 0 36",
      "1k1r4/5R2/p2Pp3/1pn5/4b3/1P5B/P1P5/1K1N4 w - - 1 37",
      "1k1r4/5R2/p2Pp3/1pn5/4b3/1PN4B/P1P5/1K6 b - - 2 37",
      "1k6/5R2/p2rp3/1pn5/4b3/1PN4B/P1P5/1K6 w - - 0 38",
      "1k6/5R2/p2rp3/1pn5/4b3/1PN4B/PKP5/8 b - - 1 38",
      "1k6/5R2/p1brp3/1pn5/8/1PN4B/PKP5/8 w - - 2 39",
      "1k6/5R2/p1brp3/1pn5/8/PPN4B/1KP5/8 b - - 0 39",
      "1k6/1n3R2/p1brp3/1p6/8/PPN4B/1KP5/8 w - - 1 40",
      "1k6/1n5R/p1brp3/1p6/8/PPN4B/1KP5/8 b - - 2 40",
      "1k6/7R/p1brp3/1pn5/8/PPN4B/1KP5/8 w - - 3 41",
      "1k6/8/p1brp2R/1pn5/8/PPN4B/1KP5/8 b - - 4 41",
      "8/2k5/p1brp2R/1pn5/8/PPN4B/1KP5/8 w - - 5 42",
      "8/2k5/p1brp2R/1pn5/1P6/P1N4B/1KP5/8 b - - 0 42",
      "8/2k5/p1brp2R/1p6/1P2n3/P1N4B/1KP5/8 w - - 1 43",
      "8/2k5/p1brR3/1p6/1P2n3/P1N4B/1KP5/8 b - - 0 43",
      "8/2k5/p1b1r3/1p6/1P2n3/P1N4B/1KP5/8 w - - 0 44",
      "8/2k5/p1b1B3/1p6/1P2n3/P1N5/1KP5/8 b - - 0 44",
      "8/2k5/p1b1B3/1p6/1P6/P1n5/1KP5/8 w - - 0 45",
      "8/2k5/p1b1B3/1p6/1P6/P1K5/2P5/8 b - - 0 45",
      "8/8/pkb1B3/1p6/1P6/P1K5/2P5/8 w - - 1 46",
      "8/8/pkb1B3/1p6/1P1K4/P7/2P5/8 b - - 2 46",
      "8/8/1kb1B3/pp6/1P1K4/P7/2P5/8 w - - 0 47",
      "8/8/1kb5/pp1B4/1P1K4/P7/2P5/8 b - - 1 47",
      "4b3/8/1k6/pp1B4/1P1K4/P7/2P5/8 w - - 2 48",
      "4b3/8/1k6/Pp1B4/3K4/P7/2P5/8 b - - 0 48",
      "4b3/8/8/kp1B4/3K4/P7/2P5/8 w - - 0 49",
      "4b3/8/8/kpKB4/8/P7/2P5/8 b - - 1 49",
      "8/8/6b1/kpKB4/8/P7/2P5/8 w - - 2 50",
      "8/8/6b1/kpKB4/8/P1P5/8/8 b - - 0 50",
      "8/8/8/kpKB4/8/P1Pb4/8/8 w - - 1 51",
      "8/8/2B5/kpK5/8/P1Pb4/8/8 b - - 2 51",
      "8/8/2B5/kpK5/8/P1P5/4b3/8 w - - 3 52",
      "8/3B4/8/kpK5/8/P1P5/4b3/8 b - - 4 52",
      "8/3B4/8/kpK5/8/P1Pb4/8/8 w - - 5 53",
      "8/8/2B5/kpK5/8/P1Pb4/8/8 b - - 6 53",
      "8/8/2B5/kpK5/8/P1P5/4b3/8 w - - 7 54",
      "8/3B4/8/kpK5/8/P1P5/4b3/8 b - - 8 54",
      "8/3B4/8/kpK5/8/P1Pb4/8/8 w - - 9 55",
      "8/8/2B5/kpK5/8/P1Pb4/8/8 b - - 10 55",
      "8/8/2B5/kpK5/8/P1P5/4b3/8 w - - 11 56",
      "8/3B4/8/kpK5/8/P1P5/4b3/8 b - - 12 56",
    ]
    for (index, history) in chess.getMoveHistory().enumerated() {
      XCTAssertEqual(history.fen, fens33[index], "Sinquefield(g34): FEN move (index)")
    }

    pgn = pgns.removeFirst()
    chess = try pgn.validate()
    XCTAssertEqual(chess.getTag("Event")?.value, "Sinquefield Cup", "Sinquefield(g35): event")
    XCTAssertEqual(
      chess.getTag("White")?.value, "Vachier-Lagrave, Maxime", "Sinquefield(g35): white")
    XCTAssertEqual(chess.getTag("Black")?.value, "Nakamura, Hikaru", "Sinquefield(g35): black")
    XCTAssertEqual(chess.getMoveCount(), 55, "Sinquefield(g35): move count")
    XCTAssertEqual(
      chess.getMoveHistory().map { $0.pcn }.joined(separator: ","),
      "e2e4,e7e5,g1f3,b8c6,f1c4,f8c5,c2c3,g8f6,d2d3,e8g8,e1g1,d7d5,e4d5,f6d5,a2a4,c8f5,b1d2,d5b6,c4b5,f5d3,f1e1,e5e4,d2e4,d3e4,d1d8,f8d8,e1e4,d8d1,e4e1,d1e1,f3e1,a7a6,b5e2,b6d5,e1d3,c5a7,a4a5,a8e8,g1f1,c6e5,d3e5,e8e5,a1a3,d5f6,e2f3,c7c6,a3b3,e5e7,b3b4,h7h6,h2h4,g8f8,g2g4,f6d5,b4a4,a7b8,g4g5,h6g5,c1g5,f7f6,g5d2,e7d7,h4h5,f6f5,a4h4,f8g8,c3c4,d5f6,d2c3,g8h7,c3f6,g7f6,h5h6,b8e5,f3g2,h7g6,h6h7,d7h7,h4h7,g6h7,b2b4,e5c3,b4b5,a6b5,c4b5,c6b5,g2b7,c3a5,f1e2,b5b4,e2d3,b4b3,b7d5,b3b2,d3c2,a5c3,f2f3,c3e5,c2b1,f5f4,d5a8,h7h8,a8d5,h8g7,d5a8,g7h8,a8d5,h8g7,d5a8",
      "Sinquefield(g35): PCN move history"
    )
    let fens34 = [
      "rnbqkbnr/pppppppp/8/8/4P3/8/PPPP1PPP/RNBQKBNR b KQkq - 0 1",
      "rnbqkbnr/pppp1ppp/8/4p3/4P3/8/PPPP1PPP/RNBQKBNR w KQkq - 0 2",
      "rnbqkbnr/pppp1ppp/8/4p3/4P3/5N2/PPPP1PPP/RNBQKB1R b KQkq - 1 2",
      "r1bqkbnr/pppp1ppp/2n5/4p3/4P3/5N2/PPPP1PPP/RNBQKB1R w KQkq - 2 3",
      "r1bqkbnr/pppp1ppp/2n5/4p3/2B1P3/5N2/PPPP1PPP/RNBQK2R b KQkq - 3 3",
      "r1bqk1nr/pppp1ppp/2n5/2b1p3/2B1P3/5N2/PPPP1PPP/RNBQK2R w KQkq - 4 4",
      "r1bqk1nr/pppp1ppp/2n5/2b1p3/2B1P3/2P2N2/PP1P1PPP/RNBQK2R b KQkq - 0 4",
      "r1bqk2r/pppp1ppp/2n2n2/2b1p3/2B1P3/2P2N2/PP1P1PPP/RNBQK2R w KQkq - 1 5",
      "r1bqk2r/pppp1ppp/2n2n2/2b1p3/2B1P3/2PP1N2/PP3PPP/RNBQK2R b KQkq - 0 5",
      "r1bq1rk1/pppp1ppp/2n2n2/2b1p3/2B1P3/2PP1N2/PP3PPP/RNBQK2R w KQ - 1 6",
      "r1bq1rk1/pppp1ppp/2n2n2/2b1p3/2B1P3/2PP1N2/PP3PPP/RNBQ1RK1 b - - 2 6",
      "r1bq1rk1/ppp2ppp/2n2n2/2bpp3/2B1P3/2PP1N2/PP3PPP/RNBQ1RK1 w - - 0 7",
      "r1bq1rk1/ppp2ppp/2n2n2/2bPp3/2B5/2PP1N2/PP3PPP/RNBQ1RK1 b - - 0 7",
      "r1bq1rk1/ppp2ppp/2n5/2bnp3/2B5/2PP1N2/PP3PPP/RNBQ1RK1 w - - 0 8",
      "r1bq1rk1/ppp2ppp/2n5/2bnp3/P1B5/2PP1N2/1P3PPP/RNBQ1RK1 b - - 0 8",
      "r2q1rk1/ppp2ppp/2n5/2bnpb2/P1B5/2PP1N2/1P3PPP/RNBQ1RK1 w - - 1 9",
      "r2q1rk1/ppp2ppp/2n5/2bnpb2/P1B5/2PP1N2/1P1N1PPP/R1BQ1RK1 b - - 2 9",
      "r2q1rk1/ppp2ppp/1nn5/2b1pb2/P1B5/2PP1N2/1P1N1PPP/R1BQ1RK1 w - - 3 10",
      "r2q1rk1/ppp2ppp/1nn5/1Bb1pb2/P7/2PP1N2/1P1N1PPP/R1BQ1RK1 b - - 4 10",
      "r2q1rk1/ppp2ppp/1nn5/1Bb1p3/P7/2Pb1N2/1P1N1PPP/R1BQ1RK1 w - - 0 11",
      "r2q1rk1/ppp2ppp/1nn5/1Bb1p3/P7/2Pb1N2/1P1N1PPP/R1BQR1K1 b - - 1 11",
      "r2q1rk1/ppp2ppp/1nn5/1Bb5/P3p3/2Pb1N2/1P1N1PPP/R1BQR1K1 w - - 0 12",
      "r2q1rk1/ppp2ppp/1nn5/1Bb5/P3N3/2Pb1N2/1P3PPP/R1BQR1K1 b - - 0 12",
      "r2q1rk1/ppp2ppp/1nn5/1Bb5/P3b3/2P2N2/1P3PPP/R1BQR1K1 w - - 0 13",
      "r2Q1rk1/ppp2ppp/1nn5/1Bb5/P3b3/2P2N2/1P3PPP/R1B1R1K1 b - - 0 13",
      "r2r2k1/ppp2ppp/1nn5/1Bb5/P3b3/2P2N2/1P3PPP/R1B1R1K1 w - - 0 14",
      "r2r2k1/ppp2ppp/1nn5/1Bb5/P3R3/2P2N2/1P3PPP/R1B3K1 b - - 0 14",
      "r5k1/ppp2ppp/1nn5/1Bb5/P3R3/2P2N2/1P3PPP/R1Br2K1 w - - 1 15",
      "r5k1/ppp2ppp/1nn5/1Bb5/P7/2P2N2/1P3PPP/R1BrR1K1 b - - 2 15",
      "r5k1/ppp2ppp/1nn5/1Bb5/P7/2P2N2/1P3PPP/R1B1r1K1 w - - 0 16",
      "r5k1/ppp2ppp/1nn5/1Bb5/P7/2P5/1P3PPP/R1B1N1K1 b - - 0 16",
      "r5k1/1pp2ppp/pnn5/1Bb5/P7/2P5/1P3PPP/R1B1N1K1 w - - 0 17",
      "r5k1/1pp2ppp/pnn5/2b5/P7/2P5/1P2BPPP/R1B1N1K1 b - - 1 17",
      "r5k1/1pp2ppp/p1n5/2bn4/P7/2P5/1P2BPPP/R1B1N1K1 w - - 2 18",
      "r5k1/1pp2ppp/p1n5/2bn4/P7/2PN4/1P2BPPP/R1B3K1 b - - 3 18",
      "r5k1/bpp2ppp/p1n5/3n4/P7/2PN4/1P2BPPP/R1B3K1 w - - 4 19",
      "r5k1/bpp2ppp/p1n5/P2n4/8/2PN4/1P2BPPP/R1B3K1 b - - 0 19",
      "4r1k1/bpp2ppp/p1n5/P2n4/8/2PN4/1P2BPPP/R1B3K1 w - - 1 20",
      "4r1k1/bpp2ppp/p1n5/P2n4/8/2PN4/1P2BPPP/R1B2K2 b - - 2 20",
      "4r1k1/bpp2ppp/p7/P2nn3/8/2PN4/1P2BPPP/R1B2K2 w - - 3 21",
      "4r1k1/bpp2ppp/p7/P2nN3/8/2P5/1P2BPPP/R1B2K2 b - - 0 21",
      "6k1/bpp2ppp/p7/P2nr3/8/2P5/1P2BPPP/R1B2K2 w - - 0 22",
      "6k1/bpp2ppp/p7/P2nr3/8/R1P5/1P2BPPP/2B2K2 b - - 1 22",
      "6k1/bpp2ppp/p4n2/P3r3/8/R1P5/1P2BPPP/2B2K2 w - - 2 23",
      "6k1/bpp2ppp/p4n2/P3r3/8/R1P2B2/1P3PPP/2B2K2 b - - 3 23",
      "6k1/bp3ppp/p1p2n2/P3r3/8/R1P2B2/1P3PPP/2B2K2 w - - 0 24",
      "6k1/bp3ppp/p1p2n2/P3r3/8/1RP2B2/1P3PPP/2B2K2 b - - 1 24",
      "6k1/bp2rppp/p1p2n2/P7/8/1RP2B2/1P3PPP/2B2K2 w - - 2 25",
      "6k1/bp2rppp/p1p2n2/P7/1R6/2P2B2/1P3PPP/2B2K2 b - - 3 25",
      "6k1/bp2rpp1/p1p2n1p/P7/1R6/2P2B2/1P3PPP/2B2K2 w - - 0 26",
      "6k1/bp2rpp1/p1p2n1p/P7/1R5P/2P2B2/1P3PP1/2B2K2 b - - 0 26",
      "5k2/bp2rpp1/p1p2n1p/P7/1R5P/2P2B2/1P3PP1/2B2K2 w - - 1 27",
      "5k2/bp2rpp1/p1p2n1p/P7/1R4PP/2P2B2/1P3P2/2B2K2 b - - 0 27",
      "5k2/bp2rpp1/p1p4p/P2n4/1R4PP/2P2B2/1P3P2/2B2K2 w - - 1 28",
      "5k2/bp2rpp1/p1p4p/P2n4/R5PP/2P2B2/1P3P2/2B2K2 b - - 2 28",
      "1b3k2/1p2rpp1/p1p4p/P2n4/R5PP/2P2B2/1P3P2/2B2K2 w - - 3 29",
      "1b3k2/1p2rpp1/p1p4p/P2n2P1/R6P/2P2B2/1P3P2/2B2K2 b - - 0 29",
      "1b3k2/1p2rpp1/p1p5/P2n2p1/R6P/2P2B2/1P3P2/2B2K2 w - - 0 30",
      "1b3k2/1p2rpp1/p1p5/P2n2B1/R6P/2P2B2/1P3P2/5K2 b - - 0 30",
      "1b3k2/1p2r1p1/p1p2p2/P2n2B1/R6P/2P2B2/1P3P2/5K2 w - - 0 31",
      "1b3k2/1p2r1p1/p1p2p2/P2n4/R6P/2P2B2/1P1B1P2/5K2 b - - 1 31",
      "1b3k2/1p1r2p1/p1p2p2/P2n4/R6P/2P2B2/1P1B1P2/5K2 w - - 2 32",
      "1b3k2/1p1r2p1/p1p2p2/P2n3P/R7/2P2B2/1P1B1P2/5K2 b - - 0 32",
      "1b3k2/1p1r2p1/p1p5/P2n1p1P/R7/2P2B2/1P1B1P2/5K2 w - - 0 33",
      "1b3k2/1p1r2p1/p1p5/P2n1p1P/7R/2P2B2/1P1B1P2/5K2 b - - 1 33",
      "1b4k1/1p1r2p1/p1p5/P2n1p1P/7R/2P2B2/1P1B1P2/5K2 w - - 2 34",
      "1b4k1/1p1r2p1/p1p5/P2n1p1P/2P4R/5B2/1P1B1P2/5K2 b - - 0 34",
      "1b4k1/1p1r2p1/p1p2n2/P4p1P/2P4R/5B2/1P1B1P2/5K2 w - - 1 35",
      "1b4k1/1p1r2p1/p1p2n2/P4p1P/2P4R/2B2B2/1P3P2/5K2 b - - 2 35",
      "1b6/1p1r2pk/p1p2n2/P4p1P/2P4R/2B2B2/1P3P2/5K2 w - - 3 36",
      "1b6/1p1r2pk/p1p2B2/P4p1P/2P4R/5B2/1P3P2/5K2 b - - 0 36",
      "1b6/1p1r3k/p1p2p2/P4p1P/2P4R/5B2/1P3P2/5K2 w - - 0 37",
      "1b6/1p1r3k/p1p2p1P/P4p2/2P4R/5B2/1P3P2/5K2 b - - 0 37",
      "8/1p1r3k/p1p2p1P/P3bp2/2P4R/5B2/1P3P2/5K2 w - - 1 38",
      "8/1p1r3k/p1p2p1P/P3bp2/2P4R/8/1P3PB1/5K2 b - - 2 38",
      "8/1p1r4/p1p2pkP/P3bp2/2P4R/8/1P3PB1/5K2 w - - 3 39",
      "8/1p1r3P/p1p2pk1/P3bp2/2P4R/8/1P3PB1/5K2 b - - 0 39",
      "8/1p5r/p1p2pk1/P3bp2/2P4R/8/1P3PB1/5K2 w - - 0 40",
      "8/1p5R/p1p2pk1/P3bp2/2P5/8/1P3PB1/5K2 b - - 0 40",
      "8/1p5k/p1p2p2/P3bp2/2P5/8/1P3PB1/5K2 w - - 0 41",
      "8/1p5k/p1p2p2/P3bp2/1PP5/8/5PB1/5K2 b - - 0 41",
      "8/1p5k/p1p2p2/P4p2/1PP5/2b5/5PB1/5K2 w - - 1 42",
      "8/1p5k/p1p2p2/PP3p2/2P5/2b5/5PB1/5K2 b - - 0 42",
      "8/1p5k/2p2p2/Pp3p2/2P5/2b5/5PB1/5K2 w - - 0 43",
      "8/1p5k/2p2p2/PP3p2/8/2b5/5PB1/5K2 b - - 0 43",
      "8/1p5k/5p2/Pp3p2/8/2b5/5PB1/5K2 w - - 0 44",
      "8/1B5k/5p2/Pp3p2/8/2b5/5P2/5K2 b - - 0 44",
      "8/1B5k/5p2/bp3p2/8/8/5P2/5K2 w - - 0 45",
      "8/1B5k/5p2/bp3p2/8/8/4KP2/8 b - - 1 45",
      "8/1B5k/5p2/b4p2/1p6/8/4KP2/8 w - - 0 46",
      "8/1B5k/5p2/b4p2/1p6/3K4/5P2/8 b - - 1 46",
      "8/1B5k/5p2/b4p2/8/1p1K4/5P2/8 w - - 0 47",
      "8/7k/5p2/b2B1p2/8/1p1K4/5P2/8 b - - 1 47",
      "8/7k/5p2/b2B1p2/8/3K4/1p3P2/8 w - - 0 48",
      "8/7k/5p2/b2B1p2/8/8/1pK2P2/8 b - - 1 48",
      "8/7k/5p2/3B1p2/8/2b5/1pK2P2/8 w - - 2 49",
      "8/7k/5p2/3B1p2/8/2b2P2/1pK5/8 b - - 0 49",
      "8/7k/5p2/3Bbp2/8/5P2/1pK5/8 w - - 1 50",
      "8/7k/5p2/3Bbp2/8/5P2/1p6/1K6 b - - 2 50",
      "8/7k/5p2/3Bb3/5p2/5P2/1p6/1K6 w - - 0 51",
      "B7/7k/5p2/4b3/5p2/5P2/1p6/1K6 b - - 1 51",
      "B6k/8/5p2/4b3/5p2/5P2/1p6/1K6 w - - 2 52",
      "7k/8/5p2/3Bb3/5p2/5P2/1p6/1K6 b - - 3 52",
      "8/6k1/5p2/3Bb3/5p2/5P2/1p6/1K6 w - - 4 53",
      "B7/6k1/5p2/4b3/5p2/5P2/1p6/1K6 b - - 5 53",
      "B6k/8/5p2/4b3/5p2/5P2/1p6/1K6 w - - 6 54",
      "7k/8/5p2/3Bb3/5p2/5P2/1p6/1K6 b - - 7 54",
      "8/6k1/5p2/3Bb3/5p2/5P2/1p6/1K6 w - - 8 55",
      "B7/6k1/5p2/4b3/5p2/5P2/1p6/1K6 b - - 9 55",
    ]
    for (index, history) in chess.getMoveHistory().enumerated() {
      XCTAssertEqual(history.fen, fens34[index], "Sinquefield(g35): FEN move (index)")
    }

    pgn = pgns.removeFirst()
    chess = try pgn.validate()
    XCTAssertEqual(chess.getTag("Event")?.value, "Sinquefield Cup", "Sinquefield(g36): event")
    XCTAssertEqual(chess.getTag("White")?.value, "Caruana, Fabiano", "Sinquefield(g36): white")
    XCTAssertEqual(chess.getTag("Black")?.value, "Anand, Viswanathan", "Sinquefield(g36): black")
    XCTAssertEqual(chess.getMoveCount(), 40, "Sinquefield(g36): move count")
    XCTAssertEqual(
      chess.getMoveHistory().map { $0.pcn }.joined(separator: ","),
      "d2d4,g8f6,c2c4,e7e6,g1f3,d7d5,b1c3,f8e7,c1f4,e8g8,e2e3,c7c5,d4c5,e7c5,c4d5,f6d5,c3d5,e6d5,f1d3,c5b4,f3d2,b8c6,e1g1,b4e7,a2a3,g7g6,a1c1,e7f6,b2b4,d8e7,d2f3,f8d8,h2h3,c6e5,f3e5,f6e5,d1d2,a7a5,b4a5,e5f4,e3f4,e7a3,c1a1,a3d6,f1b1,d6f6,a1a2,d8d6,a2c2,d6c6,c2c6,b7c6,d2b4,f6d8,b1a1,c8a6,d3a6,a8a6,f4f5,d5d4,f5g6,h7g6,a1d1,a6a5,d1d4,a5d5,d4e4,d5d1,g1h2,d8d6,b4d6,d1d6,e4e7,d6d2,e7c7,d2f2,c7c6,f2a2",
      "Sinquefield(g36): PCN move history"
    )
    let fens35 = [
      "rnbqkbnr/pppppppp/8/8/3P4/8/PPP1PPPP/RNBQKBNR b KQkq - 0 1",
      "rnbqkb1r/pppppppp/5n2/8/3P4/8/PPP1PPPP/RNBQKBNR w KQkq - 1 2",
      "rnbqkb1r/pppppppp/5n2/8/2PP4/8/PP2PPPP/RNBQKBNR b KQkq - 0 2",
      "rnbqkb1r/pppp1ppp/4pn2/8/2PP4/8/PP2PPPP/RNBQKBNR w KQkq - 0 3",
      "rnbqkb1r/pppp1ppp/4pn2/8/2PP4/5N2/PP2PPPP/RNBQKB1R b KQkq - 1 3",
      "rnbqkb1r/ppp2ppp/4pn2/3p4/2PP4/5N2/PP2PPPP/RNBQKB1R w KQkq - 0 4",
      "rnbqkb1r/ppp2ppp/4pn2/3p4/2PP4/2N2N2/PP2PPPP/R1BQKB1R b KQkq - 1 4",
      "rnbqk2r/ppp1bppp/4pn2/3p4/2PP4/2N2N2/PP2PPPP/R1BQKB1R w KQkq - 2 5",
      "rnbqk2r/ppp1bppp/4pn2/3p4/2PP1B2/2N2N2/PP2PPPP/R2QKB1R b KQkq - 3 5",
      "rnbq1rk1/ppp1bppp/4pn2/3p4/2PP1B2/2N2N2/PP2PPPP/R2QKB1R w KQ - 4 6",
      "rnbq1rk1/ppp1bppp/4pn2/3p4/2PP1B2/2N1PN2/PP3PPP/R2QKB1R b KQ - 0 6",
      "rnbq1rk1/pp2bppp/4pn2/2pp4/2PP1B2/2N1PN2/PP3PPP/R2QKB1R w KQ - 0 7",
      "rnbq1rk1/pp2bppp/4pn2/2Pp4/2P2B2/2N1PN2/PP3PPP/R2QKB1R b KQ - 0 7",
      "rnbq1rk1/pp3ppp/4pn2/2bp4/2P2B2/2N1PN2/PP3PPP/R2QKB1R w KQ - 0 8",
      "rnbq1rk1/pp3ppp/4pn2/2bP4/5B2/2N1PN2/PP3PPP/R2QKB1R b KQ - 0 8",
      "rnbq1rk1/pp3ppp/4p3/2bn4/5B2/2N1PN2/PP3PPP/R2QKB1R w KQ - 0 9",
      "rnbq1rk1/pp3ppp/4p3/2bN4/5B2/4PN2/PP3PPP/R2QKB1R b KQ - 0 9",
      "rnbq1rk1/pp3ppp/8/2bp4/5B2/4PN2/PP3PPP/R2QKB1R w KQ - 0 10",
      "rnbq1rk1/pp3ppp/8/2bp4/5B2/3BPN2/PP3PPP/R2QK2R b KQ - 1 10",
      "rnbq1rk1/pp3ppp/8/3p4/1b3B2/3BPN2/PP3PPP/R2QK2R w KQ - 2 11",
      "rnbq1rk1/pp3ppp/8/3p4/1b3B2/3BP3/PP1N1PPP/R2QK2R b KQ - 3 11",
      "r1bq1rk1/pp3ppp/2n5/3p4/1b3B2/3BP3/PP1N1PPP/R2QK2R w KQ - 4 12",
      "r1bq1rk1/pp3ppp/2n5/3p4/1b3B2/3BP3/PP1N1PPP/R2Q1RK1 b - - 5 12",
      "r1bq1rk1/pp2bppp/2n5/3p4/5B2/3BP3/PP1N1PPP/R2Q1RK1 w - - 6 13",
      "r1bq1rk1/pp2bppp/2n5/3p4/5B2/P2BP3/1P1N1PPP/R2Q1RK1 b - - 0 13",
      "r1bq1rk1/pp2bp1p/2n3p1/3p4/5B2/P2BP3/1P1N1PPP/R2Q1RK1 w - - 0 14",
      "r1bq1rk1/pp2bp1p/2n3p1/3p4/5B2/P2BP3/1P1N1PPP/2RQ1RK1 b - - 1 14",
      "r1bq1rk1/pp3p1p/2n2bp1/3p4/5B2/P2BP3/1P1N1PPP/2RQ1RK1 w - - 2 15",
      "r1bq1rk1/pp3p1p/2n2bp1/3p4/1P3B2/P2BP3/3N1PPP/2RQ1RK1 b - - 0 15",
      "r1b2rk1/pp2qp1p/2n2bp1/3p4/1P3B2/P2BP3/3N1PPP/2RQ1RK1 w - - 1 16",
      "r1b2rk1/pp2qp1p/2n2bp1/3p4/1P3B2/P2BPN2/5PPP/2RQ1RK1 b - - 2 16",
      "r1br2k1/pp2qp1p/2n2bp1/3p4/1P3B2/P2BPN2/5PPP/2RQ1RK1 w - - 3 17",
      "r1br2k1/pp2qp1p/2n2bp1/3p4/1P3B2/P2BPN1P/5PP1/2RQ1RK1 b - - 0 17",
      "r1br2k1/pp2qp1p/5bp1/3pn3/1P3B2/P2BPN1P/5PP1/2RQ1RK1 w - - 1 18",
      "r1br2k1/pp2qp1p/5bp1/3pN3/1P3B2/P2BP2P/5PP1/2RQ1RK1 b - - 0 18",
      "r1br2k1/pp2qp1p/6p1/3pb3/1P3B2/P2BP2P/5PP1/2RQ1RK1 w - - 0 19",
      "r1br2k1/pp2qp1p/6p1/3pb3/1P3B2/P2BP2P/3Q1PP1/2R2RK1 b - - 1 19",
      "r1br2k1/1p2qp1p/6p1/p2pb3/1P3B2/P2BP2P/3Q1PP1/2R2RK1 w - - 0 20",
      "r1br2k1/1p2qp1p/6p1/P2pb3/5B2/P2BP2P/3Q1PP1/2R2RK1 b - - 0 20",
      "r1br2k1/1p2qp1p/6p1/P2p4/5b2/P2BP2P/3Q1PP1/2R2RK1 w - - 0 21",
      "r1br2k1/1p2qp1p/6p1/P2p4/5P2/P2B3P/3Q1PP1/2R2RK1 b - - 0 21",
      "r1br2k1/1p3p1p/6p1/P2p4/5P2/q2B3P/3Q1PP1/2R2RK1 w - - 0 22",
      "r1br2k1/1p3p1p/6p1/P2p4/5P2/q2B3P/3Q1PP1/R4RK1 b - - 1 22",
      "r1br2k1/1p3p1p/3q2p1/P2p4/5P2/3B3P/3Q1PP1/R4RK1 w - - 2 23",
      "r1br2k1/1p3p1p/3q2p1/P2p4/5P2/3B3P/3Q1PP1/RR4K1 b - - 3 23",
      "r1br2k1/1p3p1p/5qp1/P2p4/5P2/3B3P/3Q1PP1/RR4K1 w - - 4 24",
      "r1br2k1/1p3p1p/5qp1/P2p4/5P2/3B3P/R2Q1PP1/1R4K1 b - - 5 24",
      "r1b3k1/1p3p1p/3r1qp1/P2p4/5P2/3B3P/R2Q1PP1/1R4K1 w - - 6 25",
      "r1b3k1/1p3p1p/3r1qp1/P2p4/5P2/3B3P/2RQ1PP1/1R4K1 b - - 7 25",
      "r1b3k1/1p3p1p/2r2qp1/P2p4/5P2/3B3P/2RQ1PP1/1R4K1 w - - 8 26",
      "r1b3k1/1p3p1p/2R2qp1/P2p4/5P2/3B3P/3Q1PP1/1R4K1 b - - 0 26",
      "r1b3k1/5p1p/2p2qp1/P2p4/5P2/3B3P/3Q1PP1/1R4K1 w - - 0 27",
      "r1b3k1/5p1p/2p2qp1/P2p4/1Q3P2/3B3P/5PP1/1R4K1 b - - 1 27",
      "r1bq2k1/5p1p/2p3p1/P2p4/1Q3P2/3B3P/5PP1/1R4K1 w - - 2 28",
      "r1bq2k1/5p1p/2p3p1/P2p4/1Q3P2/3B3P/5PP1/R5K1 b - - 3 28",
      "r2q2k1/5p1p/b1p3p1/P2p4/1Q3P2/3B3P/5PP1/R5K1 w - - 4 29",
      "r2q2k1/5p1p/B1p3p1/P2p4/1Q3P2/7P/5PP1/R5K1 b - - 0 29",
      "3q2k1/5p1p/r1p3p1/P2p4/1Q3P2/7P/5PP1/R5K1 w - - 0 30",
      "3q2k1/5p1p/r1p3p1/P2p1P2/1Q6/7P/5PP1/R5K1 b - - 0 30",
      "3q2k1/5p1p/r1p3p1/P4P2/1Q1p4/7P/5PP1/R5K1 w - - 0 31",
      "3q2k1/5p1p/r1p3P1/P7/1Q1p4/7P/5PP1/R5K1 b - - 0 31",
      "3q2k1/5p2/r1p3p1/P7/1Q1p4/7P/5PP1/R5K1 w - - 0 32",
      "3q2k1/5p2/r1p3p1/P7/1Q1p4/7P/5PP1/3R2K1 b - - 1 32",
      "3q2k1/5p2/2p3p1/r7/1Q1p4/7P/5PP1/3R2K1 w - - 0 33",
      "3q2k1/5p2/2p3p1/r7/1Q1R4/7P/5PP1/6K1 b - - 0 33",
      "3q2k1/5p2/2p3p1/3r4/1Q1R4/7P/5PP1/6K1 w - - 1 34",
      "3q2k1/5p2/2p3p1/3r4/1Q2R3/7P/5PP1/6K1 b - - 2 34",
      "3q2k1/5p2/2p3p1/8/1Q2R3/7P/5PP1/3r2K1 w - - 3 35",
      "3q2k1/5p2/2p3p1/8/1Q2R3/7P/5PPK/3r4 b - - 4 35",
      "6k1/5p2/2pq2p1/8/1Q2R3/7P/5PPK/3r4 w - - 5 36",
      "6k1/5p2/2pQ2p1/8/4R3/7P/5PPK/3r4 b - - 0 36",
      "6k1/5p2/2pr2p1/8/4R3/7P/5PPK/8 w - - 0 37",
      "6k1/4Rp2/2pr2p1/8/8/7P/5PPK/8 b - - 1 37",
      "6k1/4Rp2/2p3p1/8/8/7P/3r1PPK/8 w - - 2 38",
      "6k1/2R2p2/2p3p1/8/8/7P/3r1PPK/8 b - - 3 38",
      "6k1/2R2p2/2p3p1/8/8/7P/5rPK/8 w - - 0 39",
      "6k1/5p2/2R3p1/8/8/7P/5rPK/8 b - - 0 39",
      "6k1/5p2/2R3p1/8/8/7P/r5PK/8 w - - 1 40",
    ]
    for (index, history) in chess.getMoveHistory().enumerated() {
      XCTAssertEqual(history.fen, fens35[index], "Sinquefield(g36): FEN move (index)")
    }

    pgn = pgns.removeFirst()
    chess = try pgn.validate()
    XCTAssertEqual(chess.getTag("Event")?.value, "Sinquefield Cup", "Sinquefield(g37): event")
    XCTAssertEqual(
      chess.getTag("White")?.value, "Mamedyarov, Shakhriyar", "Sinquefield(g37): white")
    XCTAssertEqual(chess.getTag("Black")?.value, "Carlsen, Magnus", "Sinquefield(g37): black")
    XCTAssertEqual(chess.getMoveCount(), 59, "Sinquefield(g37): move count")
    XCTAssertEqual(
      chess.getMoveHistory().map { $0.pcn }.joined(separator: ","),
      "d2d4,g8f6,c2c4,g7g6,g1f3,f8g7,g2g3,c7c6,f1g2,d7d5,b1d2,a7a5,b2b3,a5a4,c1a3,a4b3,a2b3,e8g8,e1g1,f8e8,e2e3,c8f5,d1e2,b8a6,f3e5,f6e4,c4d5,c6d5,d2e4,f5e4,g2e4,d5e4,e2b5,a8b8,b5c4,g7e5,d4e5,d8d3,a1c1,d3c4,c1c4,b7b5,c4c6,b8a8,f1c1,a6b8,c6c8,g8f8,a3b4,b8a6,c8a8,e8a8,b4a5,f8e8,c1c6,e8d7,c6b6,a6c5,b3b4,c5d3,e5e6,f7e6,b6b5,a8c8,b5b7,d7d6,b4b5,c8c1,g1g2,c1c2,g2g1,g6g5,b7b8,c2b2,b8d8,d6c5,b5b6,b2b5,g1g2,g5g4,h2h3,h7h5,h3g4,h5g4,a5c3,e6e5,d8g8,c5c4,g8c8,c4d5,c8d8,d5c5,d8c8,c5b6,c8b8,b6c5,b8b5,c5b5,g2f1,b5a4,f1e2,e7e6,e2f1,a4b3,c3a5,b3c2,f1e2,d3c1,e2e1,c1d3,e1e2,d3c1,e2e1,c1d3,e1e2,d3c1",
      "Sinquefield(g37): PCN move history"
    )
    let fens36 = [
      "rnbqkbnr/pppppppp/8/8/3P4/8/PPP1PPPP/RNBQKBNR b KQkq - 0 1",
      "rnbqkb1r/pppppppp/5n2/8/3P4/8/PPP1PPPP/RNBQKBNR w KQkq - 1 2",
      "rnbqkb1r/pppppppp/5n2/8/2PP4/8/PP2PPPP/RNBQKBNR b KQkq - 0 2",
      "rnbqkb1r/pppppp1p/5np1/8/2PP4/8/PP2PPPP/RNBQKBNR w KQkq - 0 3",
      "rnbqkb1r/pppppp1p/5np1/8/2PP4/5N2/PP2PPPP/RNBQKB1R b KQkq - 1 3",
      "rnbqk2r/ppppppbp/5np1/8/2PP4/5N2/PP2PPPP/RNBQKB1R w KQkq - 2 4",
      "rnbqk2r/ppppppbp/5np1/8/2PP4/5NP1/PP2PP1P/RNBQKB1R b KQkq - 0 4",
      "rnbqk2r/pp1pppbp/2p2np1/8/2PP4/5NP1/PP2PP1P/RNBQKB1R w KQkq - 0 5",
      "rnbqk2r/pp1pppbp/2p2np1/8/2PP4/5NP1/PP2PPBP/RNBQK2R b KQkq - 1 5",
      "rnbqk2r/pp2ppbp/2p2np1/3p4/2PP4/5NP1/PP2PPBP/RNBQK2R w KQkq - 0 6",
      "rnbqk2r/pp2ppbp/2p2np1/3p4/2PP4/5NP1/PP1NPPBP/R1BQK2R b KQkq - 1 6",
      "rnbqk2r/1p2ppbp/2p2np1/p2p4/2PP4/5NP1/PP1NPPBP/R1BQK2R w KQkq - 0 7",
      "rnbqk2r/1p2ppbp/2p2np1/p2p4/2PP4/1P3NP1/P2NPPBP/R1BQK2R b KQkq - 0 7",
      "rnbqk2r/1p2ppbp/2p2np1/3p4/p1PP4/1P3NP1/P2NPPBP/R1BQK2R w KQkq - 0 8",
      "rnbqk2r/1p2ppbp/2p2np1/3p4/p1PP4/BP3NP1/P2NPPBP/R2QK2R b KQkq - 1 8",
      "rnbqk2r/1p2ppbp/2p2np1/3p4/2PP4/Bp3NP1/P2NPPBP/R2QK2R w KQkq - 0 9",
      "rnbqk2r/1p2ppbp/2p2np1/3p4/2PP4/BP3NP1/3NPPBP/R2QK2R b KQkq - 0 9",
      "rnbq1rk1/1p2ppbp/2p2np1/3p4/2PP4/BP3NP1/3NPPBP/R2QK2R w KQ - 1 10",
      "rnbq1rk1/1p2ppbp/2p2np1/3p4/2PP4/BP3NP1/3NPPBP/R2Q1RK1 b - - 2 10",
      "rnbqr1k1/1p2ppbp/2p2np1/3p4/2PP4/BP3NP1/3NPPBP/R2Q1RK1 w - - 3 11",
      "rnbqr1k1/1p2ppbp/2p2np1/3p4/2PP4/BP2PNP1/3N1PBP/R2Q1RK1 b - - 0 11",
      "rn1qr1k1/1p2ppbp/2p2np1/3p1b2/2PP4/BP2PNP1/3N1PBP/R2Q1RK1 w - - 1 12",
      "rn1qr1k1/1p2ppbp/2p2np1/3p1b2/2PP4/BP2PNP1/3NQPBP/R4RK1 b - - 2 12",
      "r2qr1k1/1p2ppbp/n1p2np1/3p1b2/2PP4/BP2PNP1/3NQPBP/R4RK1 w - - 3 13",
      "r2qr1k1/1p2ppbp/n1p2np1/3pNb2/2PP4/BP2P1P1/3NQPBP/R4RK1 b - - 4 13",
      "r2qr1k1/1p2ppbp/n1p3p1/3pNb2/2PPn3/BP2P1P1/3NQPBP/R4RK1 w - - 5 14",
      "r2qr1k1/1p2ppbp/n1p3p1/3PNb2/3Pn3/BP2P1P1/3NQPBP/R4RK1 b - - 0 14",
      "r2qr1k1/1p2ppbp/n5p1/3pNb2/3Pn3/BP2P1P1/3NQPBP/R4RK1 w - - 0 15",
      "r2qr1k1/1p2ppbp/n5p1/3pNb2/3PN3/BP2P1P1/4QPBP/R4RK1 b - - 0 15",
      "r2qr1k1/1p2ppbp/n5p1/3pN3/3Pb3/BP2P1P1/4QPBP/R4RK1 w - - 0 16",
      "r2qr1k1/1p2ppbp/n5p1/3pN3/3PB3/BP2P1P1/4QP1P/R4RK1 b - - 0 16",
      "r2qr1k1/1p2ppbp/n5p1/4N3/3Pp3/BP2P1P1/4QP1P/R4RK1 w - - 0 17",
      "r2qr1k1/1p2ppbp/n5p1/1Q2N3/3Pp3/BP2P1P1/5P1P/R4RK1 b - - 1 17",
      "1r1qr1k1/1p2ppbp/n5p1/1Q2N3/3Pp3/BP2P1P1/5P1P/R4RK1 w - - 2 18",
      "1r1qr1k1/1p2ppbp/n5p1/4N3/2QPp3/BP2P1P1/5P1P/R4RK1 b - - 3 18",
      "1r1qr1k1/1p2pp1p/n5p1/4b3/2QPp3/BP2P1P1/5P1P/R4RK1 w - - 0 19",
      "1r1qr1k1/1p2pp1p/n5p1/4P3/2Q1p3/BP2P1P1/5P1P/R4RK1 b - - 0 19",
      "1r2r1k1/1p2pp1p/n5p1/4P3/2Q1p3/BP1qP1P1/5P1P/R4RK1 w - - 1 20",
      "1r2r1k1/1p2pp1p/n5p1/4P3/2Q1p3/BP1qP1P1/5P1P/2R2RK1 b - - 2 20",
      "1r2r1k1/1p2pp1p/n5p1/4P3/2q1p3/BP2P1P1/5P1P/2R2RK1 w - - 0 21",
      "1r2r1k1/1p2pp1p/n5p1/4P3/2R1p3/BP2P1P1/5P1P/5RK1 b - - 0 21",
      "1r2r1k1/4pp1p/n5p1/1p2P3/2R1p3/BP2P1P1/5P1P/5RK1 w - - 0 22",
      "1r2r1k1/4pp1p/n1R3p1/1p2P3/4p3/BP2P1P1/5P1P/5RK1 b - - 1 22",
      "r3r1k1/4pp1p/n1R3p1/1p2P3/4p3/BP2P1P1/5P1P/5RK1 w - - 2 23",
      "r3r1k1/4pp1p/n1R3p1/1p2P3/4p3/BP2P1P1/5P1P/2R3K1 b - - 3 23",
      "rn2r1k1/4pp1p/2R3p1/1p2P3/4p3/BP2P1P1/5P1P/2R3K1 w - - 4 24",
      "rnR1r1k1/4pp1p/6p1/1p2P3/4p3/BP2P1P1/5P1P/2R3K1 b - - 5 24",
      "rnR1rk2/4pp1p/6p1/1p2P3/4p3/BP2P1P1/5P1P/2R3K1 w - - 6 25",
      "rnR1rk2/4pp1p/6p1/1p2P3/1B2p3/1P2P1P1/5P1P/2R3K1 b - - 7 25",
      "r1R1rk2/4pp1p/n5p1/1p2P3/1B2p3/1P2P1P1/5P1P/2R3K1 w - - 8 26",
      "R3rk2/4pp1p/n5p1/1p2P3/1B2p3/1P2P1P1/5P1P/2R3K1 b - - 0 26",
      "r4k2/4pp1p/n5p1/1p2P3/1B2p3/1P2P1P1/5P1P/2R3K1 w - - 0 27",
      "r4k2/4pp1p/n5p1/Bp2P3/4p3/1P2P1P1/5P1P/2R3K1 b - - 1 27",
      "r3k3/4pp1p/n5p1/Bp2P3/4p3/1P2P1P1/5P1P/2R3K1 w - - 2 28",
      "r3k3/4pp1p/n1R3p1/Bp2P3/4p3/1P2P1P1/5P1P/6K1 b - - 3 28",
      "r7/3kpp1p/n1R3p1/Bp2P3/4p3/1P2P1P1/5P1P/6K1 w - - 4 29",
      "r7/3kpp1p/nR4p1/Bp2P3/4p3/1P2P1P1/5P1P/6K1 b - - 5 29",
      "r7/3kpp1p/1R4p1/Bpn1P3/4p3/1P2P1P1/5P1P/6K1 w - - 6 30",
      "r7/3kpp1p/1R4p1/Bpn1P3/1P2p3/4P1P1/5P1P/6K1 b - - 0 30",
      "r7/3kpp1p/1R4p1/Bp2P3/1P2p3/3nP1P1/5P1P/6K1 w - - 1 31",
      "r7/3kpp1p/1R2P1p1/Bp6/1P2p3/3nP1P1/5P1P/6K1 b - - 0 31",
      "r7/3kp2p/1R2p1p1/Bp6/1P2p3/3nP1P1/5P1P/6K1 w - - 0 32",
      "r7/3kp2p/4p1p1/BR6/1P2p3/3nP1P1/5P1P/6K1 b - - 0 32",
      "2r5/3kp2p/4p1p1/BR6/1P2p3/3nP1P1/5P1P/6K1 w - - 1 33",
      "2r5/1R1kp2p/4p1p1/B7/1P2p3/3nP1P1/5P1P/6K1 b - - 2 33",
      "2r5/1R2p2p/3kp1p1/B7/1P2p3/3nP1P1/5P1P/6K1 w - - 3 34",
      "2r5/1R2p2p/3kp1p1/BP6/4p3/3nP1P1/5P1P/6K1 b - - 0 34",
      "8/1R2p2p/3kp1p1/BP6/4p3/3nP1P1/5P1P/2r3K1 w - - 1 35",
      "8/1R2p2p/3kp1p1/BP6/4p3/3nP1P1/5PKP/2r5 b - - 2 35",
      "8/1R2p2p/3kp1p1/BP6/4p3/3nP1P1/2r2PKP/8 w - - 3 36",
      "8/1R2p2p/3kp1p1/BP6/4p3/3nP1P1/2r2P1P/6K1 b - - 4 36",
      "8/1R2p2p/3kp3/BP4p1/4p3/3nP1P1/2r2P1P/6K1 w - - 0 37",
      "1R6/4p2p/3kp3/BP4p1/4p3/3nP1P1/2r2P1P/6K1 b - - 1 37",
      "1R6/4p2p/3kp3/BP4p1/4p3/3nP1P1/1r3P1P/6K1 w - - 2 38",
      "3R4/4p2p/3kp3/BP4p1/4p3/3nP1P1/1r3P1P/6K1 b - - 3 38",
      "3R4/4p2p/4p3/BPk3p1/4p3/3nP1P1/1r3P1P/6K1 w - - 4 39",
      "3R4/4p2p/1P2p3/B1k3p1/4p3/3nP1P1/1r3P1P/6K1 b - - 0 39",
      "3R4/4p2p/1P2p3/Brk3p1/4p3/3nP1P1/5P1P/6K1 w - - 1 40",
      "3R4/4p2p/1P2p3/Brk3p1/4p3/3nP1P1/5PKP/8 b - - 2 40",
      "3R4/4p2p/1P2p3/Brk5/4p1p1/3nP1P1/5PKP/8 w - - 0 41",
      "3R4/4p2p/1P2p3/Brk5/4p1p1/3nP1PP/5PK1/8 b - - 0 41",
      "3R4/4p3/1P2p3/Brk4p/4p1p1/3nP1PP/5PK1/8 w - - 0 42",
      "3R4/4p3/1P2p3/Brk4p/4p1P1/3nP1P1/5PK1/8 b - - 0 42",
      "3R4/4p3/1P2p3/Brk5/4p1p1/3nP1P1/5PK1/8 w - - 0 43",
      "3R4/4p3/1P2p3/1rk5/4p1p1/2BnP1P1/5PK1/8 b - - 1 43",
      "3R4/4p3/1P6/1rk1p3/4p1p1/2BnP1P1/5PK1/8 w - - 0 44",
      "6R1/4p3/1P6/1rk1p3/4p1p1/2BnP1P1/5PK1/8 b - - 1 44",
      "6R1/4p3/1P6/1r2p3/2k1p1p1/2BnP1P1/5PK1/8 w - - 2 45",
      "2R5/4p3/1P6/1r2p3/2k1p1p1/2BnP1P1/5PK1/8 b - - 3 45",
      "2R5/4p3/1P6/1r1kp3/4p1p1/2BnP1P1/5PK1/8 w - - 4 46",
      "3R4/4p3/1P6/1r1kp3/4p1p1/2BnP1P1/5PK1/8 b - - 5 46",
      "3R4/4p3/1P6/1rk1p3/4p1p1/2BnP1P1/5PK1/8 w - - 6 47",
      "2R5/4p3/1P6/1rk1p3/4p1p1/2BnP1P1/5PK1/8 b - - 7 47",
      "2R5/4p3/1k6/1r2p3/4p1p1/2BnP1P1/5PK1/8 w - - 0 48",
      "1R6/4p3/1k6/1r2p3/4p1p1/2BnP1P1/5PK1/8 b - - 1 48",
      "1R6/4p3/8/1rk1p3/4p1p1/2BnP1P1/5PK1/8 w - - 2 49",
      "8/4p3/8/1Rk1p3/4p1p1/2BnP1P1/5PK1/8 b - - 0 49",
      "8/4p3/8/1k2p3/4p1p1/2BnP1P1/5PK1/8 w - - 0 50",
      "8/4p3/8/1k2p3/4p1p1/2BnP1P1/5P2/5K2 b - - 1 50",
      "8/4p3/8/4p3/k3p1p1/2BnP1P1/5P2/5K2 w - - 2 51",
      "8/4p3/8/4p3/k3p1p1/2BnP1P1/4KP2/8 b - - 3 51",
      "8/8/4p3/4p3/k3p1p1/2BnP1P1/4KP2/8 w - - 0 52",
      "8/8/4p3/4p3/k3p1p1/2BnP1P1/5P2/5K2 b - - 1 52",
      "8/8/4p3/4p3/4p1p1/1kBnP1P1/5P2/5K2 w - - 2 53",
      "8/8/4p3/B3p3/4p1p1/1k1nP1P1/5P2/5K2 b - - 3 53",
      "8/8/4p3/B3p3/4p1p1/3nP1P1/2k2P2/5K2 w - - 4 54",
      "8/8/4p3/B3p3/4p1p1/3nP1P1/2k1KP2/8 b - - 5 54",
      "8/8/4p3/B3p3/4p1p1/4P1P1/2k1KP2/2n5 w - - 6 55",
      "8/8/4p3/B3p3/4p1p1/4P1P1/2k2P2/2n1K3 b - - 7 55",
      "8/8/4p3/B3p3/4p1p1/3nP1P1/2k2P2/4K3 w - - 8 56",
      "8/8/4p3/B3p3/4p1p1/3nP1P1/2k1KP2/8 b - - 9 56",
      "8/8/4p3/B3p3/4p1p1/4P1P1/2k1KP2/2n5 w - - 10 57",
      "8/8/4p3/B3p3/4p1p1/4P1P1/2k2P2/2n1K3 b - - 11 57",
      "8/8/4p3/B3p3/4p1p1/3nP1P1/2k2P2/4K3 w - - 12 58",
      "8/8/4p3/B3p3/4p1p1/3nP1P1/2k1KP2/8 b - - 13 58",
      "8/8/4p3/B3p3/4p1p1/4P1P1/2k1KP2/2n5 w - - 14 59",
    ]
    for (index, history) in chess.getMoveHistory().enumerated() {
      XCTAssertEqual(history.fen, fens36[index], "Sinquefield(g37): FEN move (index)")
    }

    pgn = pgns.removeFirst()
    chess = try pgn.validate()
    XCTAssertEqual(chess.getTag("Event")?.value, "Sinquefield Cup", "Sinquefield(g38): event")
    XCTAssertEqual(
      chess.getTag("White")?.value, "Vachier-Lagrave, Maxime", "Sinquefield(g38): white")
    XCTAssertEqual(chess.getTag("Black")?.value, "Aronian, Levon", "Sinquefield(g38): black")
    XCTAssertEqual(chess.getMoveCount(), 42, "Sinquefield(g38): move count")
    XCTAssertEqual(
      chess.getMoveHistory().map { $0.pcn }.joined(separator: ","),
      "e2e4,e7e5,g1f3,b8c6,f1b5,g8f6,e1g1,f6e4,d2d4,e4d6,b5c6,d7c6,d4e5,d6f5,d1d8,e8d8,f1d1,d8e8,b1c3,f8e7,c3e2,f5h4,f3h4,e7h4,e2d4,a7a6,c1f4,c6c5,d4e2,c8f5,c2c4,a8d8,e2c3,d8d7,f4e3,b7b6,c3d5,e8d8,g2g3,h4e7,a2a3,f5c2,d1d2,c2b3,a1c1,a6a5,c1c3,a5a4,e5e6,f7e6,d5e7,d8e7,e3g5,e7e8,c3d3,d7d3,d2d3,h8f8,d3d8,e8f7,d8f8,f7f8,g5d8,b3c4,d8c7,b6b5,c7d6,f8f7,d6c5,e6e5,f2f3,c4d5,g1f2,g7g6,c5b4,d5c6,b4c5,c6d5,c5b4,d5c6,b4c5,c6b7",
      "Sinquefield(g38): PCN move history"
    )
    let fens37 = [
      "rnbqkbnr/pppppppp/8/8/4P3/8/PPPP1PPP/RNBQKBNR b KQkq - 0 1",
      "rnbqkbnr/pppp1ppp/8/4p3/4P3/8/PPPP1PPP/RNBQKBNR w KQkq - 0 2",
      "rnbqkbnr/pppp1ppp/8/4p3/4P3/5N2/PPPP1PPP/RNBQKB1R b KQkq - 1 2",
      "r1bqkbnr/pppp1ppp/2n5/4p3/4P3/5N2/PPPP1PPP/RNBQKB1R w KQkq - 2 3",
      "r1bqkbnr/pppp1ppp/2n5/1B2p3/4P3/5N2/PPPP1PPP/RNBQK2R b KQkq - 3 3",
      "r1bqkb1r/pppp1ppp/2n2n2/1B2p3/4P3/5N2/PPPP1PPP/RNBQK2R w KQkq - 4 4",
      "r1bqkb1r/pppp1ppp/2n2n2/1B2p3/4P3/5N2/PPPP1PPP/RNBQ1RK1 b kq - 5 4",
      "r1bqkb1r/pppp1ppp/2n5/1B2p3/4n3/5N2/PPPP1PPP/RNBQ1RK1 w kq - 0 5",
      "r1bqkb1r/pppp1ppp/2n5/1B2p3/3Pn3/5N2/PPP2PPP/RNBQ1RK1 b kq - 0 5",
      "r1bqkb1r/pppp1ppp/2nn4/1B2p3/3P4/5N2/PPP2PPP/RNBQ1RK1 w kq - 1 6",
      "r1bqkb1r/pppp1ppp/2Bn4/4p3/3P4/5N2/PPP2PPP/RNBQ1RK1 b kq - 0 6",
      "r1bqkb1r/ppp2ppp/2pn4/4p3/3P4/5N2/PPP2PPP/RNBQ1RK1 w kq - 0 7",
      "r1bqkb1r/ppp2ppp/2pn4/4P3/8/5N2/PPP2PPP/RNBQ1RK1 b kq - 0 7",
      "r1bqkb1r/ppp2ppp/2p5/4Pn2/8/5N2/PPP2PPP/RNBQ1RK1 w kq - 1 8",
      "r1bQkb1r/ppp2ppp/2p5/4Pn2/8/5N2/PPP2PPP/RNB2RK1 b kq - 0 8",
      "r1bk1b1r/ppp2ppp/2p5/4Pn2/8/5N2/PPP2PPP/RNB2RK1 w - - 0 9",
      "r1bk1b1r/ppp2ppp/2p5/4Pn2/8/5N2/PPP2PPP/RNBR2K1 b - - 1 9",
      "r1b1kb1r/ppp2ppp/2p5/4Pn2/8/5N2/PPP2PPP/RNBR2K1 w - - 2 10",
      "r1b1kb1r/ppp2ppp/2p5/4Pn2/8/2N2N2/PPP2PPP/R1BR2K1 b - - 3 10",
      "r1b1k2r/ppp1bppp/2p5/4Pn2/8/2N2N2/PPP2PPP/R1BR2K1 w - - 4 11",
      "r1b1k2r/ppp1bppp/2p5/4Pn2/8/5N2/PPP1NPPP/R1BR2K1 b - - 5 11",
      "r1b1k2r/ppp1bppp/2p5/4P3/7n/5N2/PPP1NPPP/R1BR2K1 w - - 6 12",
      "r1b1k2r/ppp1bppp/2p5/4P3/7N/8/PPP1NPPP/R1BR2K1 b - - 0 12",
      "r1b1k2r/ppp2ppp/2p5/4P3/7b/8/PPP1NPPP/R1BR2K1 w - - 0 13",
      "r1b1k2r/ppp2ppp/2p5/4P3/3N3b/8/PPP2PPP/R1BR2K1 b - - 1 13",
      "r1b1k2r/1pp2ppp/p1p5/4P3/3N3b/8/PPP2PPP/R1BR2K1 w - - 0 14",
      "r1b1k2r/1pp2ppp/p1p5/4P3/3N1B1b/8/PPP2PPP/R2R2K1 b - - 1 14",
      "r1b1k2r/1pp2ppp/p7/2p1P3/3N1B1b/8/PPP2PPP/R2R2K1 w - - 0 15",
      "r1b1k2r/1pp2ppp/p7/2p1P3/5B1b/8/PPP1NPPP/R2R2K1 b - - 1 15",
      "r3k2r/1pp2ppp/p7/2p1Pb2/5B1b/8/PPP1NPPP/R2R2K1 w - - 2 16",
      "r3k2r/1pp2ppp/p7/2p1Pb2/2P2B1b/8/PP2NPPP/R2R2K1 b - - 0 16",
      "3rk2r/1pp2ppp/p7/2p1Pb2/2P2B1b/8/PP2NPPP/R2R2K1 w - - 1 17",
      "3rk2r/1pp2ppp/p7/2p1Pb2/2P2B1b/2N5/PP3PPP/R2R2K1 b - - 2 17",
      "4k2r/1ppr1ppp/p7/2p1Pb2/2P2B1b/2N5/PP3PPP/R2R2K1 w - - 3 18",
      "4k2r/1ppr1ppp/p7/2p1Pb2/2P4b/2N1B3/PP3PPP/R2R2K1 b - - 4 18",
      "4k2r/2pr1ppp/pp6/2p1Pb2/2P4b/2N1B3/PP3PPP/R2R2K1 w - - 0 19",
      "4k2r/2pr1ppp/pp6/2pNPb2/2P4b/4B3/PP3PPP/R2R2K1 b - - 1 19",
      "3k3r/2pr1ppp/pp6/2pNPb2/2P4b/4B3/PP3PPP/R2R2K1 w - - 2 20",
      "3k3r/2pr1ppp/pp6/2pNPb2/2P4b/4B1P1/PP3P1P/R2R2K1 b - - 0 20",
      "3k3r/2prbppp/pp6/2pNPb2/2P5/4B1P1/PP3P1P/R2R2K1 w - - 1 21",
      "3k3r/2prbppp/pp6/2pNPb2/2P5/P3B1P1/1P3P1P/R2R2K1 b - - 0 21",
      "3k3r/2prbppp/pp6/2pNP3/2P5/P3B1P1/1Pb2P1P/R2R2K1 w - - 1 22",
      "3k3r/2prbppp/pp6/2pNP3/2P5/P3B1P1/1PbR1P1P/R5K1 b - - 2 22",
      "3k3r/2prbppp/pp6/2pNP3/2P5/Pb2B1P1/1P1R1P1P/R5K1 w - - 3 23",
      "3k3r/2prbppp/pp6/2pNP3/2P5/Pb2B1P1/1P1R1P1P/2R3K1 b - - 4 23",
      "3k3r/2prbppp/1p6/p1pNP3/2P5/Pb2B1P1/1P1R1P1P/2R3K1 w - - 0 24",
      "3k3r/2prbppp/1p6/p1pNP3/2P5/PbR1B1P1/1P1R1P1P/6K1 b - - 1 24",
      "3k3r/2prbppp/1p6/2pNP3/p1P5/PbR1B1P1/1P1R1P1P/6K1 w - - 0 25",
      "3k3r/2prbppp/1p2P3/2pN4/p1P5/PbR1B1P1/1P1R1P1P/6K1 b - - 0 25",
      "3k3r/2prb1pp/1p2p3/2pN4/p1P5/PbR1B1P1/1P1R1P1P/6K1 w - - 0 26",
      "3k3r/2prN1pp/1p2p3/2p5/p1P5/PbR1B1P1/1P1R1P1P/6K1 b - - 0 26",
      "7r/2prk1pp/1p2p3/2p5/p1P5/PbR1B1P1/1P1R1P1P/6K1 w - - 0 27",
      "7r/2prk1pp/1p2p3/2p3B1/p1P5/PbR3P1/1P1R1P1P/6K1 b - - 1 27",
      "4k2r/2pr2pp/1p2p3/2p3B1/p1P5/PbR3P1/1P1R1P1P/6K1 w - - 2 28",
      "4k2r/2pr2pp/1p2p3/2p3B1/p1P5/Pb1R2P1/1P1R1P1P/6K1 b - - 3 28",
      "4k2r/2p3pp/1p2p3/2p3B1/p1P5/Pb1r2P1/1P1R1P1P/6K1 w - - 0 29",
      "4k2r/2p3pp/1p2p3/2p3B1/p1P5/Pb1R2P1/1P3P1P/6K1 b - - 0 29",
      "4kr2/2p3pp/1p2p3/2p3B1/p1P5/Pb1R2P1/1P3P1P/6K1 w - - 1 30",
      "3Rkr2/2p3pp/1p2p3/2p3B1/p1P5/Pb4P1/1P3P1P/6K1 b - - 2 30",
      "3R1r2/2p2kpp/1p2p3/2p3B1/p1P5/Pb4P1/1P3P1P/6K1 w - - 3 31",
      "5R2/2p2kpp/1p2p3/2p3B1/p1P5/Pb4P1/1P3P1P/6K1 b - - 0 31",
      "5k2/2p3pp/1p2p3/2p3B1/p1P5/Pb4P1/1P3P1P/6K1 w - - 0 32",
      "3B1k2/2p3pp/1p2p3/2p5/p1P5/Pb4P1/1P3P1P/6K1 b - - 1 32",
      "3B1k2/2p3pp/1p2p3/2p5/p1b5/P5P1/1P3P1P/6K1 w - - 0 33",
      "5k2/2B3pp/1p2p3/2p5/p1b5/P5P1/1P3P1P/6K1 b - - 0 33",
      "5k2/2B3pp/4p3/1pp5/p1b5/P5P1/1P3P1P/6K1 w - - 0 34",
      "5k2/6pp/3Bp3/1pp5/p1b5/P5P1/1P3P1P/6K1 b - - 1 34",
      "8/5kpp/3Bp3/1pp5/p1b5/P5P1/1P3P1P/6K1 w - - 2 35",
      "8/5kpp/4p3/1pB5/p1b5/P5P1/1P3P1P/6K1 b - - 0 35",
      "8/5kpp/8/1pB1p3/p1b5/P5P1/1P3P1P/6K1 w - - 0 36",
      "8/5kpp/8/1pB1p3/p1b5/P4PP1/1P5P/6K1 b - - 0 36",
      "8/5kpp/8/1pBbp3/p7/P4PP1/1P5P/6K1 w - - 1 37",
      "8/5kpp/8/1pBbp3/p7/P4PP1/1P3K1P/8 b - - 2 37",
      "8/5k1p/6p1/1pBbp3/p7/P4PP1/1P3K1P/8 w - - 0 38",
      "8/5k1p/6p1/1p1bp3/pB6/P4PP1/1P3K1P/8 b - - 1 38",
      "8/5k1p/2b3p1/1p2p3/pB6/P4PP1/1P3K1P/8 w - - 2 39",
      "8/5k1p/2b3p1/1pB1p3/p7/P4PP1/1P3K1P/8 b - - 3 39",
      "8/5k1p/6p1/1pBbp3/p7/P4PP1/1P3K1P/8 w - - 4 40",
      "8/5k1p/6p1/1p1bp3/pB6/P4PP1/1P3K1P/8 b - - 5 40",
      "8/5k1p/2b3p1/1p2p3/pB6/P4PP1/1P3K1P/8 w - - 6 41",
      "8/5k1p/2b3p1/1pB1p3/p7/P4PP1/1P3K1P/8 b - - 7 41",
      "8/1b3k1p/6p1/1pB1p3/p7/P4PP1/1P3K1P/8 w - - 8 42",
    ]
    for (index, history) in chess.getMoveHistory().enumerated() {
      XCTAssertEqual(history.fen, fens37[index], "Sinquefield(g38): FEN move (index)")
    }

    pgn = pgns.removeFirst()
    chess = try pgn.validate()
    XCTAssertEqual(chess.getTag("Event")?.value, "Sinquefield Cup", "Sinquefield(g39): event")
    XCTAssertEqual(chess.getTag("White")?.value, "Grischuk, Alexander", "Sinquefield(g39): white")
    XCTAssertEqual(chess.getTag("Black")?.value, "So, Wesley", "Sinquefield(g39): black")
    XCTAssertEqual(chess.getMoveCount(), 36, "Sinquefield(g39): move count")
    XCTAssertEqual(
      chess.getMoveHistory().map { $0.pcn }.joined(separator: ","),
      "f2f4,g8f6,g1f3,b7b6,b2b3,c8b7,e2e3,g7g6,c1b2,f8g7,g2g3,e8g8,f1g2,c7c5,c2c4,d7d5,e1g1,b8c6,d1e2,a8c8,d2d3,d5d4,e3d4,c6d4,f3d4,b7g2,g1g2,c5d4,b1a3,f6d7,a3c2,d7c5,f4f5,d8d7,g3g4,b6b5,b2a3,a7a5,a3c5,c8c5,a1e1,b5c4,b3c4,g6f5,g4f5,c5f5,f1f5,d7f5,e2f3,f5g5,g2h1,g8h8,e1g1,g5h6,f3d5,h6d2,c2d4,d2a2,d5e4,a2b2,d4f5,g7e5,g1g2,b2c1,g2g1,c1b2,g1g2,b2c1,g2g1,c1b2,g1g2",
      "Sinquefield(g39): PCN move history"
    )
    let fens38 = [
      "rnbqkbnr/pppppppp/8/8/5P2/8/PPPPP1PP/RNBQKBNR b KQkq - 0 1",
      "rnbqkb1r/pppppppp/5n2/8/5P2/8/PPPPP1PP/RNBQKBNR w KQkq - 1 2",
      "rnbqkb1r/pppppppp/5n2/8/5P2/5N2/PPPPP1PP/RNBQKB1R b KQkq - 2 2",
      "rnbqkb1r/p1pppppp/1p3n2/8/5P2/5N2/PPPPP1PP/RNBQKB1R w KQkq - 0 3",
      "rnbqkb1r/p1pppppp/1p3n2/8/5P2/1P3N2/P1PPP1PP/RNBQKB1R b KQkq - 0 3",
      "rn1qkb1r/pbpppppp/1p3n2/8/5P2/1P3N2/P1PPP1PP/RNBQKB1R w KQkq - 1 4",
      "rn1qkb1r/pbpppppp/1p3n2/8/5P2/1P2PN2/P1PP2PP/RNBQKB1R b KQkq - 0 4",
      "rn1qkb1r/pbpppp1p/1p3np1/8/5P2/1P2PN2/P1PP2PP/RNBQKB1R w KQkq - 0 5",
      "rn1qkb1r/pbpppp1p/1p3np1/8/5P2/1P2PN2/PBPP2PP/RN1QKB1R b KQkq - 1 5",
      "rn1qk2r/pbppppbp/1p3np1/8/5P2/1P2PN2/PBPP2PP/RN1QKB1R w KQkq - 2 6",
      "rn1qk2r/pbppppbp/1p3np1/8/5P2/1P2PNP1/PBPP3P/RN1QKB1R b KQkq - 0 6",
      "rn1q1rk1/pbppppbp/1p3np1/8/5P2/1P2PNP1/PBPP3P/RN1QKB1R w KQ - 1 7",
      "rn1q1rk1/pbppppbp/1p3np1/8/5P2/1P2PNP1/PBPP2BP/RN1QK2R b KQ - 2 7",
      "rn1q1rk1/pb1pppbp/1p3np1/2p5/5P2/1P2PNP1/PBPP2BP/RN1QK2R w KQ - 0 8",
      "rn1q1rk1/pb1pppbp/1p3np1/2p5/2P2P2/1P2PNP1/PB1P2BP/RN1QK2R b KQ - 0 8",
      "rn1q1rk1/pb2ppbp/1p3np1/2pp4/2P2P2/1P2PNP1/PB1P2BP/RN1QK2R w KQ - 0 9",
      "rn1q1rk1/pb2ppbp/1p3np1/2pp4/2P2P2/1P2PNP1/PB1P2BP/RN1Q1RK1 b - - 1 9",
      "r2q1rk1/pb2ppbp/1pn2np1/2pp4/2P2P2/1P2PNP1/PB1P2BP/RN1Q1RK1 w - - 2 10",
      "r2q1rk1/pb2ppbp/1pn2np1/2pp4/2P2P2/1P2PNP1/PB1PQ1BP/RN3RK1 b - - 3 10",
      "2rq1rk1/pb2ppbp/1pn2np1/2pp4/2P2P2/1P2PNP1/PB1PQ1BP/RN3RK1 w - - 4 11",
      "2rq1rk1/pb2ppbp/1pn2np1/2pp4/2P2P2/1P1PPNP1/PB2Q1BP/RN3RK1 b - - 0 11",
      "2rq1rk1/pb2ppbp/1pn2np1/2p5/2Pp1P2/1P1PPNP1/PB2Q1BP/RN3RK1 w - - 0 12",
      "2rq1rk1/pb2ppbp/1pn2np1/2p5/2PP1P2/1P1P1NP1/PB2Q1BP/RN3RK1 b - - 0 12",
      "2rq1rk1/pb2ppbp/1p3np1/2p5/2Pn1P2/1P1P1NP1/PB2Q1BP/RN3RK1 w - - 0 13",
      "2rq1rk1/pb2ppbp/1p3np1/2p5/2PN1P2/1P1P2P1/PB2Q1BP/RN3RK1 b - - 0 13",
      "2rq1rk1/p3ppbp/1p3np1/2p5/2PN1P2/1P1P2P1/PB2Q1bP/RN3RK1 w - - 0 14",
      "2rq1rk1/p3ppbp/1p3np1/2p5/2PN1P2/1P1P2P1/PB2Q1KP/RN3R2 b - - 0 14",
      "2rq1rk1/p3ppbp/1p3np1/8/2Pp1P2/1P1P2P1/PB2Q1KP/RN3R2 w - - 0 15",
      "2rq1rk1/p3ppbp/1p3np1/8/2Pp1P2/NP1P2P1/PB2Q1KP/R4R2 b - - 1 15",
      "2rq1rk1/p2nppbp/1p4p1/8/2Pp1P2/NP1P2P1/PB2Q1KP/R4R2 w - - 2 16",
      "2rq1rk1/p2nppbp/1p4p1/8/2Pp1P2/1P1P2P1/PBN1Q1KP/R4R2 b - - 3 16",
      "2rq1rk1/p3ppbp/1p4p1/2n5/2Pp1P2/1P1P2P1/PBN1Q1KP/R4R2 w - - 4 17",
      "2rq1rk1/p3ppbp/1p4p1/2n2P2/2Pp4/1P1P2P1/PBN1Q1KP/R4R2 b - - 0 17",
      "2r2rk1/p2qppbp/1p4p1/2n2P2/2Pp4/1P1P2P1/PBN1Q1KP/R4R2 w - - 1 18",
      "2r2rk1/p2qppbp/1p4p1/2n2P2/2Pp2P1/1P1P4/PBN1Q1KP/R4R2 b - - 0 18",
      "2r2rk1/p2qppbp/6p1/1pn2P2/2Pp2P1/1P1P4/PBN1Q1KP/R4R2 w - - 0 19",
      "2r2rk1/p2qppbp/6p1/1pn2P2/2Pp2P1/BP1P4/P1N1Q1KP/R4R2 b - - 1 19",
      "2r2rk1/3qppbp/6p1/ppn2P2/2Pp2P1/BP1P4/P1N1Q1KP/R4R2 w - - 0 20",
      "2r2rk1/3qppbp/6p1/ppB2P2/2Pp2P1/1P1P4/P1N1Q1KP/R4R2 b - - 0 20",
      "5rk1/3qppbp/6p1/ppr2P2/2Pp2P1/1P1P4/P1N1Q1KP/R4R2 w - - 0 21",
      "5rk1/3qppbp/6p1/ppr2P2/2Pp2P1/1P1P4/P1N1Q1KP/4RR2 b - - 1 21",
      "5rk1/3qppbp/6p1/p1r2P2/2pp2P1/1P1P4/P1N1Q1KP/4RR2 w - - 0 22",
      "5rk1/3qppbp/6p1/p1r2P2/2Pp2P1/3P4/P1N1Q1KP/4RR2 b - - 0 22",
      "5rk1/3qppbp/8/p1r2p2/2Pp2P1/3P4/P1N1Q1KP/4RR2 w - - 0 23",
      "5rk1/3qppbp/8/p1r2P2/2Pp4/3P4/P1N1Q1KP/4RR2 b - - 0 23",
      "5rk1/3qppbp/8/p4r2/2Pp4/3P4/P1N1Q1KP/4RR2 w - - 0 24",
      "5rk1/3qppbp/8/p4R2/2Pp4/3P4/P1N1Q1KP/4R3 b - - 0 24",
      "5rk1/4ppbp/8/p4q2/2Pp4/3P4/P1N1Q1KP/4R3 w - - 0 25",
      "5rk1/4ppbp/8/p4q2/2Pp4/3P1Q2/P1N3KP/4R3 b - - 1 25",
      "5rk1/4ppbp/8/p5q1/2Pp4/3P1Q2/P1N3KP/4R3 w - - 2 26",
      "5rk1/4ppbp/8/p5q1/2Pp4/3P1Q2/P1N4P/4R2K b - - 3 26",
      "5r1k/4ppbp/8/p5q1/2Pp4/3P1Q2/P1N4P/4R2K w - - 4 27",
      "5r1k/4ppbp/8/p5q1/2Pp4/3P1Q2/P1N4P/6RK b - - 5 27",
      "5r1k/4ppbp/7q/p7/2Pp4/3P1Q2/P1N4P/6RK w - - 6 28",
      "5r1k/4ppbp/7q/p2Q4/2Pp4/3P4/P1N4P/6RK b - - 7 28",
      "5r1k/4ppbp/8/p2Q4/2Pp4/3P4/P1Nq3P/6RK w - - 8 29",
      "5r1k/4ppbp/8/p2Q4/2PN4/3P4/P2q3P/6RK b - - 0 29",
      "5r1k/4ppbp/8/p2Q4/2PN4/3P4/q6P/6RK w - - 0 30",
      "5r1k/4ppbp/8/p7/2PNQ3/3P4/q6P/6RK b - - 1 30",
      "5r1k/4ppbp/8/p7/2PNQ3/3P4/1q5P/6RK w - - 2 31",
      "5r1k/4ppbp/8/p4N2/2P1Q3/3P4/1q5P/6RK b - - 3 31",
      "5r1k/4pp1p/8/p3bN2/2P1Q3/3P4/1q5P/6RK w - - 4 32",
      "5r1k/4pp1p/8/p3bN2/2P1Q3/3P4/1q4RP/7K b - - 5 32",
      "5r1k/4pp1p/8/p3bN2/2P1Q3/3P4/6RP/2q4K w - - 6 33",
      "5r1k/4pp1p/8/p3bN2/2P1Q3/3P4/7P/2q3RK b - - 7 33",
      "5r1k/4pp1p/8/p3bN2/2P1Q3/3P4/1q5P/6RK w - - 8 34",
      "5r1k/4pp1p/8/p3bN2/2P1Q3/3P4/1q4RP/7K b - - 9 34",
      "5r1k/4pp1p/8/p3bN2/2P1Q3/3P4/6RP/2q4K w - - 10 35",
      "5r1k/4pp1p/8/p3bN2/2P1Q3/3P4/7P/2q3RK b - - 11 35",
      "5r1k/4pp1p/8/p3bN2/2P1Q3/3P4/1q5P/6RK w - - 12 36",
      "5r1k/4pp1p/8/p3bN2/2P1Q3/3P4/1q4RP/7K b - - 13 36",
    ]
    for (index, history) in chess.getMoveHistory().enumerated() {
      XCTAssertEqual(history.fen, fens38[index], "Sinquefield(g39): FEN move (index)")
    }

    pgn = pgns.removeFirst()
    chess = try pgn.validate()
    XCTAssertEqual(chess.getTag("Event")?.value, "Sinquefield Cup", "Sinquefield(g40): event")
    XCTAssertEqual(chess.getTag("White")?.value, "Nakamura, Hikaru", "Sinquefield(g40): white")
    XCTAssertEqual(chess.getTag("Black")?.value, "Karjakin, Sergey", "Sinquefield(g40): black")
    XCTAssertEqual(chess.getMoveCount(), 42, "Sinquefield(g40): move count")
    XCTAssertEqual(
      chess.getMoveHistory().map { $0.pcn }.joined(separator: ","),
      "d2d4,g8f6,c2c4,e7e6,g1f3,d7d5,g2g3,f8b4,c1d2,b4e7,f1g2,e8g8,e1g1,b8d7,b1c3,c7c6,d2f4,d5c4,e2e4,f8e8,a2a4,b7b6,d4d5,e6d5,e4d5,c8b7,a4a5,b6a5,d5d6,e7f8,f3d2,f6d5,c3d5,c6d5,d2c4,d5c4,g2b7,a8b8,b7d5,d7e5,d6d7,d8d7,a1a5,b8d8,f4e5,f8b4,a5a4,a7a5,e5c3,b4c3,b2c3,d7d5,d1d5,d8d5,a4c4,e8a8,f1a1,g8f8,a1a4,a8a7,c4c8,f8e7,c3c4,d5e5,h2h4,e7d6,g1g2,h7h5,c8d8,d6e7,d8c8,g7g6,c8b8,e7d6,b8b6,d6c5,b6b5,c5d6,b5b6,d6c5,b6b5,c5d6,b5b6",
      "Sinquefield(g40): PCN move history"
    )
    let fens39 = [
      "rnbqkbnr/pppppppp/8/8/3P4/8/PPP1PPPP/RNBQKBNR b KQkq - 0 1",
      "rnbqkb1r/pppppppp/5n2/8/3P4/8/PPP1PPPP/RNBQKBNR w KQkq - 1 2",
      "rnbqkb1r/pppppppp/5n2/8/2PP4/8/PP2PPPP/RNBQKBNR b KQkq - 0 2",
      "rnbqkb1r/pppp1ppp/4pn2/8/2PP4/8/PP2PPPP/RNBQKBNR w KQkq - 0 3",
      "rnbqkb1r/pppp1ppp/4pn2/8/2PP4/5N2/PP2PPPP/RNBQKB1R b KQkq - 1 3",
      "rnbqkb1r/ppp2ppp/4pn2/3p4/2PP4/5N2/PP2PPPP/RNBQKB1R w KQkq - 0 4",
      "rnbqkb1r/ppp2ppp/4pn2/3p4/2PP4/5NP1/PP2PP1P/RNBQKB1R b KQkq - 0 4",
      "rnbqk2r/ppp2ppp/4pn2/3p4/1bPP4/5NP1/PP2PP1P/RNBQKB1R w KQkq - 1 5",
      "rnbqk2r/ppp2ppp/4pn2/3p4/1bPP4/5NP1/PP1BPP1P/RN1QKB1R b KQkq - 2 5",
      "rnbqk2r/ppp1bppp/4pn2/3p4/2PP4/5NP1/PP1BPP1P/RN1QKB1R w KQkq - 3 6",
      "rnbqk2r/ppp1bppp/4pn2/3p4/2PP4/5NP1/PP1BPPBP/RN1QK2R b KQkq - 4 6",
      "rnbq1rk1/ppp1bppp/4pn2/3p4/2PP4/5NP1/PP1BPPBP/RN1QK2R w KQ - 5 7",
      "rnbq1rk1/ppp1bppp/4pn2/3p4/2PP4/5NP1/PP1BPPBP/RN1Q1RK1 b - - 6 7",
      "r1bq1rk1/pppnbppp/4pn2/3p4/2PP4/5NP1/PP1BPPBP/RN1Q1RK1 w - - 7 8",
      "r1bq1rk1/pppnbppp/4pn2/3p4/2PP4/2N2NP1/PP1BPPBP/R2Q1RK1 b - - 8 8",
      "r1bq1rk1/pp1nbppp/2p1pn2/3p4/2PP4/2N2NP1/PP1BPPBP/R2Q1RK1 w - - 0 9",
      "r1bq1rk1/pp1nbppp/2p1pn2/3p4/2PP1B2/2N2NP1/PP2PPBP/R2Q1RK1 b - - 1 9",
      "r1bq1rk1/pp1nbppp/2p1pn2/8/2pP1B2/2N2NP1/PP2PPBP/R2Q1RK1 w - - 0 10",
      "r1bq1rk1/pp1nbppp/2p1pn2/8/2pPPB2/2N2NP1/PP3PBP/R2Q1RK1 b - - 0 10",
      "r1bqr1k1/pp1nbppp/2p1pn2/8/2pPPB2/2N2NP1/PP3PBP/R2Q1RK1 w - - 1 11",
      "r1bqr1k1/pp1nbppp/2p1pn2/8/P1pPPB2/2N2NP1/1P3PBP/R2Q1RK1 b - - 0 11",
      "r1bqr1k1/p2nbppp/1pp1pn2/8/P1pPPB2/2N2NP1/1P3PBP/R2Q1RK1 w - - 0 12",
      "r1bqr1k1/p2nbppp/1pp1pn2/3P4/P1p1PB2/2N2NP1/1P3PBP/R2Q1RK1 b - - 0 12",
      "r1bqr1k1/p2nbppp/1pp2n2/3p4/P1p1PB2/2N2NP1/1P3PBP/R2Q1RK1 w - - 0 13",
      "r1bqr1k1/p2nbppp/1pp2n2/3P4/P1p2B2/2N2NP1/1P3PBP/R2Q1RK1 b - - 0 13",
      "r2qr1k1/pb1nbppp/1pp2n2/3P4/P1p2B2/2N2NP1/1P3PBP/R2Q1RK1 w - - 1 14",
      "r2qr1k1/pb1nbppp/1pp2n2/P2P4/2p2B2/2N2NP1/1P3PBP/R2Q1RK1 b - - 0 14",
      "r2qr1k1/pb1nbppp/2p2n2/p2P4/2p2B2/2N2NP1/1P3PBP/R2Q1RK1 w - - 0 15",
      "r2qr1k1/pb1nbppp/2pP1n2/p7/2p2B2/2N2NP1/1P3PBP/R2Q1RK1 b - - 0 15",
      "r2qrbk1/pb1n1ppp/2pP1n2/p7/2p2B2/2N2NP1/1P3PBP/R2Q1RK1 w - - 1 16",
      "r2qrbk1/pb1n1ppp/2pP1n2/p7/2p2B2/2N3P1/1P1N1PBP/R2Q1RK1 b - - 2 16",
      "r2qrbk1/pb1n1ppp/2pP4/p2n4/2p2B2/2N3P1/1P1N1PBP/R2Q1RK1 w - - 3 17",
      "r2qrbk1/pb1n1ppp/2pP4/p2N4/2p2B2/6P1/1P1N1PBP/R2Q1RK1 b - - 0 17",
      "r2qrbk1/pb1n1ppp/3P4/p2p4/2p2B2/6P1/1P1N1PBP/R2Q1RK1 w - - 0 18",
      "r2qrbk1/pb1n1ppp/3P4/p2p4/2N2B2/6P1/1P3PBP/R2Q1RK1 b - - 0 18",
      "r2qrbk1/pb1n1ppp/3P4/p7/2p2B2/6P1/1P3PBP/R2Q1RK1 w - - 0 19",
      "r2qrbk1/pB1n1ppp/3P4/p7/2p2B2/6P1/1P3P1P/R2Q1RK1 b - - 0 19",
      "1r1qrbk1/pB1n1ppp/3P4/p7/2p2B2/6P1/1P3P1P/R2Q1RK1 w - - 1 20",
      "1r1qrbk1/p2n1ppp/3P4/p2B4/2p2B2/6P1/1P3P1P/R2Q1RK1 b - - 2 20",
      "1r1qrbk1/p4ppp/3P4/p2Bn3/2p2B2/6P1/1P3P1P/R2Q1RK1 w - - 3 21",
      "1r1qrbk1/p2P1ppp/8/p2Bn3/2p2B2/6P1/1P3P1P/R2Q1RK1 b - - 0 21",
      "1r2rbk1/p2q1ppp/8/p2Bn3/2p2B2/6P1/1P3P1P/R2Q1RK1 w - - 0 22",
      "1r2rbk1/p2q1ppp/8/R2Bn3/2p2B2/6P1/1P3P1P/3Q1RK1 b - - 0 22",
      "3rrbk1/p2q1ppp/8/R2Bn3/2p2B2/6P1/1P3P1P/3Q1RK1 w - - 1 23",
      "3rrbk1/p2q1ppp/8/R2BB3/2p5/6P1/1P3P1P/3Q1RK1 b - - 0 23",
      "3rr1k1/p2q1ppp/8/R2BB3/1bp5/6P1/1P3P1P/3Q1RK1 w - - 1 24",
      "3rr1k1/p2q1ppp/8/3BB3/Rbp5/6P1/1P3P1P/3Q1RK1 b - - 2 24",
      "3rr1k1/3q1ppp/8/p2BB3/Rbp5/6P1/1P3P1P/3Q1RK1 w - - 0 25",
      "3rr1k1/3q1ppp/8/p2B4/Rbp5/2B3P1/1P3P1P/3Q1RK1 b - - 1 25",
      "3rr1k1/3q1ppp/8/p2B4/R1p5/2b3P1/1P3P1P/3Q1RK1 w - - 0 26",
      "3rr1k1/3q1ppp/8/p2B4/R1p5/2P3P1/5P1P/3Q1RK1 b - - 0 26",
      "3rr1k1/5ppp/8/p2q4/R1p5/2P3P1/5P1P/3Q1RK1 w - - 0 27",
      "3rr1k1/5ppp/8/p2Q4/R1p5/2P3P1/5P1P/5RK1 b - - 0 27",
      "4r1k1/5ppp/8/p2r4/R1p5/2P3P1/5P1P/5RK1 w - - 0 28",
      "4r1k1/5ppp/8/p2r4/2R5/2P3P1/5P1P/5RK1 b - - 0 28",
      "r5k1/5ppp/8/p2r4/2R5/2P3P1/5P1P/5RK1 w - - 1 29",
      "r5k1/5ppp/8/p2r4/2R5/2P3P1/5P1P/R5K1 b - - 2 29",
      "r4k2/5ppp/8/p2r4/2R5/2P3P1/5P1P/R5K1 w - - 3 30",
      "r4k2/5ppp/8/p2r4/R1R5/2P3P1/5P1P/6K1 b - - 4 30",
      "5k2/r4ppp/8/p2r4/R1R5/2P3P1/5P1P/6K1 w - - 5 31",
      "2R2k2/r4ppp/8/p2r4/R7/2P3P1/5P1P/6K1 b - - 6 31",
      "2R5/r3kppp/8/p2r4/R7/2P3P1/5P1P/6K1 w - - 7 32",
      "2R5/r3kppp/8/p2r4/R1P5/6P1/5P1P/6K1 b - - 0 32",
      "2R5/r3kppp/8/p3r3/R1P5/6P1/5P1P/6K1 w - - 1 33",
      "2R5/r3kppp/8/p3r3/R1P4P/6P1/5P2/6K1 b - - 0 33",
      "2R5/r4ppp/3k4/p3r3/R1P4P/6P1/5P2/6K1 w - - 1 34",
      "2R5/r4ppp/3k4/p3r3/R1P4P/6P1/5PK1/8 b - - 2 34",
      "2R5/r4pp1/3k4/p3r2p/R1P4P/6P1/5PK1/8 w - - 0 35",
      "3R4/r4pp1/3k4/p3r2p/R1P4P/6P1/5PK1/8 b - - 1 35",
      "3R4/r3kpp1/8/p3r2p/R1P4P/6P1/5PK1/8 w - - 2 36",
      "2R5/r3kpp1/8/p3r2p/R1P4P/6P1/5PK1/8 b - - 3 36",
      "2R5/r3kp2/6p1/p3r2p/R1P4P/6P1/5PK1/8 w - - 0 37",
      "1R6/r3kp2/6p1/p3r2p/R1P4P/6P1/5PK1/8 b - - 1 37",
      "1R6/r4p2/3k2p1/p3r2p/R1P4P/6P1/5PK1/8 w - - 2 38",
      "8/r4p2/1R1k2p1/p3r2p/R1P4P/6P1/5PK1/8 b - - 3 38",
      "8/r4p2/1R4p1/p1k1r2p/R1P4P/6P1/5PK1/8 w - - 4 39",
      "8/r4p2/6p1/pRk1r2p/R1P4P/6P1/5PK1/8 b - - 5 39",
      "8/r4p2/3k2p1/pR2r2p/R1P4P/6P1/5PK1/8 w - - 6 40",
      "8/r4p2/1R1k2p1/p3r2p/R1P4P/6P1/5PK1/8 b - - 7 40",
      "8/r4p2/1R4p1/p1k1r2p/R1P4P/6P1/5PK1/8 w - - 8 41",
      "8/r4p2/6p1/pRk1r2p/R1P4P/6P1/5PK1/8 b - - 9 41",
      "8/r4p2/3k2p1/pR2r2p/R1P4P/6P1/5PK1/8 w - - 10 42",
      "8/r4p2/1R1k2p1/p3r2p/R1P4P/6P1/5PK1/8 b - - 11 42",
    ]
    for (index, history) in chess.getMoveHistory().enumerated() {
      XCTAssertEqual(history.fen, fens39[index], "Sinquefield(g40): FEN move (index)")
    }

    pgn = pgns.removeFirst()
    chess = try pgn.validate()
    XCTAssertEqual(chess.getTag("Event")?.value, "Sinquefield Cup", "Sinquefield(g41): event")
    XCTAssertEqual(chess.getTag("White")?.value, "So, Wesley", "Sinquefield(g41): white")
    XCTAssertEqual(chess.getTag("Black")?.value, "Caruana, Fabiano", "Sinquefield(g41): black")
    XCTAssertEqual(chess.getMoveCount(), 36, "Sinquefield(g41): move count")
    XCTAssertEqual(
      chess.getMoveHistory().map { $0.pcn }.joined(separator: ","),
      "e2e4,e7e5,g1f3,g8f6,f3e5,d7d6,e5d3,f6e4,d1e2,d8e7,b1c3,e4f6,b2b3,b8c6,c1b2,c8f5,d3f4,e8c8,e2e7,c6e7,e1c1,e7g6,f1d3,f5d7,f4g6,h7g6,c3e4,f6e4,d3e4,g6g5,h2h3,c7c6,c2c4,d7e6,e4f3,d6d5,d2d3,f7f6,h1e1,e6f7,c4d5,f7d5,f3d5,d8d5,e1e8,d5d8,e8d8,c8d8,d1e1,f8c5,f2f3,h8e8,e1e4,d8d7,c1c2,c5d6,a2a4,a7a6,b2c3,b7b5,c3b2,e8e6,b2c3,e6e8,c3b2,e8e6,b2c3,e6e8,c3b2,e8e6",
      "Sinquefield(g41): PCN move history"
    )
    let fens40 = [
      "rnbqkbnr/pppppppp/8/8/4P3/8/PPPP1PPP/RNBQKBNR b KQkq - 0 1",
      "rnbqkbnr/pppp1ppp/8/4p3/4P3/8/PPPP1PPP/RNBQKBNR w KQkq - 0 2",
      "rnbqkbnr/pppp1ppp/8/4p3/4P3/5N2/PPPP1PPP/RNBQKB1R b KQkq - 1 2",
      "rnbqkb1r/pppp1ppp/5n2/4p3/4P3/5N2/PPPP1PPP/RNBQKB1R w KQkq - 2 3",
      "rnbqkb1r/pppp1ppp/5n2/4N3/4P3/8/PPPP1PPP/RNBQKB1R b KQkq - 0 3",
      "rnbqkb1r/ppp2ppp/3p1n2/4N3/4P3/8/PPPP1PPP/RNBQKB1R w KQkq - 0 4",
      "rnbqkb1r/ppp2ppp/3p1n2/8/4P3/3N4/PPPP1PPP/RNBQKB1R b KQkq - 1 4",
      "rnbqkb1r/ppp2ppp/3p4/8/4n3/3N4/PPPP1PPP/RNBQKB1R w KQkq - 0 5",
      "rnbqkb1r/ppp2ppp/3p4/8/4n3/3N4/PPPPQPPP/RNB1KB1R b KQkq - 1 5",
      "rnb1kb1r/ppp1qppp/3p4/8/4n3/3N4/PPPPQPPP/RNB1KB1R w KQkq - 2 6",
      "rnb1kb1r/ppp1qppp/3p4/8/4n3/2NN4/PPPPQPPP/R1B1KB1R b KQkq - 3 6",
      "rnb1kb1r/ppp1qppp/3p1n2/8/8/2NN4/PPPPQPPP/R1B1KB1R w KQkq - 4 7",
      "rnb1kb1r/ppp1qppp/3p1n2/8/8/1PNN4/P1PPQPPP/R1B1KB1R b KQkq - 0 7",
      "r1b1kb1r/ppp1qppp/2np1n2/8/8/1PNN4/P1PPQPPP/R1B1KB1R w KQkq - 1 8",
      "r1b1kb1r/ppp1qppp/2np1n2/8/8/1PNN4/PBPPQPPP/R3KB1R b KQkq - 2 8",
      "r3kb1r/ppp1qppp/2np1n2/5b2/8/1PNN4/PBPPQPPP/R3KB1R w KQkq - 3 9",
      "r3kb1r/ppp1qppp/2np1n2/5b2/5N2/1PN5/PBPPQPPP/R3KB1R b KQkq - 4 9",
      "2kr1b1r/ppp1qppp/2np1n2/5b2/5N2/1PN5/PBPPQPPP/R3KB1R w KQ - 5 10",
      "2kr1b1r/ppp1Qppp/2np1n2/5b2/5N2/1PN5/PBPP1PPP/R3KB1R b KQ - 0 10",
      "2kr1b1r/ppp1nppp/3p1n2/5b2/5N2/1PN5/PBPP1PPP/R3KB1R w KQ - 0 11",
      "2kr1b1r/ppp1nppp/3p1n2/5b2/5N2/1PN5/PBPP1PPP/2KR1B1R b - - 1 11",
      "2kr1b1r/ppp2ppp/3p1nn1/5b2/5N2/1PN5/PBPP1PPP/2KR1B1R w - - 2 12",
      "2kr1b1r/ppp2ppp/3p1nn1/5b2/5N2/1PNB4/PBPP1PPP/2KR3R b - - 3 12",
      "2kr1b1r/pppb1ppp/3p1nn1/8/5N2/1PNB4/PBPP1PPP/2KR3R w - - 4 13",
      "2kr1b1r/pppb1ppp/3p1nN1/8/8/1PNB4/PBPP1PPP/2KR3R b - - 0 13",
      "2kr1b1r/pppb1pp1/3p1np1/8/8/1PNB4/PBPP1PPP/2KR3R w - - 0 14",
      "2kr1b1r/pppb1pp1/3p1np1/8/4N3/1P1B4/PBPP1PPP/2KR3R b - - 1 14",
      "2kr1b1r/pppb1pp1/3p2p1/8/4n3/1P1B4/PBPP1PPP/2KR3R w - - 0 15",
      "2kr1b1r/pppb1pp1/3p2p1/8/4B3/1P6/PBPP1PPP/2KR3R b - - 0 15",
      "2kr1b1r/pppb1pp1/3p4/6p1/4B3/1P6/PBPP1PPP/2KR3R w - - 0 16",
      "2kr1b1r/pppb1pp1/3p4/6p1/4B3/1P5P/PBPP1PP1/2KR3R b - - 0 16",
      "2kr1b1r/pp1b1pp1/2pp4/6p1/4B3/1P5P/PBPP1PP1/2KR3R w - - 0 17",
      "2kr1b1r/pp1b1pp1/2pp4/6p1/2P1B3/1P5P/PB1P1PP1/2KR3R b - - 0 17",
      "2kr1b1r/pp3pp1/2ppb3/6p1/2P1B3/1P5P/PB1P1PP1/2KR3R w - - 1 18",
      "2kr1b1r/pp3pp1/2ppb3/6p1/2P5/1P3B1P/PB1P1PP1/2KR3R b - - 2 18",
      "2kr1b1r/pp3pp1/2p1b3/3p2p1/2P5/1P3B1P/PB1P1PP1/2KR3R w - - 0 19",
      "2kr1b1r/pp3pp1/2p1b3/3p2p1/2P5/1P1P1B1P/PB3PP1/2KR3R b - - 0 19",
      "2kr1b1r/pp4p1/2p1bp2/3p2p1/2P5/1P1P1B1P/PB3PP1/2KR3R w - - 0 20",
      "2kr1b1r/pp4p1/2p1bp2/3p2p1/2P5/1P1P1B1P/PB3PP1/2KRR3 b - - 1 20",
      "2kr1b1r/pp3bp1/2p2p2/3p2p1/2P5/1P1P1B1P/PB3PP1/2KRR3 w - - 2 21",
      "2kr1b1r/pp3bp1/2p2p2/3P2p1/8/1P1P1B1P/PB3PP1/2KRR3 b - - 0 21",
      "2kr1b1r/pp4p1/2p2p2/3b2p1/8/1P1P1B1P/PB3PP1/2KRR3 w - - 0 22",
      "2kr1b1r/pp4p1/2p2p2/3B2p1/8/1P1P3P/PB3PP1/2KRR3 b - - 0 22",
      "2k2b1r/pp4p1/2p2p2/3r2p1/8/1P1P3P/PB3PP1/2KRR3 w - - 0 23",
      "2k1Rb1r/pp4p1/2p2p2/3r2p1/8/1P1P3P/PB3PP1/2KR4 b - - 1 23",
      "2krRb1r/pp4p1/2p2p2/6p1/8/1P1P3P/PB3PP1/2KR4 w - - 2 24",
      "2kR1b1r/pp4p1/2p2p2/6p1/8/1P1P3P/PB3PP1/2KR4 b - - 0 24",
      "3k1b1r/pp4p1/2p2p2/6p1/8/1P1P3P/PB3PP1/2KR4 w - - 0 25",
      "3k1b1r/pp4p1/2p2p2/6p1/8/1P1P3P/PB3PP1/2K1R3 b - - 1 25",
      "3k3r/pp4p1/2p2p2/2b3p1/8/1P1P3P/PB3PP1/2K1R3 w - - 2 26",
      "3k3r/pp4p1/2p2p2/2b3p1/8/1P1P1P1P/PB4P1/2K1R3 b - - 0 26",
      "3kr3/pp4p1/2p2p2/2b3p1/8/1P1P1P1P/PB4P1/2K1R3 w - - 1 27",
      "3kr3/pp4p1/2p2p2/2b3p1/4R3/1P1P1P1P/PB4P1/2K5 b - - 2 27",
      "4r3/pp1k2p1/2p2p2/2b3p1/4R3/1P1P1P1P/PB4P1/2K5 w - - 3 28",
      "4r3/pp1k2p1/2p2p2/2b3p1/4R3/1P1P1P1P/PBK3P1/8 b - - 4 28",
      "4r3/pp1k2p1/2pb1p2/6p1/4R3/1P1P1P1P/PBK3P1/8 w - - 5 29",
      "4r3/pp1k2p1/2pb1p2/6p1/P3R3/1P1P1P1P/1BK3P1/8 b - - 0 29",
      "4r3/1p1k2p1/p1pb1p2/6p1/P3R3/1P1P1P1P/1BK3P1/8 w - - 0 30",
      "4r3/1p1k2p1/p1pb1p2/6p1/P3R3/1PBP1P1P/2K3P1/8 b - - 1 30",
      "4r3/3k2p1/p1pb1p2/1p4p1/P3R3/1PBP1P1P/2K3P1/8 w - - 0 31",
      "4r3/3k2p1/p1pb1p2/1p4p1/P3R3/1P1P1P1P/1BK3P1/8 b - - 1 31",
      "8/3k2p1/p1pbrp2/1p4p1/P3R3/1P1P1P1P/1BK3P1/8 w - - 2 32",
      "8/3k2p1/p1pbrp2/1p4p1/P3R3/1PBP1P1P/2K3P1/8 b - - 3 32",
      "4r3/3k2p1/p1pb1p2/1p4p1/P3R3/1PBP1P1P/2K3P1/8 w - - 4 33",
      "4r3/3k2p1/p1pb1p2/1p4p1/P3R3/1P1P1P1P/1BK3P1/8 b - - 5 33",
      "8/3k2p1/p1pbrp2/1p4p1/P3R3/1P1P1P1P/1BK3P1/8 w - - 6 34",
      "8/3k2p1/p1pbrp2/1p4p1/P3R3/1PBP1P1P/2K3P1/8 b - - 7 34",
      "4r3/3k2p1/p1pb1p2/1p4p1/P3R3/1PBP1P1P/2K3P1/8 w - - 8 35",
      "4r3/3k2p1/p1pb1p2/1p4p1/P3R3/1P1P1P1P/1BK3P1/8 b - - 9 35",
      "8/3k2p1/p1pbrp2/1p4p1/P3R3/1P1P1P1P/1BK3P1/8 w - - 10 36",
    ]
    for (index, history) in chess.getMoveHistory().enumerated() {
      XCTAssertEqual(history.fen, fens40[index], "Sinquefield(g41): FEN move (index)")
    }

    pgn = pgns.removeFirst()
    chess = try pgn.validate()
    XCTAssertEqual(chess.getTag("Event")?.value, "Sinquefield Cup", "Sinquefield(g42): event")
    XCTAssertEqual(chess.getTag("White")?.value, "Carlsen, Magnus", "Sinquefield(g42): white")
    XCTAssertEqual(chess.getTag("Black")?.value, "Nakamura, Hikaru", "Sinquefield(g42): black")
    XCTAssertEqual(chess.getMoveCount(), 97, "Sinquefield(g42): move count")
    XCTAssertEqual(
      chess.getMoveHistory().map { $0.pcn }.joined(separator: ","),
      "g1f3,g8f6,d2d4,e7e6,c2c4,d7d5,b1c3,f8e7,c1f4,e8g8,e2e3,b7b6,f1d3,d5c4,d3c4,c8a6,d1e2,a6c4,e2c4,c7c5,d4c5,b6c5,e1g1,b8c6,a1c1,a8c8,f3e5,d8b6,e5c6,c8c6,b2b3,h7h6,f1d1,b6b7,h2h3,f8c8,c3a4,f6d7,d1d2,d7b6,a4b6,c6b6,c1d1,e7f6,d2d7,b7a6,c4e4,e6e5,f4h6,c8e8,e4g4,a6a2,e3e4,a2b3,h6e3,b6b7,d7d6,f6e7,d6d5,e7f8,e3c5,f8c5,d5c5,b3e6,g4e2,b7d7,d1d7,e6d7,c5d5,d7c7,e2d2,e8a8,d5d7,c7c4,f2f3,c4c5,g1h2,c5c6,d7d6,c6c5,d6a6,c5e7,d2e3,g8h7,h2g3,e7b7,e3a3,f7f6,g3h2,b7c7,a3a1,c7b7,a1a5,b7d7,a5a2,d7e7,a2f2,e7b7,f2a2,b7e7,a2d5,a8b8,d5a5,b8b7,a5e1,e7d7,e1h4,h7g8,h4f2,d7f7,f2a2,f7a2,a6a2,g8h7,a2a6,h7g6,h3h4,g6h5,h2h3,b7f7,g2g4,h5h6,h3g3,g7g5,h4h5,h6g7,g3f2,f7b7,a6a3,g7h6,f2e3,a7a5,a3a5,b7b3,e3f2,b3b2,f2g3,h6g7,a5a7,g7g8,a7a1,g8g7,a1f1,b2a2,f1f2,a2a3,f2d2,a3a7,g3f2,g7f7,f2e2,a7b7,d2d3,b7a7,e2d2,f7e6,d2c3,e6e7,c3c4,a7c7,c4b5,c7c1,d3b3,e7f7,b5b6,c1c2,b6b7,c2c1,b7b8,f7g8,b3b6,g8g7,b6b7,g7g8,b7c7,c1b1,b8c8,b1b3,c8d7,b3f3,d7e6,f3f4,h5h6,g8h8,c7b7,h8g8,b7g7,g8h8,e6f7,f4e4,f7g6,e4a4,g7h7",
      "Sinquefield(g42): PCN move history"
    )
    let fens41 = [
      "rnbqkbnr/pppppppp/8/8/8/5N2/PPPPPPPP/RNBQKB1R b KQkq - 1 1",
      "rnbqkb1r/pppppppp/5n2/8/8/5N2/PPPPPPPP/RNBQKB1R w KQkq - 2 2",
      "rnbqkb1r/pppppppp/5n2/8/3P4/5N2/PPP1PPPP/RNBQKB1R b KQkq - 0 2",
      "rnbqkb1r/pppp1ppp/4pn2/8/3P4/5N2/PPP1PPPP/RNBQKB1R w KQkq - 0 3",
      "rnbqkb1r/pppp1ppp/4pn2/8/2PP4/5N2/PP2PPPP/RNBQKB1R b KQkq - 0 3",
      "rnbqkb1r/ppp2ppp/4pn2/3p4/2PP4/5N2/PP2PPPP/RNBQKB1R w KQkq - 0 4",
      "rnbqkb1r/ppp2ppp/4pn2/3p4/2PP4/2N2N2/PP2PPPP/R1BQKB1R b KQkq - 1 4",
      "rnbqk2r/ppp1bppp/4pn2/3p4/2PP4/2N2N2/PP2PPPP/R1BQKB1R w KQkq - 2 5",
      "rnbqk2r/ppp1bppp/4pn2/3p4/2PP1B2/2N2N2/PP2PPPP/R2QKB1R b KQkq - 3 5",
      "rnbq1rk1/ppp1bppp/4pn2/3p4/2PP1B2/2N2N2/PP2PPPP/R2QKB1R w KQ - 4 6",
      "rnbq1rk1/ppp1bppp/4pn2/3p4/2PP1B2/2N1PN2/PP3PPP/R2QKB1R b KQ - 0 6",
      "rnbq1rk1/p1p1bppp/1p2pn2/3p4/2PP1B2/2N1PN2/PP3PPP/R2QKB1R w KQ - 0 7",
      "rnbq1rk1/p1p1bppp/1p2pn2/3p4/2PP1B2/2NBPN2/PP3PPP/R2QK2R b KQ - 1 7",
      "rnbq1rk1/p1p1bppp/1p2pn2/8/2pP1B2/2NBPN2/PP3PPP/R2QK2R w KQ - 0 8",
      "rnbq1rk1/p1p1bppp/1p2pn2/8/2BP1B2/2N1PN2/PP3PPP/R2QK2R b KQ - 0 8",
      "rn1q1rk1/p1p1bppp/bp2pn2/8/2BP1B2/2N1PN2/PP3PPP/R2QK2R w KQ - 1 9",
      "rn1q1rk1/p1p1bppp/bp2pn2/8/2BP1B2/2N1PN2/PP2QPPP/R3K2R b KQ - 2 9",
      "rn1q1rk1/p1p1bppp/1p2pn2/8/2bP1B2/2N1PN2/PP2QPPP/R3K2R w KQ - 0 10",
      "rn1q1rk1/p1p1bppp/1p2pn2/8/2QP1B2/2N1PN2/PP3PPP/R3K2R b KQ - 0 10",
      "rn1q1rk1/p3bppp/1p2pn2/2p5/2QP1B2/2N1PN2/PP3PPP/R3K2R w KQ - 0 11",
      "rn1q1rk1/p3bppp/1p2pn2/2P5/2Q2B2/2N1PN2/PP3PPP/R3K2R b KQ - 0 11",
      "rn1q1rk1/p3bppp/4pn2/2p5/2Q2B2/2N1PN2/PP3PPP/R3K2R w KQ - 0 12",
      "rn1q1rk1/p3bppp/4pn2/2p5/2Q2B2/2N1PN2/PP3PPP/R4RK1 b - - 1 12",
      "r2q1rk1/p3bppp/2n1pn2/2p5/2Q2B2/2N1PN2/PP3PPP/R4RK1 w - - 2 13",
      "r2q1rk1/p3bppp/2n1pn2/2p5/2Q2B2/2N1PN2/PP3PPP/2R2RK1 b - - 3 13",
      "2rq1rk1/p3bppp/2n1pn2/2p5/2Q2B2/2N1PN2/PP3PPP/2R2RK1 w - - 4 14",
      "2rq1rk1/p3bppp/2n1pn2/2p1N3/2Q2B2/2N1P3/PP3PPP/2R2RK1 b - - 5 14",
      "2r2rk1/p3bppp/1qn1pn2/2p1N3/2Q2B2/2N1P3/PP3PPP/2R2RK1 w - - 6 15",
      "2r2rk1/p3bppp/1qN1pn2/2p5/2Q2B2/2N1P3/PP3PPP/2R2RK1 b - - 0 15",
      "5rk1/p3bppp/1qr1pn2/2p5/2Q2B2/2N1P3/PP3PPP/2R2RK1 w - - 0 16",
      "5rk1/p3bppp/1qr1pn2/2p5/2Q2B2/1PN1P3/P4PPP/2R2RK1 b - - 0 16",
      "5rk1/p3bpp1/1qr1pn1p/2p5/2Q2B2/1PN1P3/P4PPP/2R2RK1 w - - 0 17",
      "5rk1/p3bpp1/1qr1pn1p/2p5/2Q2B2/1PN1P3/P4PPP/2RR2K1 b - - 1 17",
      "5rk1/pq2bpp1/2r1pn1p/2p5/2Q2B2/1PN1P3/P4PPP/2RR2K1 w - - 2 18",
      "5rk1/pq2bpp1/2r1pn1p/2p5/2Q2B2/1PN1P2P/P4PP1/2RR2K1 b - - 0 18",
      "2r3k1/pq2bpp1/2r1pn1p/2p5/2Q2B2/1PN1P2P/P4PP1/2RR2K1 w - - 1 19",
      "2r3k1/pq2bpp1/2r1pn1p/2p5/N1Q2B2/1P2P2P/P4PP1/2RR2K1 b - - 2 19",
      "2r3k1/pq1nbpp1/2r1p2p/2p5/N1Q2B2/1P2P2P/P4PP1/2RR2K1 w - - 3 20",
      "2r3k1/pq1nbpp1/2r1p2p/2p5/N1Q2B2/1P2P2P/P2R1PP1/2R3K1 b - - 4 20",
      "2r3k1/pq2bpp1/1nr1p2p/2p5/N1Q2B2/1P2P2P/P2R1PP1/2R3K1 w - - 5 21",
      "2r3k1/pq2bpp1/1Nr1p2p/2p5/2Q2B2/1P2P2P/P2R1PP1/2R3K1 b - - 0 21",
      "2r3k1/pq2bpp1/1r2p2p/2p5/2Q2B2/1P2P2P/P2R1PP1/2R3K1 w - - 0 22",
      "2r3k1/pq2bpp1/1r2p2p/2p5/2Q2B2/1P2P2P/P2R1PP1/3R2K1 b - - 1 22",
      "2r3k1/pq3pp1/1r2pb1p/2p5/2Q2B2/1P2P2P/P2R1PP1/3R2K1 w - - 2 23",
      "2r3k1/pq1R1pp1/1r2pb1p/2p5/2Q2B2/1P2P2P/P4PP1/3R2K1 b - - 3 23",
      "2r3k1/p2R1pp1/qr2pb1p/2p5/2Q2B2/1P2P2P/P4PP1/3R2K1 w - - 4 24",
      "2r3k1/p2R1pp1/qr2pb1p/2p5/4QB2/1P2P2P/P4PP1/3R2K1 b - - 5 24",
      "2r3k1/p2R1pp1/qr3b1p/2p1p3/4QB2/1P2P2P/P4PP1/3R2K1 w - - 0 25",
      "2r3k1/p2R1pp1/qr3b1B/2p1p3/4Q3/1P2P2P/P4PP1/3R2K1 b - - 0 25",
      "4r1k1/p2R1pp1/qr3b1B/2p1p3/4Q3/1P2P2P/P4PP1/3R2K1 w - - 1 26",
      "4r1k1/p2R1pp1/qr3b1B/2p1p3/6Q1/1P2P2P/P4PP1/3R2K1 b - - 2 26",
      "4r1k1/p2R1pp1/1r3b1B/2p1p3/6Q1/1P2P2P/q4PP1/3R2K1 w - - 0 27",
      "4r1k1/p2R1pp1/1r3b1B/2p1p3/4P1Q1/1P5P/q4PP1/3R2K1 b - - 0 27",
      "4r1k1/p2R1pp1/1r3b1B/2p1p3/4P1Q1/1q5P/5PP1/3R2K1 w - - 0 28",
      "4r1k1/p2R1pp1/1r3b2/2p1p3/4P1Q1/1q2B2P/5PP1/3R2K1 b - - 1 28",
      "4r1k1/pr1R1pp1/5b2/2p1p3/4P1Q1/1q2B2P/5PP1/3R2K1 w - - 2 29",
      "4r1k1/pr3pp1/3R1b2/2p1p3/4P1Q1/1q2B2P/5PP1/3R2K1 b - - 3 29",
      "4r1k1/pr2bpp1/3R4/2p1p3/4P1Q1/1q2B2P/5PP1/3R2K1 w - - 4 30",
      "4r1k1/pr2bpp1/8/2pRp3/4P1Q1/1q2B2P/5PP1/3R2K1 b - - 5 30",
      "4rbk1/pr3pp1/8/2pRp3/4P1Q1/1q2B2P/5PP1/3R2K1 w - - 6 31",
      "4rbk1/pr3pp1/8/2BRp3/4P1Q1/1q5P/5PP1/3R2K1 b - - 0 31",
      "4r1k1/pr3pp1/8/2bRp3/4P1Q1/1q5P/5PP1/3R2K1 w - - 0 32",
      "4r1k1/pr3pp1/8/2R1p3/4P1Q1/1q5P/5PP1/3R2K1 b - - 0 32",
      "4r1k1/pr3pp1/4q3/2R1p3/4P1Q1/7P/5PP1/3R2K1 w - - 1 33",
      "4r1k1/pr3pp1/4q3/2R1p3/4P3/7P/4QPP1/3R2K1 b - - 2 33",
      "4r1k1/p2r1pp1/4q3/2R1p3/4P3/7P/4QPP1/3R2K1 w - - 3 34",
      "4r1k1/p2R1pp1/4q3/2R1p3/4P3/7P/4QPP1/6K1 b - - 0 34",
      "4r1k1/p2q1pp1/8/2R1p3/4P3/7P/4QPP1/6K1 w - - 0 35",
      "4r1k1/p2q1pp1/8/3Rp3/4P3/7P/4QPP1/6K1 b - - 1 35",
      "4r1k1/p1q2pp1/8/3Rp3/4P3/7P/4QPP1/6K1 w - - 2 36",
      "4r1k1/p1q2pp1/8/3Rp3/4P3/7P/3Q1PP1/6K1 b - - 3 36",
      "r5k1/p1q2pp1/8/3Rp3/4P3/7P/3Q1PP1/6K1 w - - 4 37",
      "r5k1/p1qR1pp1/8/4p3/4P3/7P/3Q1PP1/6K1 b - - 5 37",
      "r5k1/p2R1pp1/8/4p3/2q1P3/7P/3Q1PP1/6K1 w - - 6 38",
      "r5k1/p2R1pp1/8/4p3/2q1P3/5P1P/3Q2P1/6K1 b - - 0 38",
      "r5k1/p2R1pp1/8/2q1p3/4P3/5P1P/3Q2P1/6K1 w - - 1 39",
      "r5k1/p2R1pp1/8/2q1p3/4P3/5P1P/3Q2PK/8 b - - 2 39",
      "r5k1/p2R1pp1/2q5/4p3/4P3/5P1P/3Q2PK/8 w - - 3 40",
      "r5k1/p4pp1/2qR4/4p3/4P3/5P1P/3Q2PK/8 b - - 4 40",
      "r5k1/p4pp1/3R4/2q1p3/4P3/5P1P/3Q2PK/8 w - - 5 41",
      "r5k1/p4pp1/R7/2q1p3/4P3/5P1P/3Q2PK/8 b - - 6 41",
      "r5k1/p3qpp1/R7/4p3/4P3/5P1P/3Q2PK/8 w - - 7 42",
      "r5k1/p3qpp1/R7/4p3/4P3/4QP1P/6PK/8 b - - 8 42",
      "r7/p3qppk/R7/4p3/4P3/4QP1P/6PK/8 w - - 9 43",
      "r7/p3qppk/R7/4p3/4P3/4QPKP/6P1/8 b - - 10 43",
      "r7/pq3ppk/R7/4p3/4P3/4QPKP/6P1/8 w - - 11 44",
      "r7/pq3ppk/R7/4p3/4P3/Q4PKP/6P1/8 b - - 12 44",
      "r7/pq4pk/R4p2/4p3/4P3/Q4PKP/6P1/8 w - - 0 45",
      "r7/pq4pk/R4p2/4p3/4P3/Q4P1P/6PK/8 b - - 1 45",
      "r7/p1q3pk/R4p2/4p3/4P3/Q4P1P/6PK/8 w - - 2 46",
      "r7/p1q3pk/R4p2/4p3/4P3/5P1P/6PK/Q7 b - - 3 46",
      "r7/pq4pk/R4p2/4p3/4P3/5P1P/6PK/Q7 w - - 4 47",
      "r7/pq4pk/R4p2/Q3p3/4P3/5P1P/6PK/8 b - - 5 47",
      "r7/p2q2pk/R4p2/Q3p3/4P3/5P1P/6PK/8 w - - 6 48",
      "r7/p2q2pk/R4p2/4p3/4P3/5P1P/Q5PK/8 b - - 7 48",
      "r7/p3q1pk/R4p2/4p3/4P3/5P1P/Q5PK/8 w - - 8 49",
      "r7/p3q1pk/R4p2/4p3/4P3/5P1P/5QPK/8 b - - 9 49",
      "r7/pq4pk/R4p2/4p3/4P3/5P1P/5QPK/8 w - - 10 50",
      "r7/pq4pk/R4p2/4p3/4P3/5P1P/Q5PK/8 b - - 11 50",
      "r7/p3q1pk/R4p2/4p3/4P3/5P1P/Q5PK/8 w - - 12 51",
      "r7/p3q1pk/R4p2/3Qp3/4P3/5P1P/6PK/8 b - - 13 51",
      "1r6/p3q1pk/R4p2/3Qp3/4P3/5P1P/6PK/8 w - - 14 52",
      "1r6/p3q1pk/R4p2/Q3p3/4P3/5P1P/6PK/8 b - - 15 52",
      "8/pr2q1pk/R4p2/Q3p3/4P3/5P1P/6PK/8 w - - 16 53",
      "8/pr2q1pk/R4p2/4p3/4P3/5P1P/6PK/4Q3 b - - 17 53",
      "8/pr1q2pk/R4p2/4p3/4P3/5P1P/6PK/4Q3 w - - 18 54",
      "8/pr1q2pk/R4p2/4p3/4P2Q/5P1P/6PK/8 b - - 19 54",
      "6k1/pr1q2p1/R4p2/4p3/4P2Q/5P1P/6PK/8 w - - 20 55",
      "6k1/pr1q2p1/R4p2/4p3/4P3/5P1P/5QPK/8 b - - 21 55",
      "6k1/pr3qp1/R4p2/4p3/4P3/5P1P/5QPK/8 w - - 22 56",
      "6k1/pr3qp1/R4p2/4p3/4P3/5P1P/Q5PK/8 b - - 23 56",
      "6k1/pr4p1/R4p2/4p3/4P3/5P1P/q5PK/8 w - - 0 57",
      "6k1/pr4p1/5p2/4p3/4P3/5P1P/R5PK/8 b - - 0 57",
      "8/pr4pk/5p2/4p3/4P3/5P1P/R5PK/8 w - - 1 58",
      "8/pr4pk/R4p2/4p3/4P3/5P1P/6PK/8 b - - 2 58",
      "8/pr4p1/R4pk1/4p3/4P3/5P1P/6PK/8 w - - 3 59",
      "8/pr4p1/R4pk1/4p3/4P2P/5P2/6PK/8 b - - 0 59",
      "8/pr4p1/R4p2/4p2k/4P2P/5P2/6PK/8 w - - 1 60",
      "8/pr4p1/R4p2/4p2k/4P2P/5P1K/6P1/8 b - - 2 60",
      "8/p4rp1/R4p2/4p2k/4P2P/5P1K/6P1/8 w - - 3 61",
      "8/p4rp1/R4p2/4p2k/4P1PP/5P1K/8/8 b - - 0 61",
      "8/p4rp1/R4p1k/4p3/4P1PP/5P1K/8/8 w - - 1 62",
      "8/p4rp1/R4p1k/4p3/4P1PP/5PK1/8/8 b - - 2 62",
      "8/p4r2/R4p1k/4p1p1/4P1PP/5PK1/8/8 w - - 0 63",
      "8/p4r2/R4p1k/4p1pP/4P1P1/5PK1/8/8 b - - 0 63",
      "8/p4rk1/R4p2/4p1pP/4P1P1/5PK1/8/8 w - - 1 64",
      "8/p4rk1/R4p2/4p1pP/4P1P1/5P2/5K2/8 b - - 2 64",
      "8/pr4k1/R4p2/4p1pP/4P1P1/5P2/5K2/8 w - - 3 65",
      "8/pr4k1/5p2/4p1pP/4P1P1/R4P2/5K2/8 b - - 4 65",
      "8/pr6/5p1k/4p1pP/4P1P1/R4P2/5K2/8 w - - 5 66",
      "8/pr6/5p1k/4p1pP/4P1P1/R3KP2/8/8 b - - 6 66",
      "8/1r6/5p1k/p3p1pP/4P1P1/R3KP2/8/8 w - - 0 67",
      "8/1r6/5p1k/R3p1pP/4P1P1/4KP2/8/8 b - - 0 67",
      "8/8/5p1k/R3p1pP/4P1P1/1r2KP2/8/8 w - - 1 68",
      "8/8/5p1k/R3p1pP/4P1P1/1r3P2/5K2/8 b - - 2 68",
      "8/8/5p1k/R3p1pP/4P1P1/5P2/1r3K2/8 w - - 3 69",
      "8/8/5p1k/R3p1pP/4P1P1/5PK1/1r6/8 b - - 4 69",
      "8/6k1/5p2/R3p1pP/4P1P1/5PK1/1r6/8 w - - 5 70",
      "8/R5k1/5p2/4p1pP/4P1P1/5PK1/1r6/8 b - - 6 70",
      "6k1/R7/5p2/4p1pP/4P1P1/5PK1/1r6/8 w - - 7 71",
      "6k1/8/5p2/4p1pP/4P1P1/5PK1/1r6/R7 b - - 8 71",
      "8/6k1/5p2/4p1pP/4P1P1/5PK1/1r6/R7 w - - 9 72",
      "8/6k1/5p2/4p1pP/4P1P1/5PK1/1r6/5R2 b - - 10 72",
      "8/6k1/5p2/4p1pP/4P1P1/5PK1/r7/5R2 w - - 11 73",
      "8/6k1/5p2/4p1pP/4P1P1/5PK1/r4R2/8 b - - 12 73",
      "8/6k1/5p2/4p1pP/4P1P1/r4PK1/5R2/8 w - - 13 74",
      "8/6k1/5p2/4p1pP/4P1P1/r4PK1/3R4/8 b - - 14 74",
      "8/r5k1/5p2/4p1pP/4P1P1/5PK1/3R4/8 w - - 15 75",
      "8/r5k1/5p2/4p1pP/4P1P1/5P2/3R1K2/8 b - - 16 75",
      "8/r4k2/5p2/4p1pP/4P1P1/5P2/3R1K2/8 w - - 17 76",
      "8/r4k2/5p2/4p1pP/4P1P1/5P2/3RK3/8 b - - 18 76",
      "8/1r3k2/5p2/4p1pP/4P1P1/5P2/3RK3/8 w - - 19 77",
      "8/1r3k2/5p2/4p1pP/4P1P1/3R1P2/4K3/8 b - - 20 77",
      "8/r4k2/5p2/4p1pP/4P1P1/3R1P2/4K3/8 w - - 21 78",
      "8/r4k2/5p2/4p1pP/4P1P1/3R1P2/3K4/8 b - - 22 78",
      "8/r7/4kp2/4p1pP/4P1P1/3R1P2/3K4/8 w - - 23 79",
      "8/r7/4kp2/4p1pP/4P1P1/2KR1P2/8/8 b - - 24 79",
      "8/r3k3/5p2/4p1pP/4P1P1/2KR1P2/8/8 w - - 25 80",
      "8/r3k3/5p2/4p1pP/2K1P1P1/3R1P2/8/8 b - - 26 80",
      "8/2r1k3/5p2/4p1pP/2K1P1P1/3R1P2/8/8 w - - 27 81",
      "8/2r1k3/5p2/1K2p1pP/4P1P1/3R1P2/8/8 b - - 28 81",
      "8/4k3/5p2/1K2p1pP/4P1P1/3R1P2/8/2r5 w - - 29 82",
      "8/4k3/5p2/1K2p1pP/4P1P1/1R3P2/8/2r5 b - - 30 82",
      "8/5k2/5p2/1K2p1pP/4P1P1/1R3P2/8/2r5 w - - 31 83",
      "8/5k2/1K3p2/4p1pP/4P1P1/1R3P2/8/2r5 b - - 32 83",
      "8/5k2/1K3p2/4p1pP/4P1P1/1R3P2/2r5/8 w - - 33 84",
      "8/1K3k2/5p2/4p1pP/4P1P1/1R3P2/2r5/8 b - - 34 84",
      "8/1K3k2/5p2/4p1pP/4P1P1/1R3P2/8/2r5 w - - 35 85",
      "1K6/5k2/5p2/4p1pP/4P1P1/1R3P2/8/2r5 b - - 36 85",
      "1K4k1/8/5p2/4p1pP/4P1P1/1R3P2/8/2r5 w - - 37 86",
      "1K4k1/8/1R3p2/4p1pP/4P1P1/5P2/8/2r5 b - - 38 86",
      "1K6/6k1/1R3p2/4p1pP/4P1P1/5P2/8/2r5 w - - 39 87",
      "1K6/1R4k1/5p2/4p1pP/4P1P1/5P2/8/2r5 b - - 40 87",
      "1K4k1/1R6/5p2/4p1pP/4P1P1/5P2/8/2r5 w - - 41 88",
      "1K4k1/2R5/5p2/4p1pP/4P1P1/5P2/8/2r5 b - - 42 88",
      "1K4k1/2R5/5p2/4p1pP/4P1P1/5P2/8/1r6 w - - 43 89",
      "2K3k1/2R5/5p2/4p1pP/4P1P1/5P2/8/1r6 b - - 44 89",
      "2K3k1/2R5/5p2/4p1pP/4P1P1/1r3P2/8/8 w - - 45 90",
      "6k1/2RK4/5p2/4p1pP/4P1P1/1r3P2/8/8 b - - 46 90",
      "6k1/2RK4/5p2/4p1pP/4P1P1/5r2/8/8 w - - 0 91",
      "6k1/2R5/4Kp2/4p1pP/4P1P1/5r2/8/8 b - - 1 91",
      "6k1/2R5/4Kp2/4p1pP/4PrP1/8/8/8 w - - 2 92",
      "6k1/2R5/4Kp1P/4p1p1/4PrP1/8/8/8 b - - 0 92",
      "7k/2R5/4Kp1P/4p1p1/4PrP1/8/8/8 w - - 1 93",
      "7k/1R6/4Kp1P/4p1p1/4PrP1/8/8/8 b - - 2 93",
      "6k1/1R6/4Kp1P/4p1p1/4PrP1/8/8/8 w - - 3 94",
      "6k1/6R1/4Kp1P/4p1p1/4PrP1/8/8/8 b - - 4 94",
      "7k/6R1/4Kp1P/4p1p1/4PrP1/8/8/8 w - - 5 95",
      "7k/5KR1/5p1P/4p1p1/4PrP1/8/8/8 b - - 6 95",
      "7k/5KR1/5p1P/4p1p1/4r1P1/8/8/8 w - - 0 96",
      "7k/6R1/5pKP/4p1p1/4r1P1/8/8/8 b - - 1 96",
      "7k/6R1/5pKP/4p1p1/r5P1/8/8/8 w - - 2 97",
      "7k/7R/5pKP/4p1p1/r5P1/8/8/8 b - - 3 97",
    ]
    for (index, history) in chess.getMoveHistory().enumerated() {
      XCTAssertEqual(history.fen, fens41[index], "Sinquefield(g42): FEN move (index)")
    }

    pgn = pgns.removeFirst()
    chess = try pgn.validate()
    XCTAssertEqual(chess.getTag("Event")?.value, "Sinquefield Cup", "Sinquefield(g43): event")
    XCTAssertEqual(chess.getTag("White")?.value, "Aronian, Levon", "Sinquefield(g43): white")
    XCTAssertEqual(chess.getTag("Black")?.value, "Grischuk, Alexander", "Sinquefield(g43): black")
    XCTAssertEqual(chess.getMoveCount(), 34, "Sinquefield(g43): move count")
    XCTAssertEqual(
      chess.getMoveHistory().map { $0.pcn }.joined(separator: ","),
      "d2d4,g8f6,g1f3,d7d6,g2g3,b8d7,f1g2,e7e5,c2c4,c7c6,b1c3,e5e4,f3h4,d6d5,e1g1,f8b4,c4d5,c6d5,f2f3,b4c3,b2c3,e8g8,c1a3,f8e8,h4f5,d7b6,f5d6,b6c4,d6c4,d5c4,f3e4,f6e4,d1c2,d8d5,f1f7,g8f7,a1f1,c8f5,g3g4,g7g6,c2c1,f7g7,g4f5,g6f5,g2e4,f5e4,c1f4,h7h6,f4c7,g7h8,a3d6,e8g8,g1f2,g8g6,d6e5,h8g8,f2e3,a8d8,c7e7,b7b5,h2h4,a7a5,h4h5,g6g5,f1f6,g5e5,f6g6",
      "Sinquefield(g43): PCN move history"
    )
    let fens42 = [
      "rnbqkbnr/pppppppp/8/8/3P4/8/PPP1PPPP/RNBQKBNR b KQkq - 0 1",
      "rnbqkb1r/pppppppp/5n2/8/3P4/8/PPP1PPPP/RNBQKBNR w KQkq - 1 2",
      "rnbqkb1r/pppppppp/5n2/8/3P4/5N2/PPP1PPPP/RNBQKB1R b KQkq - 2 2",
      "rnbqkb1r/ppp1pppp/3p1n2/8/3P4/5N2/PPP1PPPP/RNBQKB1R w KQkq - 0 3",
      "rnbqkb1r/ppp1pppp/3p1n2/8/3P4/5NP1/PPP1PP1P/RNBQKB1R b KQkq - 0 3",
      "r1bqkb1r/pppnpppp/3p1n2/8/3P4/5NP1/PPP1PP1P/RNBQKB1R w KQkq - 1 4",
      "r1bqkb1r/pppnpppp/3p1n2/8/3P4/5NP1/PPP1PPBP/RNBQK2R b KQkq - 2 4",
      "r1bqkb1r/pppn1ppp/3p1n2/4p3/3P4/5NP1/PPP1PPBP/RNBQK2R w KQkq - 0 5",
      "r1bqkb1r/pppn1ppp/3p1n2/4p3/2PP4/5NP1/PP2PPBP/RNBQK2R b KQkq - 0 5",
      "r1bqkb1r/pp1n1ppp/2pp1n2/4p3/2PP4/5NP1/PP2PPBP/RNBQK2R w KQkq - 0 6",
      "r1bqkb1r/pp1n1ppp/2pp1n2/4p3/2PP4/2N2NP1/PP2PPBP/R1BQK2R b KQkq - 1 6",
      "r1bqkb1r/pp1n1ppp/2pp1n2/8/2PPp3/2N2NP1/PP2PPBP/R1BQK2R w KQkq - 0 7",
      "r1bqkb1r/pp1n1ppp/2pp1n2/8/2PPp2N/2N3P1/PP2PPBP/R1BQK2R b KQkq - 1 7",
      "r1bqkb1r/pp1n1ppp/2p2n2/3p4/2PPp2N/2N3P1/PP2PPBP/R1BQK2R w KQkq - 0 8",
      "r1bqkb1r/pp1n1ppp/2p2n2/3p4/2PPp2N/2N3P1/PP2PPBP/R1BQ1RK1 b kq - 1 8",
      "r1bqk2r/pp1n1ppp/2p2n2/3p4/1bPPp2N/2N3P1/PP2PPBP/R1BQ1RK1 w kq - 2 9",
      "r1bqk2r/pp1n1ppp/2p2n2/3P4/1b1Pp2N/2N3P1/PP2PPBP/R1BQ1RK1 b kq - 0 9",
      "r1bqk2r/pp1n1ppp/5n2/3p4/1b1Pp2N/2N3P1/PP2PPBP/R1BQ1RK1 w kq - 0 10",
      "r1bqk2r/pp1n1ppp/5n2/3p4/1b1Pp2N/2N2PP1/PP2P1BP/R1BQ1RK1 b kq - 0 10",
      "r1bqk2r/pp1n1ppp/5n2/3p4/3Pp2N/2b2PP1/PP2P1BP/R1BQ1RK1 w kq - 0 11",
      "r1bqk2r/pp1n1ppp/5n2/3p4/3Pp2N/2P2PP1/P3P1BP/R1BQ1RK1 b kq - 0 11",
      "r1bq1rk1/pp1n1ppp/5n2/3p4/3Pp2N/2P2PP1/P3P1BP/R1BQ1RK1 w - - 1 12",
      "r1bq1rk1/pp1n1ppp/5n2/3p4/3Pp2N/B1P2PP1/P3P1BP/R2Q1RK1 b - - 2 12",
      "r1bqr1k1/pp1n1ppp/5n2/3p4/3Pp2N/B1P2PP1/P3P1BP/R2Q1RK1 w - - 3 13",
      "r1bqr1k1/pp1n1ppp/5n2/3p1N2/3Pp3/B1P2PP1/P3P1BP/R2Q1RK1 b - - 4 13",
      "r1bqr1k1/pp3ppp/1n3n2/3p1N2/3Pp3/B1P2PP1/P3P1BP/R2Q1RK1 w - - 5 14",
      "r1bqr1k1/pp3ppp/1n1N1n2/3p4/3Pp3/B1P2PP1/P3P1BP/R2Q1RK1 b - - 6 14",
      "r1bqr1k1/pp3ppp/3N1n2/3p4/2nPp3/B1P2PP1/P3P1BP/R2Q1RK1 w - - 7 15",
      "r1bqr1k1/pp3ppp/5n2/3p4/2NPp3/B1P2PP1/P3P1BP/R2Q1RK1 b - - 0 15",
      "r1bqr1k1/pp3ppp/5n2/8/2pPp3/B1P2PP1/P3P1BP/R2Q1RK1 w - - 0 16",
      "r1bqr1k1/pp3ppp/5n2/8/2pPP3/B1P3P1/P3P1BP/R2Q1RK1 b - - 0 16",
      "r1bqr1k1/pp3ppp/8/8/2pPn3/B1P3P1/P3P1BP/R2Q1RK1 w - - 0 17",
      "r1bqr1k1/pp3ppp/8/8/2pPn3/B1P3P1/P1Q1P1BP/R4RK1 b - - 1 17",
      "r1b1r1k1/pp3ppp/8/3q4/2pPn3/B1P3P1/P1Q1P1BP/R4RK1 w - - 2 18",
      "r1b1r1k1/pp3Rpp/8/3q4/2pPn3/B1P3P1/P1Q1P1BP/R5K1 b - - 0 18",
      "r1b1r3/pp3kpp/8/3q4/2pPn3/B1P3P1/P1Q1P1BP/R5K1 w - - 0 19",
      "r1b1r3/pp3kpp/8/3q4/2pPn3/B1P3P1/P1Q1P1BP/5RK1 b - - 1 19",
      "r3r3/pp3kpp/8/3q1b2/2pPn3/B1P3P1/P1Q1P1BP/5RK1 w - - 2 20",
      "r3r3/pp3kpp/8/3q1b2/2pPn1P1/B1P5/P1Q1P1BP/5RK1 b - - 0 20",
      "r3r3/pp3k1p/6p1/3q1b2/2pPn1P1/B1P5/P1Q1P1BP/5RK1 w - - 0 21",
      "r3r3/pp3k1p/6p1/3q1b2/2pPn1P1/B1P5/P3P1BP/2Q2RK1 b - - 1 21",
      "r3r3/pp4kp/6p1/3q1b2/2pPn1P1/B1P5/P3P1BP/2Q2RK1 w - - 2 22",
      "r3r3/pp4kp/6p1/3q1P2/2pPn3/B1P5/P3P1BP/2Q2RK1 b - - 0 22",
      "r3r3/pp4kp/8/3q1p2/2pPn3/B1P5/P3P1BP/2Q2RK1 w - - 0 23",
      "r3r3/pp4kp/8/3q1p2/2pPB3/B1P5/P3P2P/2Q2RK1 b - - 0 23",
      "r3r3/pp4kp/8/3q4/2pPp3/B1P5/P3P2P/2Q2RK1 w - - 0 24",
      "r3r3/pp4kp/8/3q4/2pPpQ2/B1P5/P3P2P/5RK1 b - - 1 24",
      "r3r3/pp4k1/7p/3q4/2pPpQ2/B1P5/P3P2P/5RK1 w - - 0 25",
      "r3r3/ppQ3k1/7p/3q4/2pPp3/B1P5/P3P2P/5RK1 b - - 1 25",
      "r3r2k/ppQ5/7p/3q4/2pPp3/B1P5/P3P2P/5RK1 w - - 2 26",
      "r3r2k/ppQ5/3B3p/3q4/2pPp3/2P5/P3P2P/5RK1 b - - 3 26",
      "r5rk/ppQ5/3B3p/3q4/2pPp3/2P5/P3P2P/5RK1 w - - 4 27",
      "r5rk/ppQ5/3B3p/3q4/2pPp3/2P5/P3PK1P/5R2 b - - 5 27",
      "r6k/ppQ5/3B2rp/3q4/2pPp3/2P5/P3PK1P/5R2 w - - 6 28",
      "r6k/ppQ5/6rp/3qB3/2pPp3/2P5/P3PK1P/5R2 b - - 7 28",
      "r5k1/ppQ5/6rp/3qB3/2pPp3/2P5/P3PK1P/5R2 w - - 8 29",
      "r5k1/ppQ5/6rp/3qB3/2pPp3/2P1K3/P3P2P/5R2 b - - 9 29",
      "3r2k1/ppQ5/6rp/3qB3/2pPp3/2P1K3/P3P2P/5R2 w - - 10 30",
      "3r2k1/pp2Q3/6rp/3qB3/2pPp3/2P1K3/P3P2P/5R2 b - - 11 30",
      "3r2k1/p3Q3/6rp/1p1qB3/2pPp3/2P1K3/P3P2P/5R2 w - - 0 31",
      "3r2k1/p3Q3/6rp/1p1qB3/2pPp2P/2P1K3/P3P3/5R2 b - - 0 31",
      "3r2k1/4Q3/6rp/pp1qB3/2pPp2P/2P1K3/P3P3/5R2 w - - 0 32",
      "3r2k1/4Q3/6rp/pp1qB2P/2pPp3/2P1K3/P3P3/5R2 b - - 0 32",
      "3r2k1/4Q3/7p/pp1qB1rP/2pPp3/2P1K3/P3P3/5R2 w - - 1 33",
      "3r2k1/4Q3/5R1p/pp1qB1rP/2pPp3/2P1K3/P3P3/8 b - - 2 33",
      "3r2k1/4Q3/5R1p/pp1qr2P/2pPp3/2P1K3/P3P3/8 w - - 0 34",
      "3r2k1/4Q3/6Rp/pp1qr2P/2pPp3/2P1K3/P3P3/8 b - - 1 34",
    ]
    for (index, history) in chess.getMoveHistory().enumerated() {
      XCTAssertEqual(history.fen, fens42[index], "Sinquefield(g43): FEN move (index)")
    }

    pgn = pgns.removeFirst()
    chess = try pgn.validate()
    XCTAssertEqual(chess.getTag("Event")?.value, "Sinquefield Cup", "Sinquefield(g44): event")
    XCTAssertEqual(chess.getTag("White")?.value, "Anand, Viswanathan", "Sinquefield(g44): white")
    XCTAssertEqual(
      chess.getTag("Black")?.value, "Mamedyarov, Shakhriyar", "Sinquefield(g44): black")
    XCTAssertEqual(chess.getMoveCount(), 59, "Sinquefield(g44): move count")
    XCTAssertEqual(
      chess.getMoveHistory().map { $0.pcn }.joined(separator: ","),
      "e2e4,e7e5,g1f3,b8c6,f1b5,a7a6,b5a4,g8f6,e1g1,f6e4,d2d4,b7b5,a4b3,d7d5,d4e5,c8e6,b1d2,e4c5,c2c3,f8e7,b3c2,d5d4,d2b3,d4d3,c2b1,c5b3,a2b3,e6f5,f1e1,e8g8,c1e3,d8d5,e3d4,d3d2,e1e2,f5b1,a1b1,c6d4,f3d4,e7g5,g2g3,c7c5,d4f5,d5d3,f5d6,d3g6,h2h4,g5h6,h4h5,g6h5,e2d2,h5e5,d2d5,e5f6,b1a1,g7g6,d6e4,f6c6,e4c5,f8e8,b3b4,h6f8,c5d7,e8e6,d7e5,c6e8,e5d7,h7h5,d1f3,e8e7,d7c5,e6f6,f3e4,e7e4,c5e4,f6c6,e4d2,a8e8,g1f1,c6f6,d2b3,e8e4,d5d8,g8g7,d8a8,e4e6,b3d4,e6d6,f1g2,f8e7,a1e1,d6d8,a8a7,e7b4,d4e6,f6e6,e1e6,b4c5,a7c7,d8d2,e6g6,g7g6,c7c5,d2b2,c5c6,f7f6,c6a6,b2c2,a6b6,c2c1,b6b7,c1c2,b7b6,c2c1,b6b7,c1c2,b7b6",
      "Sinquefield(g44): PCN move history"
    )
    let fens43 = [
      "rnbqkbnr/pppppppp/8/8/4P3/8/PPPP1PPP/RNBQKBNR b KQkq - 0 1",
      "rnbqkbnr/pppp1ppp/8/4p3/4P3/8/PPPP1PPP/RNBQKBNR w KQkq - 0 2",
      "rnbqkbnr/pppp1ppp/8/4p3/4P3/5N2/PPPP1PPP/RNBQKB1R b KQkq - 1 2",
      "r1bqkbnr/pppp1ppp/2n5/4p3/4P3/5N2/PPPP1PPP/RNBQKB1R w KQkq - 2 3",
      "r1bqkbnr/pppp1ppp/2n5/1B2p3/4P3/5N2/PPPP1PPP/RNBQK2R b KQkq - 3 3",
      "r1bqkbnr/1ppp1ppp/p1n5/1B2p3/4P3/5N2/PPPP1PPP/RNBQK2R w KQkq - 0 4",
      "r1bqkbnr/1ppp1ppp/p1n5/4p3/B3P3/5N2/PPPP1PPP/RNBQK2R b KQkq - 1 4",
      "r1bqkb1r/1ppp1ppp/p1n2n2/4p3/B3P3/5N2/PPPP1PPP/RNBQK2R w KQkq - 2 5",
      "r1bqkb1r/1ppp1ppp/p1n2n2/4p3/B3P3/5N2/PPPP1PPP/RNBQ1RK1 b kq - 3 5",
      "r1bqkb1r/1ppp1ppp/p1n5/4p3/B3n3/5N2/PPPP1PPP/RNBQ1RK1 w kq - 0 6",
      "r1bqkb1r/1ppp1ppp/p1n5/4p3/B2Pn3/5N2/PPP2PPP/RNBQ1RK1 b kq - 0 6",
      "r1bqkb1r/2pp1ppp/p1n5/1p2p3/B2Pn3/5N2/PPP2PPP/RNBQ1RK1 w kq - 0 7",
      "r1bqkb1r/2pp1ppp/p1n5/1p2p3/3Pn3/1B3N2/PPP2PPP/RNBQ1RK1 b kq - 1 7",
      "r1bqkb1r/2p2ppp/p1n5/1p1pp3/3Pn3/1B3N2/PPP2PPP/RNBQ1RK1 w kq - 0 8",
      "r1bqkb1r/2p2ppp/p1n5/1p1pP3/4n3/1B3N2/PPP2PPP/RNBQ1RK1 b kq - 0 8",
      "r2qkb1r/2p2ppp/p1n1b3/1p1pP3/4n3/1B3N2/PPP2PPP/RNBQ1RK1 w kq - 1 9",
      "r2qkb1r/2p2ppp/p1n1b3/1p1pP3/4n3/1B3N2/PPPN1PPP/R1BQ1RK1 b kq - 2 9",
      "r2qkb1r/2p2ppp/p1n1b3/1pnpP3/8/1B3N2/PPPN1PPP/R1BQ1RK1 w kq - 3 10",
      "r2qkb1r/2p2ppp/p1n1b3/1pnpP3/8/1BP2N2/PP1N1PPP/R1BQ1RK1 b kq - 0 10",
      "r2qk2r/2p1bppp/p1n1b3/1pnpP3/8/1BP2N2/PP1N1PPP/R1BQ1RK1 w kq - 1 11",
      "r2qk2r/2p1bppp/p1n1b3/1pnpP3/8/2P2N2/PPBN1PPP/R1BQ1RK1 b kq - 2 11",
      "r2qk2r/2p1bppp/p1n1b3/1pn1P3/3p4/2P2N2/PPBN1PPP/R1BQ1RK1 w kq - 0 12",
      "r2qk2r/2p1bppp/p1n1b3/1pn1P3/3p4/1NP2N2/PPB2PPP/R1BQ1RK1 b kq - 1 12",
      "r2qk2r/2p1bppp/p1n1b3/1pn1P3/8/1NPp1N2/PPB2PPP/R1BQ1RK1 w kq - 0 13",
      "r2qk2r/2p1bppp/p1n1b3/1pn1P3/8/1NPp1N2/PP3PPP/RBBQ1RK1 b kq - 1 13",
      "r2qk2r/2p1bppp/p1n1b3/1p2P3/8/1nPp1N2/PP3PPP/RBBQ1RK1 w kq - 0 14",
      "r2qk2r/2p1bppp/p1n1b3/1p2P3/8/1PPp1N2/1P3PPP/RBBQ1RK1 b kq - 0 14",
      "r2qk2r/2p1bppp/p1n5/1p2Pb2/8/1PPp1N2/1P3PPP/RBBQ1RK1 w kq - 1 15",
      "r2qk2r/2p1bppp/p1n5/1p2Pb2/8/1PPp1N2/1P3PPP/RBBQR1K1 b kq - 2 15",
      "r2q1rk1/2p1bppp/p1n5/1p2Pb2/8/1PPp1N2/1P3PPP/RBBQR1K1 w - - 3 16",
      "r2q1rk1/2p1bppp/p1n5/1p2Pb2/8/1PPpBN2/1P3PPP/RB1QR1K1 b - - 4 16",
      "r4rk1/2p1bppp/p1n5/1p1qPb2/8/1PPpBN2/1P3PPP/RB1QR1K1 w - - 5 17",
      "r4rk1/2p1bppp/p1n5/1p1qPb2/3B4/1PPp1N2/1P3PPP/RB1QR1K1 b - - 6 17",
      "r4rk1/2p1bppp/p1n5/1p1qPb2/3B4/1PP2N2/1P1p1PPP/RB1QR1K1 w - - 0 18",
      "r4rk1/2p1bppp/p1n5/1p1qPb2/3B4/1PP2N2/1P1pRPPP/RB1Q2K1 b - - 1 18",
      "r4rk1/2p1bppp/p1n5/1p1qP3/3B4/1PP2N2/1P1pRPPP/Rb1Q2K1 w - - 0 19",
      "r4rk1/2p1bppp/p1n5/1p1qP3/3B4/1PP2N2/1P1pRPPP/1R1Q2K1 b - - 0 19",
      "r4rk1/2p1bppp/p7/1p1qP3/3n4/1PP2N2/1P1pRPPP/1R1Q2K1 w - - 0 20",
      "r4rk1/2p1bppp/p7/1p1qP3/3N4/1PP5/1P1pRPPP/1R1Q2K1 b - - 0 20",
      "r4rk1/2p2ppp/p7/1p1qP1b1/3N4/1PP5/1P1pRPPP/1R1Q2K1 w - - 1 21",
      "r4rk1/2p2ppp/p7/1p1qP1b1/3N4/1PP3P1/1P1pRP1P/1R1Q2K1 b - - 0 21",
      "r4rk1/5ppp/p7/1ppqP1b1/3N4/1PP3P1/1P1pRP1P/1R1Q2K1 w - - 0 22",
      "r4rk1/5ppp/p7/1ppqPNb1/8/1PP3P1/1P1pRP1P/1R1Q2K1 b - - 1 22",
      "r4rk1/5ppp/p7/1pp1PNb1/8/1PPq2P1/1P1pRP1P/1R1Q2K1 w - - 2 23",
      "r4rk1/5ppp/p2N4/1pp1P1b1/8/1PPq2P1/1P1pRP1P/1R1Q2K1 b - - 3 23",
      "r4rk1/5ppp/p2N2q1/1pp1P1b1/8/1PP3P1/1P1pRP1P/1R1Q2K1 w - - 4 24",
      "r4rk1/5ppp/p2N2q1/1pp1P1b1/7P/1PP3P1/1P1pRP2/1R1Q2K1 b - - 0 24",
      "r4rk1/5ppp/p2N2qb/1pp1P3/7P/1PP3P1/1P1pRP2/1R1Q2K1 w - - 1 25",
      "r4rk1/5ppp/p2N2qb/1pp1P2P/8/1PP3P1/1P1pRP2/1R1Q2K1 b - - 0 25",
      "r4rk1/5ppp/p2N3b/1pp1P2q/8/1PP3P1/1P1pRP2/1R1Q2K1 w - - 0 26",
      "r4rk1/5ppp/p2N3b/1pp1P2q/8/1PP3P1/1P1R1P2/1R1Q2K1 b - - 0 26",
      "r4rk1/5ppp/p2N3b/1pp1q3/8/1PP3P1/1P1R1P2/1R1Q2K1 w - - 0 27",
      "r4rk1/5ppp/p2N3b/1ppRq3/8/1PP3P1/1P3P2/1R1Q2K1 b - - 1 27",
      "r4rk1/5ppp/p2N1q1b/1ppR4/8/1PP3P1/1P3P2/1R1Q2K1 w - - 2 28",
      "r4rk1/5ppp/p2N1q1b/1ppR4/8/1PP3P1/1P3P2/R2Q2K1 b - - 3 28",
      "r4rk1/5p1p/p2N1qpb/1ppR4/8/1PP3P1/1P3P2/R2Q2K1 w - - 0 29",
      "r4rk1/5p1p/p4qpb/1ppR4/4N3/1PP3P1/1P3P2/R2Q2K1 b - - 1 29",
      "r4rk1/5p1p/p1q3pb/1ppR4/4N3/1PP3P1/1P3P2/R2Q2K1 w - - 2 30",
      "r4rk1/5p1p/p1q3pb/1pNR4/8/1PP3P1/1P3P2/R2Q2K1 b - - 0 30",
      "r3r1k1/5p1p/p1q3pb/1pNR4/8/1PP3P1/1P3P2/R2Q2K1 w - - 1 31",
      "r3r1k1/5p1p/p1q3pb/1pNR4/1P6/2P3P1/1P3P2/R2Q2K1 b - - 0 31",
      "r3rbk1/5p1p/p1q3p1/1pNR4/1P6/2P3P1/1P3P2/R2Q2K1 w - - 1 32",
      "r3rbk1/3N1p1p/p1q3p1/1p1R4/1P6/2P3P1/1P3P2/R2Q2K1 b - - 2 32",
      "r4bk1/3N1p1p/p1q1r1p1/1p1R4/1P6/2P3P1/1P3P2/R2Q2K1 w - - 3 33",
      "r4bk1/5p1p/p1q1r1p1/1p1RN3/1P6/2P3P1/1P3P2/R2Q2K1 b - - 4 33",
      "r3qbk1/5p1p/p3r1p1/1p1RN3/1P6/2P3P1/1P3P2/R2Q2K1 w - - 5 34",
      "r3qbk1/3N1p1p/p3r1p1/1p1R4/1P6/2P3P1/1P3P2/R2Q2K1 b - - 6 34",
      "r3qbk1/3N1p2/p3r1p1/1p1R3p/1P6/2P3P1/1P3P2/R2Q2K1 w - - 0 35",
      "r3qbk1/3N1p2/p3r1p1/1p1R3p/1P6/2P2QP1/1P3P2/R5K1 b - - 1 35",
      "r4bk1/3Nqp2/p3r1p1/1p1R3p/1P6/2P2QP1/1P3P2/R5K1 w - - 2 36",
      "r4bk1/4qp2/p3r1p1/1pNR3p/1P6/2P2QP1/1P3P2/R5K1 b - - 3 36",
      "r4bk1/4qp2/p4rp1/1pNR3p/1P6/2P2QP1/1P3P2/R5K1 w - - 4 37",
      "r4bk1/4qp2/p4rp1/1pNR3p/1P2Q3/2P3P1/1P3P2/R5K1 b - - 5 37",
      "r4bk1/5p2/p4rp1/1pNR3p/1P2q3/2P3P1/1P3P2/R5K1 w - - 0 38",
      "r4bk1/5p2/p4rp1/1p1R3p/1P2N3/2P3P1/1P3P2/R5K1 b - - 0 38",
      "r4bk1/5p2/p1r3p1/1p1R3p/1P2N3/2P3P1/1P3P2/R5K1 w - - 1 39",
      "r4bk1/5p2/p1r3p1/1p1R3p/1P6/2P3P1/1P1N1P2/R5K1 b - - 2 39",
      "4rbk1/5p2/p1r3p1/1p1R3p/1P6/2P3P1/1P1N1P2/R5K1 w - - 3 40",
      "4rbk1/5p2/p1r3p1/1p1R3p/1P6/2P3P1/1P1N1P2/R4K2 b - - 4 40",
      "4rbk1/5p2/p4rp1/1p1R3p/1P6/2P3P1/1P1N1P2/R4K2 w - - 5 41",
      "4rbk1/5p2/p4rp1/1p1R3p/1P6/1NP3P1/1P3P2/R4K2 b - - 6 41",
      "5bk1/5p2/p4rp1/1p1R3p/1P2r3/1NP3P1/1P3P2/R4K2 w - - 7 42",
      "3R1bk1/5p2/p4rp1/1p5p/1P2r3/1NP3P1/1P3P2/R4K2 b - - 8 42",
      "3R1b2/5pk1/p4rp1/1p5p/1P2r3/1NP3P1/1P3P2/R4K2 w - - 9 43",
      "R4b2/5pk1/p4rp1/1p5p/1P2r3/1NP3P1/1P3P2/R4K2 b - - 10 43",
      "R4b2/5pk1/p3rrp1/1p5p/1P6/1NP3P1/1P3P2/R4K2 w - - 11 44",
      "R4b2/5pk1/p3rrp1/1p5p/1P1N4/2P3P1/1P3P2/R4K2 b - - 12 44",
      "R4b2/5pk1/p2r1rp1/1p5p/1P1N4/2P3P1/1P3P2/R4K2 w - - 13 45",
      "R4b2/5pk1/p2r1rp1/1p5p/1P1N4/2P3P1/1P3PK1/R7 b - - 14 45",
      "R7/4bpk1/p2r1rp1/1p5p/1P1N4/2P3P1/1P3PK1/R7 w - - 15 46",
      "R7/4bpk1/p2r1rp1/1p5p/1P1N4/2P3P1/1P3PK1/4R3 b - - 16 46",
      "R2r4/4bpk1/p4rp1/1p5p/1P1N4/2P3P1/1P3PK1/4R3 w - - 17 47",
      "3r4/R3bpk1/p4rp1/1p5p/1P1N4/2P3P1/1P3PK1/4R3 b - - 18 47",
      "3r4/R4pk1/p4rp1/1p5p/1b1N4/2P3P1/1P3PK1/4R3 w - - 0 48",
      "3r4/R4pk1/p3Nrp1/1p5p/1b6/2P3P1/1P3PK1/4R3 b - - 1 48",
      "3r4/R4pk1/p3r1p1/1p5p/1b6/2P3P1/1P3PK1/4R3 w - - 0 49",
      "3r4/R4pk1/p3R1p1/1p5p/1b6/2P3P1/1P3PK1/8 b - - 0 49",
      "3r4/R4pk1/p3R1p1/1pb4p/8/2P3P1/1P3PK1/8 w - - 1 50",
      "3r4/2R2pk1/p3R1p1/1pb4p/8/2P3P1/1P3PK1/8 b - - 2 50",
      "8/2R2pk1/p3R1p1/1pb4p/8/2P3P1/1P1r1PK1/8 w - - 3 51",
      "8/2R2pk1/p5R1/1pb4p/8/2P3P1/1P1r1PK1/8 b - - 0 51",
      "8/2R2p2/p5k1/1pb4p/8/2P3P1/1P1r1PK1/8 w - - 0 52",
      "8/5p2/p5k1/1pR4p/8/2P3P1/1P1r1PK1/8 b - - 0 52",
      "8/5p2/p5k1/1pR4p/8/2P3P1/1r3PK1/8 w - - 0 53",
      "8/5p2/p1R3k1/1p5p/8/2P3P1/1r3PK1/8 b - - 1 53",
      "8/8/p1R2pk1/1p5p/8/2P3P1/1r3PK1/8 w - - 0 54",
      "8/8/R4pk1/1p5p/8/2P3P1/1r3PK1/8 b - - 0 54",
      "8/8/R4pk1/1p5p/8/2P3P1/2r2PK1/8 w - - 1 55",
      "8/8/1R3pk1/1p5p/8/2P3P1/2r2PK1/8 b - - 2 55",
      "8/8/1R3pk1/1p5p/8/2P3P1/5PK1/2r5 w - - 3 56",
      "8/1R6/5pk1/1p5p/8/2P3P1/5PK1/2r5 b - - 4 56",
      "8/1R6/5pk1/1p5p/8/2P3P1/2r2PK1/8 w - - 5 57",
      "8/8/1R3pk1/1p5p/8/2P3P1/2r2PK1/8 b - - 6 57",
      "8/8/1R3pk1/1p5p/8/2P3P1/5PK1/2r5 w - - 7 58",
      "8/1R6/5pk1/1p5p/8/2P3P1/5PK1/2r5 b - - 8 58",
      "8/1R6/5pk1/1p5p/8/2P3P1/2r2PK1/8 w - - 9 59",
      "8/8/1R3pk1/1p5p/8/2P3P1/2r2PK1/8 b - - 10 59",
    ]
    for (index, history) in chess.getMoveHistory().enumerated() {
      XCTAssertEqual(history.fen, fens43[index], "Sinquefield(g44): FEN move (index)")
    }

    pgn = pgns.removeFirst()
    chess = try pgn.validate()
    XCTAssertEqual(chess.getTag("Event")?.value, "Sinquefield Cup", "Sinquefield(g45): event")
    XCTAssertEqual(chess.getTag("White")?.value, "Karjakin, Sergey", "Sinquefield(g45): white")
    XCTAssertEqual(
      chess.getTag("Black")?.value, "Vachier-Lagrave, Maxime", "Sinquefield(g45): black")
    XCTAssertEqual(chess.getMoveCount(), 120, "Sinquefield(g45): move count")
    XCTAssertEqual(
      chess.getMoveHistory().map { $0.pcn }.joined(separator: ","),
      "d2d4,g8f6,c2c4,g7g6,b1c3,d7d5,c4d5,f6d5,e2e4,d5c3,b2c3,f8g7,f1c4,c7c5,g1e2,b8c6,c1e3,e8g8,e1g1,c8g4,f2f3,g4d7,a1b1,d8c7,h2h4,c5d4,c3d4,c6d4,c4f7,f8f7,e2d4,a8d8,d1b3,c7g3,d4e2,g3h4,e3f2,h4f6,f1d1,b7b6,b3a3,e7e6,d1d2,d7e8,e4e5,f6f5,d2d8,f5b1,g1h2,f7f8,e2g3,g7e5,a3a7,b1b4,h2g1,b4b1,g1h2,b1b4,h2g1,e5f6,d8d1,e8a4,d1f1,a4c6,a7b6,b4b6,f2b6,f8a8,f1f2,c6d5,g3e4,f6e5,f2e2,d5a2,e4g5,e5d6,g1f2,a2c4,e2d2,d6e7,b6e3,c4d5,d2c2,h7h6,g5e4,d5e4,f3e4,h6h5,c2c7,e7f6,c7c6,a8a2,f2f3,a2a3,f3e2,g8f7,c6c7,f7e8,c7h7,a3b3,h7a7,b3b2,e2f3,g6g5,e4e5,g5g4,f3e4,b2b4,e4d3,f6d8,a7a8,e8d7,g2g3,d8c7,e3d4,d7c6,d4c3,b4b8,a8a6,b8b6,a6a8,b6b5,d3e4,b5b3,c3d4,c7b8,a8a6,c6d7,a6a8,b3b1,d4f2,b1b4,f2d4,b8c7,e4d3,b4b8,a8a7,b8b5,d3c4,b5a5,a7b7,d7c6,b7b3,c7e5,b3b6,c6d7,d4e5,a5e5,c4d4,e5a5,d4e4,d7e7,b6b8,a5a3,b8h8,a3g3,h8h5,g3a3,e4f4,a3a4,f4g3,e7d6,h5h8,d6d5,h8d8,d5e5,d8b8,a4d4,b8a8,d4e4,a8a5,e5f6,a5a8,e6e5,a8f8,f6e6,f8e8,e6d5,e8d8,d5c4,d8a8,c4d5,a8d8,d5c5,d8c8,c5d4,c8a8,e4f4,a8e8,d4e4,e8g8,f4f3,g3g4,f3f1,g4h3,e4e3,h3g2,f1a1,g8g3,e3e2,g3g4,e2e3,g4g3,e3d2,g3g4,a1e1,g4a4,e5e4,a4a2,d2e3,a2a3,e3f4,g2f2,e1b1,f2e2,b1b2,e2e1,f4e5,a3a4,e5f5,a4a8,f5f4,a8a3,b2h2,e1f1,h2d2,f1e1,d2d3,a3d3,e4d3,e1d2,f4e4,d2d1,e4e3,d1e1,d3d2,e1d1,e3d3",
      "Sinquefield(g45): PCN move history"
    )
    let fens44 = [
      "rnbqkbnr/pppppppp/8/8/3P4/8/PPP1PPPP/RNBQKBNR b KQkq - 0 1",
      "rnbqkb1r/pppppppp/5n2/8/3P4/8/PPP1PPPP/RNBQKBNR w KQkq - 1 2",
      "rnbqkb1r/pppppppp/5n2/8/2PP4/8/PP2PPPP/RNBQKBNR b KQkq - 0 2",
      "rnbqkb1r/pppppp1p/5np1/8/2PP4/8/PP2PPPP/RNBQKBNR w KQkq - 0 3",
      "rnbqkb1r/pppppp1p/5np1/8/2PP4/2N5/PP2PPPP/R1BQKBNR b KQkq - 1 3",
      "rnbqkb1r/ppp1pp1p/5np1/3p4/2PP4/2N5/PP2PPPP/R1BQKBNR w KQkq - 0 4",
      "rnbqkb1r/ppp1pp1p/5np1/3P4/3P4/2N5/PP2PPPP/R1BQKBNR b KQkq - 0 4",
      "rnbqkb1r/ppp1pp1p/6p1/3n4/3P4/2N5/PP2PPPP/R1BQKBNR w KQkq - 0 5",
      "rnbqkb1r/ppp1pp1p/6p1/3n4/3PP3/2N5/PP3PPP/R1BQKBNR b KQkq - 0 5",
      "rnbqkb1r/ppp1pp1p/6p1/8/3PP3/2n5/PP3PPP/R1BQKBNR w KQkq - 0 6",
      "rnbqkb1r/ppp1pp1p/6p1/8/3PP3/2P5/P4PPP/R1BQKBNR b KQkq - 0 6",
      "rnbqk2r/ppp1ppbp/6p1/8/3PP3/2P5/P4PPP/R1BQKBNR w KQkq - 1 7",
      "rnbqk2r/ppp1ppbp/6p1/8/2BPP3/2P5/P4PPP/R1BQK1NR b KQkq - 2 7",
      "rnbqk2r/pp2ppbp/6p1/2p5/2BPP3/2P5/P4PPP/R1BQK1NR w KQkq - 0 8",
      "rnbqk2r/pp2ppbp/6p1/2p5/2BPP3/2P5/P3NPPP/R1BQK2R b KQkq - 1 8",
      "r1bqk2r/pp2ppbp/2n3p1/2p5/2BPP3/2P5/P3NPPP/R1BQK2R w KQkq - 2 9",
      "r1bqk2r/pp2ppbp/2n3p1/2p5/2BPP3/2P1B3/P3NPPP/R2QK2R b KQkq - 3 9",
      "r1bq1rk1/pp2ppbp/2n3p1/2p5/2BPP3/2P1B3/P3NPPP/R2QK2R w KQ - 4 10",
      "r1bq1rk1/pp2ppbp/2n3p1/2p5/2BPP3/2P1B3/P3NPPP/R2Q1RK1 b - - 5 10",
      "r2q1rk1/pp2ppbp/2n3p1/2p5/2BPP1b1/2P1B3/P3NPPP/R2Q1RK1 w - - 6 11",
      "r2q1rk1/pp2ppbp/2n3p1/2p5/2BPP1b1/2P1BP2/P3N1PP/R2Q1RK1 b - - 0 11",
      "r2q1rk1/pp1bppbp/2n3p1/2p5/2BPP3/2P1BP2/P3N1PP/R2Q1RK1 w - - 1 12",
      "r2q1rk1/pp1bppbp/2n3p1/2p5/2BPP3/2P1BP2/P3N1PP/1R1Q1RK1 b - - 2 12",
      "r4rk1/ppqbppbp/2n3p1/2p5/2BPP3/2P1BP2/P3N1PP/1R1Q1RK1 w - - 3 13",
      "r4rk1/ppqbppbp/2n3p1/2p5/2BPP2P/2P1BP2/P3N1P1/1R1Q1RK1 b - - 0 13",
      "r4rk1/ppqbppbp/2n3p1/8/2BpP2P/2P1BP2/P3N1P1/1R1Q1RK1 w - - 0 14",
      "r4rk1/ppqbppbp/2n3p1/8/2BPP2P/4BP2/P3N1P1/1R1Q1RK1 b - - 0 14",
      "r4rk1/ppqbppbp/6p1/8/2BnP2P/4BP2/P3N1P1/1R1Q1RK1 w - - 0 15",
      "r4rk1/ppqbpBbp/6p1/8/3nP2P/4BP2/P3N1P1/1R1Q1RK1 b - - 0 15",
      "r5k1/ppqbprbp/6p1/8/3nP2P/4BP2/P3N1P1/1R1Q1RK1 w - - 0 16",
      "r5k1/ppqbprbp/6p1/8/3NP2P/4BP2/P5P1/1R1Q1RK1 b - - 0 16",
      "3r2k1/ppqbprbp/6p1/8/3NP2P/4BP2/P5P1/1R1Q1RK1 w - - 1 17",
      "3r2k1/ppqbprbp/6p1/8/3NP2P/1Q2BP2/P5P1/1R3RK1 b - - 2 17",
      "3r2k1/pp1bprbp/6p1/8/3NP2P/1Q2BPq1/P5P1/1R3RK1 w - - 3 18",
      "3r2k1/pp1bprbp/6p1/8/4P2P/1Q2BPq1/P3N1P1/1R3RK1 b - - 4 18",
      "3r2k1/pp1bprbp/6p1/8/4P2q/1Q2BP2/P3N1P1/1R3RK1 w - - 0 19",
      "3r2k1/pp1bprbp/6p1/8/4P2q/1Q3P2/P3NBP1/1R3RK1 b - - 1 19",
      "3r2k1/pp1bprbp/5qp1/8/4P3/1Q3P2/P3NBP1/1R3RK1 w - - 2 20",
      "3r2k1/pp1bprbp/5qp1/8/4P3/1Q3P2/P3NBP1/1R1R2K1 b - - 3 20",
      "3r2k1/p2bprbp/1p3qp1/8/4P3/1Q3P2/P3NBP1/1R1R2K1 w - - 0 21",
      "3r2k1/p2bprbp/1p3qp1/8/4P3/Q4P2/P3NBP1/1R1R2K1 b - - 1 21",
      "3r2k1/p2b1rbp/1p2pqp1/8/4P3/Q4P2/P3NBP1/1R1R2K1 w - - 0 22",
      "3r2k1/p2b1rbp/1p2pqp1/8/4P3/Q4P2/P2RNBP1/1R4K1 b - - 1 22",
      "3rb1k1/p4rbp/1p2pqp1/8/4P3/Q4P2/P2RNBP1/1R4K1 w - - 2 23",
      "3rb1k1/p4rbp/1p2pqp1/4P3/8/Q4P2/P2RNBP1/1R4K1 b - - 0 23",
      "3rb1k1/p4rbp/1p2p1p1/4Pq2/8/Q4P2/P2RNBP1/1R4K1 w - - 1 24",
      "3Rb1k1/p4rbp/1p2p1p1/4Pq2/8/Q4P2/P3NBP1/1R4K1 b - - 0 24",
      "3Rb1k1/p4rbp/1p2p1p1/4P3/8/Q4P2/P3NBP1/1q4K1 w - - 0 25",
      "3Rb1k1/p4rbp/1p2p1p1/4P3/8/Q4P2/P3NBPK/1q6 b - - 1 25",
      "3Rbrk1/p5bp/1p2p1p1/4P3/8/Q4P2/P3NBPK/1q6 w - - 2 26",
      "3Rbrk1/p5bp/1p2p1p1/4P3/8/Q4PN1/P4BPK/1q6 b - - 3 26",
      "3Rbrk1/p6p/1p2p1p1/4b3/8/Q4PN1/P4BPK/1q6 w - - 0 27",
      "3Rbrk1/Q6p/1p2p1p1/4b3/8/5PN1/P4BPK/1q6 b - - 0 27",
      "3Rbrk1/Q6p/1p2p1p1/4b3/1q6/5PN1/P4BPK/8 w - - 1 28",
      "3Rbrk1/Q6p/1p2p1p1/4b3/1q6/5PN1/P4BP1/6K1 b - - 2 28",
      "3Rbrk1/Q6p/1p2p1p1/4b3/8/5PN1/P4BP1/1q4K1 w - - 3 29",
      "3Rbrk1/Q6p/1p2p1p1/4b3/8/5PN1/P4BPK/1q6 b - - 4 29",
      "3Rbrk1/Q6p/1p2p1p1/4b3/1q6/5PN1/P4BPK/8 w - - 5 30",
      "3Rbrk1/Q6p/1p2p1p1/4b3/1q6/5PN1/P4BP1/6K1 b - - 6 30",
      "3Rbrk1/Q6p/1p2pbp1/8/1q6/5PN1/P4BP1/6K1 w - - 7 31",
      "4brk1/Q6p/1p2pbp1/8/1q6/5PN1/P4BP1/3R2K1 b - - 8 31",
      "5rk1/Q6p/1p2pbp1/8/bq6/5PN1/P4BP1/3R2K1 w - - 9 32",
      "5rk1/Q6p/1p2pbp1/8/bq6/5PN1/P4BP1/5RK1 b - - 10 32",
      "5rk1/Q6p/1pb1pbp1/8/1q6/5PN1/P4BP1/5RK1 w - - 11 33",
      "5rk1/7p/1Qb1pbp1/8/1q6/5PN1/P4BP1/5RK1 b - - 0 33",
      "5rk1/7p/1qb1pbp1/8/8/5PN1/P4BP1/5RK1 w - - 0 34",
      "5rk1/7p/1Bb1pbp1/8/8/5PN1/P5P1/5RK1 b - - 0 34",
      "r5k1/7p/1Bb1pbp1/8/8/5PN1/P5P1/5RK1 w - - 1 35",
      "r5k1/7p/1Bb1pbp1/8/8/5PN1/P4RP1/6K1 b - - 2 35",
      "r5k1/7p/1B2pbp1/3b4/8/5PN1/P4RP1/6K1 w - - 3 36",
      "r5k1/7p/1B2pbp1/3b4/4N3/5P2/P4RP1/6K1 b - - 4 36",
      "r5k1/7p/1B2p1p1/3bb3/4N3/5P2/P4RP1/6K1 w - - 5 37",
      "r5k1/7p/1B2p1p1/3bb3/4N3/5P2/P3R1P1/6K1 b - - 6 37",
      "r5k1/7p/1B2p1p1/4b3/4N3/5P2/b3R1P1/6K1 w - - 0 38",
      "r5k1/7p/1B2p1p1/4b1N1/8/5P2/b3R1P1/6K1 b - - 1 38",
      "r5k1/7p/1B1bp1p1/6N1/8/5P2/b3R1P1/6K1 w - - 2 39",
      "r5k1/7p/1B1bp1p1/6N1/8/5P2/b3RKP1/8 b - - 3 39",
      "r5k1/7p/1B1bp1p1/6N1/2b5/5P2/4RKP1/8 w - - 4 40",
      "r5k1/7p/1B1bp1p1/6N1/2b5/5P2/3R1KP1/8 b - - 5 40",
      "r5k1/4b2p/1B2p1p1/6N1/2b5/5P2/3R1KP1/8 w - - 6 41",
      "r5k1/4b2p/4p1p1/6N1/2b5/4BP2/3R1KP1/8 b - - 7 41",
      "r5k1/4b2p/4p1p1/3b2N1/8/4BP2/3R1KP1/8 w - - 8 42",
      "r5k1/4b2p/4p1p1/3b2N1/8/4BP2/2R2KP1/8 b - - 9 42",
      "r5k1/4b3/4p1pp/3b2N1/8/4BP2/2R2KP1/8 w - - 0 43",
      "r5k1/4b3/4p1pp/3b4/4N3/4BP2/2R2KP1/8 b - - 1 43",
      "r5k1/4b3/4p1pp/8/4b3/4BP2/2R2KP1/8 w - - 0 44",
      "r5k1/4b3/4p1pp/8/4P3/4B3/2R2KP1/8 b - - 0 44",
      "r5k1/4b3/4p1p1/7p/4P3/4B3/2R2KP1/8 w - - 0 45",
      "r5k1/2R1b3/4p1p1/7p/4P3/4B3/5KP1/8 b - - 1 45",
      "r5k1/2R5/4pbp1/7p/4P3/4B3/5KP1/8 w - - 2 46",
      "r5k1/8/2R1pbp1/7p/4P3/4B3/5KP1/8 b - - 3 46",
      "6k1/8/2R1pbp1/7p/4P3/4B3/r4KP1/8 w - - 4 47",
      "6k1/8/2R1pbp1/7p/4P3/4BK2/r5P1/8 b - - 5 47",
      "6k1/8/2R1pbp1/7p/4P3/r3BK2/6P1/8 w - - 6 48",
      "6k1/8/2R1pbp1/7p/4P3/r3B3/4K1P1/8 b - - 7 48",
      "8/5k2/2R1pbp1/7p/4P3/r3B3/4K1P1/8 w - - 8 49",
      "8/2R2k2/4pbp1/7p/4P3/r3B3/4K1P1/8 b - - 9 49",
      "4k3/2R5/4pbp1/7p/4P3/r3B3/4K1P1/8 w - - 10 50",
      "4k3/7R/4pbp1/7p/4P3/r3B3/4K1P1/8 b - - 11 50",
      "4k3/7R/4pbp1/7p/4P3/1r2B3/4K1P1/8 w - - 12 51",
      "4k3/R7/4pbp1/7p/4P3/1r2B3/4K1P1/8 b - - 13 51",
      "4k3/R7/4pbp1/7p/4P3/4B3/1r2K1P1/8 w - - 14 52",
      "4k3/R7/4pbp1/7p/4P3/4BK2/1r4P1/8 b - - 15 52",
      "4k3/R7/4pb2/6pp/4P3/4BK2/1r4P1/8 w - - 0 53",
      "4k3/R7/4pb2/4P1pp/8/4BK2/1r4P1/8 b - - 0 53",
      "4k3/R7/4pb2/4P2p/6p1/4BK2/1r4P1/8 w - - 0 54",
      "4k3/R7/4pb2/4P2p/4K1p1/4B3/1r4P1/8 b - - 1 54",
      "4k3/R7/4pb2/4P2p/1r2K1p1/4B3/6P1/8 w - - 2 55",
      "4k3/R7/4pb2/4P2p/1r4p1/3KB3/6P1/8 b - - 3 55",
      "3bk3/R7/4p3/4P2p/1r4p1/3KB3/6P1/8 w - - 4 56",
      "R2bk3/8/4p3/4P2p/1r4p1/3KB3/6P1/8 b - - 5 56",
      "R2b4/3k4/4p3/4P2p/1r4p1/3KB3/6P1/8 w - - 6 57",
      "R2b4/3k4/4p3/4P2p/1r4p1/3KB1P1/8/8 b - - 0 57",
      "R7/2bk4/4p3/4P2p/1r4p1/3KB1P1/8/8 w - - 1 58",
      "R7/2bk4/4p3/4P2p/1r1B2p1/3K2P1/8/8 b - - 2 58",
      "R7/2b5/2k1p3/4P2p/1r1B2p1/3K2P1/8/8 w - - 3 59",
      "R7/2b5/2k1p3/4P2p/1r4p1/2BK2P1/8/8 b - - 4 59",
      "Rr6/2b5/2k1p3/4P2p/6p1/2BK2P1/8/8 w - - 5 60",
      "1r6/2b5/R1k1p3/4P2p/6p1/2BK2P1/8/8 b - - 6 60",
      "8/2b5/Rrk1p3/4P2p/6p1/2BK2P1/8/8 w - - 7 61",
      "R7/2b5/1rk1p3/4P2p/6p1/2BK2P1/8/8 b - - 8 61",
      "R7/2b5/2k1p3/1r2P2p/6p1/2BK2P1/8/8 w - - 9 62",
      "R7/2b5/2k1p3/1r2P2p/4K1p1/2B3P1/8/8 b - - 10 62",
      "R7/2b5/2k1p3/4P2p/4K1p1/1rB3P1/8/8 w - - 11 63",
      "R7/2b5/2k1p3/4P2p/3BK1p1/1r4P1/8/8 b - - 12 63",
      "Rb6/8/2k1p3/4P2p/3BK1p1/1r4P1/8/8 w - - 13 64",
      "1b6/8/R1k1p3/4P2p/3BK1p1/1r4P1/8/8 b - - 14 64",
      "1b6/3k4/R3p3/4P2p/3BK1p1/1r4P1/8/8 w - - 15 65",
      "Rb6/3k4/4p3/4P2p/3BK1p1/1r4P1/8/8 b - - 16 65",
      "Rb6/3k4/4p3/4P2p/3BK1p1/6P1/8/1r6 w - - 17 66",
      "Rb6/3k4/4p3/4P2p/4K1p1/6P1/5B2/1r6 b - - 18 66",
      "Rb6/3k4/4p3/4P2p/1r2K1p1/6P1/5B2/8 w - - 19 67",
      "Rb6/3k4/4p3/4P2p/1r1BK1p1/6P1/8/8 b - - 20 67",
      "R7/2bk4/4p3/4P2p/1r1BK1p1/6P1/8/8 w - - 21 68",
      "R7/2bk4/4p3/4P2p/1r1B2p1/3K2P1/8/8 b - - 22 68",
      "Rr6/2bk4/4p3/4P2p/3B2p1/3K2P1/8/8 w - - 23 69",
      "1r6/R1bk4/4p3/4P2p/3B2p1/3K2P1/8/8 b - - 24 69",
      "8/R1bk4/4p3/1r2P2p/3B2p1/3K2P1/8/8 w - - 25 70",
      "8/R1bk4/4p3/1r2P2p/2KB2p1/6P1/8/8 b - - 26 70",
      "8/R1bk4/4p3/r3P2p/2KB2p1/6P1/8/8 w - - 27 71",
      "8/1Rbk4/4p3/r3P2p/2KB2p1/6P1/8/8 b - - 28 71",
      "8/1Rb5/2k1p3/r3P2p/2KB2p1/6P1/8/8 w - - 29 72",
      "8/2b5/2k1p3/r3P2p/2KB2p1/1R4P1/8/8 b - - 30 72",
      "8/8/2k1p3/r3b2p/2KB2p1/1R4P1/8/8 w - - 0 73",
      "8/8/1Rk1p3/r3b2p/2KB2p1/6P1/8/8 b - - 1 73",
      "8/3k4/1R2p3/r3b2p/2KB2p1/6P1/8/8 w - - 2 74",
      "8/3k4/1R2p3/r3B2p/2K3p1/6P1/8/8 b - - 0 74",
      "8/3k4/1R2p3/4r2p/2K3p1/6P1/8/8 w - - 0 75",
      "8/3k4/1R2p3/4r2p/3K2p1/6P1/8/8 b - - 1 75",
      "8/3k4/1R2p3/r6p/3K2p1/6P1/8/8 w - - 2 76",
      "8/3k4/1R2p3/r6p/4K1p1/6P1/8/8 b - - 3 76",
      "8/4k3/1R2p3/r6p/4K1p1/6P1/8/8 w - - 4 77",
      "1R6/4k3/4p3/r6p/4K1p1/6P1/8/8 b - - 5 77",
      "1R6/4k3/4p3/7p/4K1p1/r5P1/8/8 w - - 6 78",
      "7R/4k3/4p3/7p/4K1p1/r5P1/8/8 b - - 7 78",
      "7R/4k3/4p3/7p/4K1p1/6r1/8/8 w - - 0 79",
      "8/4k3/4p3/7R/4K1p1/6r1/8/8 b - - 0 79",
      "8/4k3/4p3/7R/4K1p1/r7/8/8 w - - 1 80",
      "8/4k3/4p3/7R/5Kp1/r7/8/8 b - - 2 80",
      "8/4k3/4p3/7R/r4Kp1/8/8/8 w - - 3 81",
      "8/4k3/4p3/7R/r5p1/6K1/8/8 b - - 4 81",
      "8/8/3kp3/7R/r5p1/6K1/8/8 w - - 5 82",
      "7R/8/3kp3/8/r5p1/6K1/8/8 b - - 6 82",
      "7R/8/4p3/3k4/r5p1/6K1/8/8 w - - 7 83",
      "3R4/8/4p3/3k4/r5p1/6K1/8/8 b - - 8 83",
      "3R4/8/4p3/4k3/r5p1/6K1/8/8 w - - 9 84",
      "1R6/8/4p3/4k3/r5p1/6K1/8/8 b - - 10 84",
      "1R6/8/4p3/4k3/3r2p1/6K1/8/8 w - - 11 85",
      "R7/8/4p3/4k3/3r2p1/6K1/8/8 b - - 12 85",
      "R7/8/4p3/4k3/4r1p1/6K1/8/8 w - - 13 86",
      "8/8/4p3/R3k3/4r1p1/6K1/8/8 b - - 14 86",
      "8/8/4pk2/R7/4r1p1/6K1/8/8 w - - 15 87",
      "R7/8/4pk2/8/4r1p1/6K1/8/8 b - - 16 87",
      "R7/8/5k2/4p3/4r1p1/6K1/8/8 w - - 0 88",
      "5R2/8/5k2/4p3/4r1p1/6K1/8/8 b - - 1 88",
      "5R2/8/4k3/4p3/4r1p1/6K1/8/8 w - - 2 89",
      "4R3/8/4k3/4p3/4r1p1/6K1/8/8 b - - 3 89",
      "4R3/8/8/3kp3/4r1p1/6K1/8/8 w - - 4 90",
      "3R4/8/8/3kp3/4r1p1/6K1/8/8 b - - 5 90",
      "3R4/8/8/4p3/2k1r1p1/6K1/8/8 w - - 6 91",
      "R7/8/8/4p3/2k1r1p1/6K1/8/8 b - - 7 91",
      "R7/8/8/3kp3/4r1p1/6K1/8/8 w - - 8 92",
      "3R4/8/8/3kp3/4r1p1/6K1/8/8 b - - 9 92",
      "3R4/8/8/2k1p3/4r1p1/6K1/8/8 w - - 10 93",
      "2R5/8/8/2k1p3/4r1p1/6K1/8/8 b - - 11 93",
      "2R5/8/8/4p3/3kr1p1/6K1/8/8 w - - 12 94",
      "R7/8/8/4p3/3kr1p1/6K1/8/8 b - - 13 94",
      "R7/8/8/4p3/3k1rp1/6K1/8/8 w - - 14 95",
      "4R3/8/8/4p3/3k1rp1/6K1/8/8 b - - 15 95",
      "4R3/8/8/4p3/4krp1/6K1/8/8 w - - 16 96",
      "6R1/8/8/4p3/4krp1/6K1/8/8 b - - 17 96",
      "6R1/8/8/4p3/4k1p1/5rK1/8/8 w - - 18 97",
      "6R1/8/8/4p3/4k1K1/5r2/8/8 b - - 0 97",
      "6R1/8/8/4p3/4k1K1/8/8/5r2 w - - 1 98",
      "6R1/8/8/4p3/4k3/7K/8/5r2 b - - 2 98",
      "6R1/8/8/4p3/8/4k2K/8/5r2 w - - 3 99",
      "6R1/8/8/4p3/8/4k3/6K1/5r2 b - - 4 99",
      "6R1/8/8/4p3/8/4k3/6K1/r7 w - - 5 100",
      "8/8/8/4p3/8/4k1R1/6K1/r7 b - - 6 100",
      "8/8/8/4p3/8/6R1/4k1K1/r7 w - - 7 101",
      "8/8/8/4p3/6R1/8/4k1K1/r7 b - - 8 101",
      "8/8/8/4p3/6R1/4k3/6K1/r7 w - - 9 102",
      "8/8/8/4p3/8/4k1R1/6K1/r7 b - - 10 102",
      "8/8/8/4p3/8/6R1/3k2K1/r7 w - - 11 103",
      "8/8/8/4p3/6R1/8/3k2K1/r7 b - - 12 103",
      "8/8/8/4p3/6R1/8/3k2K1/4r3 w - - 13 104",
      "8/8/8/4p3/R7/8/3k2K1/4r3 b - - 14 104",
      "8/8/8/8/R3p3/8/3k2K1/4r3 w - - 0 105",
      "8/8/8/8/4p3/8/R2k2K1/4r3 b - - 1 105",
      "8/8/8/8/4p3/4k3/R5K1/4r3 w - - 2 106",
      "8/8/8/8/4p3/R3k3/6K1/4r3 b - - 3 106",
      "8/8/8/8/4pk2/R7/6K1/4r3 w - - 4 107",
      "8/8/8/8/4pk2/R7/5K2/4r3 b - - 5 107",
      "8/8/8/8/4pk2/R7/5K2/1r6 w - - 6 108",
      "8/8/8/8/4pk2/R7/4K3/1r6 b - - 7 108",
      "8/8/8/8/4pk2/R7/1r2K3/8 w - - 8 109",
      "8/8/8/8/4pk2/R7/1r6/4K3 b - - 9 109",
      "8/8/8/4k3/4p3/R7/1r6/4K3 w - - 10 110",
      "8/8/8/4k3/R3p3/8/1r6/4K3 b - - 11 110",
      "8/8/8/5k2/R3p3/8/1r6/4K3 w - - 12 111",
      "R7/8/8/5k2/4p3/8/1r6/4K3 b - - 13 111",
      "R7/8/8/8/4pk2/8/1r6/4K3 w - - 14 112",
      "8/8/8/8/4pk2/R7/1r6/4K3 b - - 15 112",
      "8/8/8/8/4pk2/R7/7r/4K3 w - - 16 113",
      "8/8/8/8/4pk2/R7/7r/5K2 b - - 17 113",
      "8/8/8/8/4pk2/R7/3r4/5K2 w - - 18 114",
      "8/8/8/8/4pk2/R7/3r4/4K3 b - - 19 114",
      "8/8/8/8/4pk2/R2r4/8/4K3 w - - 20 115",
      "8/8/8/8/4pk2/3R4/8/4K3 b - - 0 115",
      "8/8/8/8/5k2/3p4/8/4K3 w - - 0 116",
      "8/8/8/8/5k2/3p4/3K4/8 b - - 1 116",
      "8/8/8/8/4k3/3p4/3K4/8 w - - 2 117",
      "8/8/8/8/4k3/3p4/8/3K4 b - - 3 117",
      "8/8/8/8/8/3pk3/8/3K4 w - - 4 118",
      "8/8/8/8/8/3pk3/8/4K3 b - - 5 118",
      "8/8/8/8/8/4k3/3p4/4K3 w - - 0 119",
      "8/8/8/8/8/4k3/3p4/3K4 b - - 1 119",
      "8/8/8/8/8/3k4/3p4/3K4 w - - 2 120",
    ]
    for (index, history) in chess.getMoveHistory().enumerated() {
      XCTAssertEqual(history.fen, fens44[index], "Sinquefield(g45): FEN move (index)")
    }
  }

  func testTal() throws {
    let text = try String(contentsOfFile: "./Tests/PGN/Tal.pgn", encoding: .utf8)
    var pgns = Pgn.parseMultiGame(text)
    var chess: Chess
    var pgn: Pgn
    XCTAssertEqual(pgns.count, 10, "Tal: game count matches")

    pgn = pgns.removeFirst()
    chess = try pgn.validate()
    XCTAssertEqual(chess.getTag("Event")?.value, "USSR Championship", "Tal(g1): event")
    XCTAssertEqual(chess.getTag("White")?.value, "Mikhail Tal", "Tal(g1): white")
    XCTAssertEqual(chess.getTag("Black")?.value, "Alexander Kazimirovich Tolush", "Tal(g1): black")
    XCTAssertEqual(chess.getMoveCount(), 42, "Tal(g1): move count")
    XCTAssertEqual(
      chess.getMoveHistory().map { $0.pcn }.joined(separator: ","),
      "c2c4,g8f6,b1c3,g7g6,e2e4,d7d6,d2d4,f8g7,f2f3,e7e5,g1e2,b8d7,c1g5,c7c6,d1d2,e8g8,d4d5,c6c5,g2g4,a7a6,e2g3,f8e8,h2h4,d8a5,g5h6,d7f8,h4h5,a5c7,f1d3,b7b5,e1c1,b5c4,d3b1,g7h8,d1g1,a8b8,g3f5,f6d7,h6g5,h8g7,f5g7,g8g7,g5h6,g7g8,f3f4,e5f4,d2f4,c7d8,h5g6,f8g6,f4h2,d7e5,h6f4,g6f8,h2h6,e5g6,f4g5,f7f6,e4e5,e8e5,b1g6,b8b7,c3e4,f6g5,g1f1,e5e4,g6e4,b7g7,f1f6,c8g4,h1f1,f8d7,f6d6,d8e7,d6a6,g8h8,e4h7,d7b8,h7f5,h8g8,f5e6,g4e6,a6e6",
      "Tal(g1): PCN move history"
    )
    let fens0 = [
      "rnbqkbnr/pppppppp/8/8/2P5/8/PP1PPPPP/RNBQKBNR b KQkq - 0 1",
      "rnbqkb1r/pppppppp/5n2/8/2P5/8/PP1PPPPP/RNBQKBNR w KQkq - 1 2",
      "rnbqkb1r/pppppppp/5n2/8/2P5/2N5/PP1PPPPP/R1BQKBNR b KQkq - 2 2",
      "rnbqkb1r/pppppp1p/5np1/8/2P5/2N5/PP1PPPPP/R1BQKBNR w KQkq - 0 3",
      "rnbqkb1r/pppppp1p/5np1/8/2P1P3/2N5/PP1P1PPP/R1BQKBNR b KQkq - 0 3",
      "rnbqkb1r/ppp1pp1p/3p1np1/8/2P1P3/2N5/PP1P1PPP/R1BQKBNR w KQkq - 0 4",
      "rnbqkb1r/ppp1pp1p/3p1np1/8/2PPP3/2N5/PP3PPP/R1BQKBNR b KQkq - 0 4",
      "rnbqk2r/ppp1ppbp/3p1np1/8/2PPP3/2N5/PP3PPP/R1BQKBNR w KQkq - 1 5",
      "rnbqk2r/ppp1ppbp/3p1np1/8/2PPP3/2N2P2/PP4PP/R1BQKBNR b KQkq - 0 5",
      "rnbqk2r/ppp2pbp/3p1np1/4p3/2PPP3/2N2P2/PP4PP/R1BQKBNR w KQkq - 0 6",
      "rnbqk2r/ppp2pbp/3p1np1/4p3/2PPP3/2N2P2/PP2N1PP/R1BQKB1R b KQkq - 1 6",
      "r1bqk2r/pppn1pbp/3p1np1/4p3/2PPP3/2N2P2/PP2N1PP/R1BQKB1R w KQkq - 2 7",
      "r1bqk2r/pppn1pbp/3p1np1/4p1B1/2PPP3/2N2P2/PP2N1PP/R2QKB1R b KQkq - 3 7",
      "r1bqk2r/pp1n1pbp/2pp1np1/4p1B1/2PPP3/2N2P2/PP2N1PP/R2QKB1R w KQkq - 0 8",
      "r1bqk2r/pp1n1pbp/2pp1np1/4p1B1/2PPP3/2N2P2/PP1QN1PP/R3KB1R b KQkq - 1 8",
      "r1bq1rk1/pp1n1pbp/2pp1np1/4p1B1/2PPP3/2N2P2/PP1QN1PP/R3KB1R w KQ - 2 9",
      "r1bq1rk1/pp1n1pbp/2pp1np1/3Pp1B1/2P1P3/2N2P2/PP1QN1PP/R3KB1R b KQ - 0 9",
      "r1bq1rk1/pp1n1pbp/3p1np1/2pPp1B1/2P1P3/2N2P2/PP1QN1PP/R3KB1R w KQ - 0 10",
      "r1bq1rk1/pp1n1pbp/3p1np1/2pPp1B1/2P1P1P1/2N2P2/PP1QN2P/R3KB1R b KQ - 0 10",
      "r1bq1rk1/1p1n1pbp/p2p1np1/2pPp1B1/2P1P1P1/2N2P2/PP1QN2P/R3KB1R w KQ - 0 11",
      "r1bq1rk1/1p1n1pbp/p2p1np1/2pPp1B1/2P1P1P1/2N2PN1/PP1Q3P/R3KB1R b KQ - 1 11",
      "r1bqr1k1/1p1n1pbp/p2p1np1/2pPp1B1/2P1P1P1/2N2PN1/PP1Q3P/R3KB1R w KQ - 2 12",
      "r1bqr1k1/1p1n1pbp/p2p1np1/2pPp1B1/2P1P1PP/2N2PN1/PP1Q4/R3KB1R b KQ - 0 12",
      "r1b1r1k1/1p1n1pbp/p2p1np1/q1pPp1B1/2P1P1PP/2N2PN1/PP1Q4/R3KB1R w KQ - 1 13",
      "r1b1r1k1/1p1n1pbp/p2p1npB/q1pPp3/2P1P1PP/2N2PN1/PP1Q4/R3KB1R b KQ - 2 13",
      "r1b1rnk1/1p3pbp/p2p1npB/q1pPp3/2P1P1PP/2N2PN1/PP1Q4/R3KB1R w KQ - 3 14",
      "r1b1rnk1/1p3pbp/p2p1npB/q1pPp2P/2P1P1P1/2N2PN1/PP1Q4/R3KB1R b KQ - 0 14",
      "r1b1rnk1/1pq2pbp/p2p1npB/2pPp2P/2P1P1P1/2N2PN1/PP1Q4/R3KB1R w KQ - 1 15",
      "r1b1rnk1/1pq2pbp/p2p1npB/2pPp2P/2P1P1P1/2NB1PN1/PP1Q4/R3K2R b KQ - 2 15",
      "r1b1rnk1/2q2pbp/p2p1npB/1ppPp2P/2P1P1P1/2NB1PN1/PP1Q4/R3K2R w KQ - 0 16",
      "r1b1rnk1/2q2pbp/p2p1npB/1ppPp2P/2P1P1P1/2NB1PN1/PP1Q4/2KR3R b - - 1 16",
      "r1b1rnk1/2q2pbp/p2p1npB/2pPp2P/2p1P1P1/2NB1PN1/PP1Q4/2KR3R w - - 0 17",
      "r1b1rnk1/2q2pbp/p2p1npB/2pPp2P/2p1P1P1/2N2PN1/PP1Q4/1BKR3R b - - 1 17",
      "r1b1rnkb/2q2p1p/p2p1npB/2pPp2P/2p1P1P1/2N2PN1/PP1Q4/1BKR3R w - - 2 18",
      "r1b1rnkb/2q2p1p/p2p1npB/2pPp2P/2p1P1P1/2N2PN1/PP1Q4/1BK3RR b - - 3 18",
      "1rb1rnkb/2q2p1p/p2p1npB/2pPp2P/2p1P1P1/2N2PN1/PP1Q4/1BK3RR w - - 4 19",
      "1rb1rnkb/2q2p1p/p2p1npB/2pPpN1P/2p1P1P1/2N2P2/PP1Q4/1BK3RR b - - 5 19",
      "1rb1rnkb/2qn1p1p/p2p2pB/2pPpN1P/2p1P1P1/2N2P2/PP1Q4/1BK3RR w - - 6 20",
      "1rb1rnkb/2qn1p1p/p2p2p1/2pPpNBP/2p1P1P1/2N2P2/PP1Q4/1BK3RR b - - 7 20",
      "1rb1rnk1/2qn1pbp/p2p2p1/2pPpNBP/2p1P1P1/2N2P2/PP1Q4/1BK3RR w - - 8 21",
      "1rb1rnk1/2qn1pNp/p2p2p1/2pPp1BP/2p1P1P1/2N2P2/PP1Q4/1BK3RR b - - 0 21",
      "1rb1rn2/2qn1pkp/p2p2p1/2pPp1BP/2p1P1P1/2N2P2/PP1Q4/1BK3RR w - - 0 22",
      "1rb1rn2/2qn1pkp/p2p2pB/2pPp2P/2p1P1P1/2N2P2/PP1Q4/1BK3RR b - - 1 22",
      "1rb1rnk1/2qn1p1p/p2p2pB/2pPp2P/2p1P1P1/2N2P2/PP1Q4/1BK3RR w - - 2 23",
      "1rb1rnk1/2qn1p1p/p2p2pB/2pPp2P/2p1PPP1/2N5/PP1Q4/1BK3RR b - - 0 23",
      "1rb1rnk1/2qn1p1p/p2p2pB/2pP3P/2p1PpP1/2N5/PP1Q4/1BK3RR w - - 0 24",
      "1rb1rnk1/2qn1p1p/p2p2pB/2pP3P/2p1PQP1/2N5/PP6/1BK3RR b - - 0 24",
      "1rbqrnk1/3n1p1p/p2p2pB/2pP3P/2p1PQP1/2N5/PP6/1BK3RR w - - 1 25",
      "1rbqrnk1/3n1p1p/p2p2PB/2pP4/2p1PQP1/2N5/PP6/1BK3RR b - - 0 25",
      "1rbqr1k1/3n1p1p/p2p2nB/2pP4/2p1PQP1/2N5/PP6/1BK3RR w - - 0 26",
      "1rbqr1k1/3n1p1p/p2p2nB/2pP4/2p1P1P1/2N5/PP5Q/1BK3RR b - - 1 26",
      "1rbqr1k1/5p1p/p2p2nB/2pPn3/2p1P1P1/2N5/PP5Q/1BK3RR w - - 2 27",
      "1rbqr1k1/5p1p/p2p2n1/2pPn3/2p1PBP1/2N5/PP5Q/1BK3RR b - - 3 27",
      "1rbqrnk1/5p1p/p2p4/2pPn3/2p1PBP1/2N5/PP5Q/1BK3RR w - - 4 28",
      "1rbqrnk1/5p1p/p2p3Q/2pPn3/2p1PBP1/2N5/PP6/1BK3RR b - - 5 28",
      "1rbqrnk1/5p1p/p2p2nQ/2pP4/2p1PBP1/2N5/PP6/1BK3RR w - - 6 29",
      "1rbqrnk1/5p1p/p2p2nQ/2pP2B1/2p1P1P1/2N5/PP6/1BK3RR b - - 7 29",
      "1rbqrnk1/7p/p2p1pnQ/2pP2B1/2p1P1P1/2N5/PP6/1BK3RR w - - 0 30",
      "1rbqrnk1/7p/p2p1pnQ/2pPP1B1/2p3P1/2N5/PP6/1BK3RR b - - 0 30",
      "1rbq1nk1/7p/p2p1pnQ/2pPr1B1/2p3P1/2N5/PP6/1BK3RR w - - 0 31",
      "1rbq1nk1/7p/p2p1pBQ/2pPr1B1/2p3P1/2N5/PP6/2K3RR b - - 0 31",
      "2bq1nk1/1r5p/p2p1pBQ/2pPr1B1/2p3P1/2N5/PP6/2K3RR w - - 1 32",
      "2bq1nk1/1r5p/p2p1pBQ/2pPr1B1/2p1N1P1/8/PP6/2K3RR b - - 2 32",
      "2bq1nk1/1r5p/p2p2BQ/2pPr1p1/2p1N1P1/8/PP6/2K3RR w - - 0 33",
      "2bq1nk1/1r5p/p2p2BQ/2pPr1p1/2p1N1P1/8/PP6/2K2R1R b - - 1 33",
      "2bq1nk1/1r5p/p2p2BQ/2pP2p1/2p1r1P1/8/PP6/2K2R1R w - - 0 34",
      "2bq1nk1/1r5p/p2p3Q/2pP2p1/2p1B1P1/8/PP6/2K2R1R b - - 0 34",
      "2bq1nk1/6rp/p2p3Q/2pP2p1/2p1B1P1/8/PP6/2K2R1R w - - 1 35",
      "2bq1nk1/6rp/p2p1R1Q/2pP2p1/2p1B1P1/8/PP6/2K4R b - - 2 35",
      "3q1nk1/6rp/p2p1R1Q/2pP2p1/2p1B1b1/8/PP6/2K4R w - - 0 36",
      "3q1nk1/6rp/p2p1R1Q/2pP2p1/2p1B1b1/8/PP6/2K2R2 b - - 1 36",
      "3q2k1/3n2rp/p2p1R1Q/2pP2p1/2p1B1b1/8/PP6/2K2R2 w - - 2 37",
      "3q2k1/3n2rp/p2R3Q/2pP2p1/2p1B1b1/8/PP6/2K2R2 b - - 0 37",
      "6k1/3nq1rp/p2R3Q/2pP2p1/2p1B1b1/8/PP6/2K2R2 w - - 1 38",
      "6k1/3nq1rp/R6Q/2pP2p1/2p1B1b1/8/PP6/2K2R2 b - - 0 38",
      "7k/3nq1rp/R6Q/2pP2p1/2p1B1b1/8/PP6/2K2R2 w - - 1 39",
      "7k/3nq1rB/R6Q/2pP2p1/2p3b1/8/PP6/2K2R2 b - - 0 39",
      "1n5k/4q1rB/R6Q/2pP2p1/2p3b1/8/PP6/2K2R2 w - - 1 40",
      "1n5k/4q1r1/R6Q/2pP1Bp1/2p3b1/8/PP6/2K2R2 b - - 2 40",
      "1n4k1/4q1r1/R6Q/2pP1Bp1/2p3b1/8/PP6/2K2R2 w - - 3 41",
      "1n4k1/4q1r1/R3B2Q/2pP2p1/2p3b1/8/PP6/2K2R2 b - - 4 41",
      "1n4k1/4q1r1/R3b2Q/2pP2p1/2p5/8/PP6/2K2R2 w - - 0 42",
      "1n4k1/4q1r1/4R2Q/2pP2p1/2p5/8/PP6/2K2R2 b - - 0 42",
    ]
    for (index, history) in chess.getMoveHistory().enumerated() {
      XCTAssertEqual(history.fen, fens0[index], "Tal(g1): FEN move (index)")
    }

    pgn = pgns.removeFirst()
    chess = try pgn.validate()
    XCTAssertEqual(chess.getTag("Event")?.value, "Riga ;MAINB", "Tal(g2): event")
    XCTAssertEqual(chess.getTag("White")?.value, "Mikhail Tal", "Tal(g2): white")
    XCTAssertEqual(chess.getTag("Black")?.value, "Alexander Koblents", "Tal(g2): black")
    XCTAssertEqual(chess.getMoveCount(), 39, "Tal(g2): move count")
    XCTAssertEqual(
      chess.getMoveHistory().map { $0.pcn }.joined(separator: ","),
      "e2e4,c7c5,g1f3,d7d6,d2d4,c5d4,f3d4,g8f6,b1c3,b8c6,c1g5,e7e6,d1d2,f8e7,e1c1,e8g8,d4b3,d8b6,f2f3,a7a6,g2g4,f8d8,g5e3,b6c7,h2h4,b7b5,g4g5,f6d7,g5g6,h7g6,h4h5,g6h5,h1h5,d7f6,h5h1,d6d5,e4e5,c6e5,e3f4,e7d6,d2h2,g8f8,h2h8,f6g8,h1h7,f7f5,f4h6,d8d7,f1b5,d7f7,d1g1,a8a7,b3d4,e5g4,f3g4,d6e5,d4c6,e5c3,h6e3,d5d4,g1h1,f7d7,e3g5,a6b5,h1h6,d4d3,b2c3,d3d2,c1d1,c7c6,h6f6,d7f7,h8g7,f8e8,g7g8,e8d7,h7f7",
      "Tal(g2): PCN move history"
    )
    let fens1 = [
      "rnbqkbnr/pppppppp/8/8/4P3/8/PPPP1PPP/RNBQKBNR b KQkq - 0 1",
      "rnbqkbnr/pp1ppppp/8/2p5/4P3/8/PPPP1PPP/RNBQKBNR w KQkq - 0 2",
      "rnbqkbnr/pp1ppppp/8/2p5/4P3/5N2/PPPP1PPP/RNBQKB1R b KQkq - 1 2",
      "rnbqkbnr/pp2pppp/3p4/2p5/4P3/5N2/PPPP1PPP/RNBQKB1R w KQkq - 0 3",
      "rnbqkbnr/pp2pppp/3p4/2p5/3PP3/5N2/PPP2PPP/RNBQKB1R b KQkq - 0 3",
      "rnbqkbnr/pp2pppp/3p4/8/3pP3/5N2/PPP2PPP/RNBQKB1R w KQkq - 0 4",
      "rnbqkbnr/pp2pppp/3p4/8/3NP3/8/PPP2PPP/RNBQKB1R b KQkq - 0 4",
      "rnbqkb1r/pp2pppp/3p1n2/8/3NP3/8/PPP2PPP/RNBQKB1R w KQkq - 1 5",
      "rnbqkb1r/pp2pppp/3p1n2/8/3NP3/2N5/PPP2PPP/R1BQKB1R b KQkq - 2 5",
      "r1bqkb1r/pp2pppp/2np1n2/8/3NP3/2N5/PPP2PPP/R1BQKB1R w KQkq - 3 6",
      "r1bqkb1r/pp2pppp/2np1n2/6B1/3NP3/2N5/PPP2PPP/R2QKB1R b KQkq - 4 6",
      "r1bqkb1r/pp3ppp/2nppn2/6B1/3NP3/2N5/PPP2PPP/R2QKB1R w KQkq - 0 7",
      "r1bqkb1r/pp3ppp/2nppn2/6B1/3NP3/2N5/PPPQ1PPP/R3KB1R b KQkq - 1 7",
      "r1bqk2r/pp2bppp/2nppn2/6B1/3NP3/2N5/PPPQ1PPP/R3KB1R w KQkq - 2 8",
      "r1bqk2r/pp2bppp/2nppn2/6B1/3NP3/2N5/PPPQ1PPP/2KR1B1R b kq - 3 8",
      "r1bq1rk1/pp2bppp/2nppn2/6B1/3NP3/2N5/PPPQ1PPP/2KR1B1R w - - 4 9",
      "r1bq1rk1/pp2bppp/2nppn2/6B1/4P3/1NN5/PPPQ1PPP/2KR1B1R b - - 5 9",
      "r1b2rk1/pp2bppp/1qnppn2/6B1/4P3/1NN5/PPPQ1PPP/2KR1B1R w - - 6 10",
      "r1b2rk1/pp2bppp/1qnppn2/6B1/4P3/1NN2P2/PPPQ2PP/2KR1B1R b - - 0 10",
      "r1b2rk1/1p2bppp/pqnppn2/6B1/4P3/1NN2P2/PPPQ2PP/2KR1B1R w - - 0 11",
      "r1b2rk1/1p2bppp/pqnppn2/6B1/4P1P1/1NN2P2/PPPQ3P/2KR1B1R b - - 0 11",
      "r1br2k1/1p2bppp/pqnppn2/6B1/4P1P1/1NN2P2/PPPQ3P/2KR1B1R w - - 1 12",
      "r1br2k1/1p2bppp/pqnppn2/8/4P1P1/1NN1BP2/PPPQ3P/2KR1B1R b - - 2 12",
      "r1br2k1/1pq1bppp/p1nppn2/8/4P1P1/1NN1BP2/PPPQ3P/2KR1B1R w - - 3 13",
      "r1br2k1/1pq1bppp/p1nppn2/8/4P1PP/1NN1BP2/PPPQ4/2KR1B1R b - - 0 13",
      "r1br2k1/2q1bppp/p1nppn2/1p6/4P1PP/1NN1BP2/PPPQ4/2KR1B1R w - - 0 14",
      "r1br2k1/2q1bppp/p1nppn2/1p4P1/4P2P/1NN1BP2/PPPQ4/2KR1B1R b - - 0 14",
      "r1br2k1/2qnbppp/p1npp3/1p4P1/4P2P/1NN1BP2/PPPQ4/2KR1B1R w - - 1 15",
      "r1br2k1/2qnbppp/p1npp1P1/1p6/4P2P/1NN1BP2/PPPQ4/2KR1B1R b - - 0 15",
      "r1br2k1/2qnbpp1/p1npp1p1/1p6/4P2P/1NN1BP2/PPPQ4/2KR1B1R w - - 0 16",
      "r1br2k1/2qnbpp1/p1npp1p1/1p5P/4P3/1NN1BP2/PPPQ4/2KR1B1R b - - 0 16",
      "r1br2k1/2qnbpp1/p1npp3/1p5p/4P3/1NN1BP2/PPPQ4/2KR1B1R w - - 0 17",
      "r1br2k1/2qnbpp1/p1npp3/1p5R/4P3/1NN1BP2/PPPQ4/2KR1B2 b - - 0 17",
      "r1br2k1/2q1bpp1/p1nppn2/1p5R/4P3/1NN1BP2/PPPQ4/2KR1B2 w - - 1 18",
      "r1br2k1/2q1bpp1/p1nppn2/1p6/4P3/1NN1BP2/PPPQ4/2KR1B1R b - - 2 18",
      "r1br2k1/2q1bpp1/p1n1pn2/1p1p4/4P3/1NN1BP2/PPPQ4/2KR1B1R w - - 0 19",
      "r1br2k1/2q1bpp1/p1n1pn2/1p1pP3/8/1NN1BP2/PPPQ4/2KR1B1R b - - 0 19",
      "r1br2k1/2q1bpp1/p3pn2/1p1pn3/8/1NN1BP2/PPPQ4/2KR1B1R w - - 0 20",
      "r1br2k1/2q1bpp1/p3pn2/1p1pn3/5B2/1NN2P2/PPPQ4/2KR1B1R b - - 1 20",
      "r1br2k1/2q2pp1/p2bpn2/1p1pn3/5B2/1NN2P2/PPPQ4/2KR1B1R w - - 2 21",
      "r1br2k1/2q2pp1/p2bpn2/1p1pn3/5B2/1NN2P2/PPP4Q/2KR1B1R b - - 3 21",
      "r1br1k2/2q2pp1/p2bpn2/1p1pn3/5B2/1NN2P2/PPP4Q/2KR1B1R w - - 4 22",
      "r1br1k1Q/2q2pp1/p2bpn2/1p1pn3/5B2/1NN2P2/PPP5/2KR1B1R b - - 5 22",
      "r1br1knQ/2q2pp1/p2bp3/1p1pn3/5B2/1NN2P2/PPP5/2KR1B1R w - - 6 23",
      "r1br1knQ/2q2ppR/p2bp3/1p1pn3/5B2/1NN2P2/PPP5/2KR1B2 b - - 7 23",
      "r1br1knQ/2q3pR/p2bp3/1p1pnp2/5B2/1NN2P2/PPP5/2KR1B2 w - - 0 24",
      "r1br1knQ/2q3pR/p2bp2B/1p1pnp2/8/1NN2P2/PPP5/2KR1B2 b - - 1 24",
      "r1b2knQ/2qr2pR/p2bp2B/1p1pnp2/8/1NN2P2/PPP5/2KR1B2 w - - 2 25",
      "r1b2knQ/2qr2pR/p2bp2B/1B1pnp2/8/1NN2P2/PPP5/2KR4 b - - 0 25",
      "r1b2knQ/2q2rpR/p2bp2B/1B1pnp2/8/1NN2P2/PPP5/2KR4 w - - 1 26",
      "r1b2knQ/2q2rpR/p2bp2B/1B1pnp2/8/1NN2P2/PPP5/2K3R1 b - - 2 26",
      "2b2knQ/r1q2rpR/p2bp2B/1B1pnp2/8/1NN2P2/PPP5/2K3R1 w - - 3 27",
      "2b2knQ/r1q2rpR/p2bp2B/1B1pnp2/3N4/2N2P2/PPP5/2K3R1 b - - 4 27",
      "2b2knQ/r1q2rpR/p2bp2B/1B1p1p2/3N2n1/2N2P2/PPP5/2K3R1 w - - 5 28",
      "2b2knQ/r1q2rpR/p2bp2B/1B1p1p2/3N2P1/2N5/PPP5/2K3R1 b - - 0 28",
      "2b2knQ/r1q2rpR/p3p2B/1B1pbp2/3N2P1/2N5/PPP5/2K3R1 w - - 1 29",
      "2b2knQ/r1q2rpR/p1N1p2B/1B1pbp2/6P1/2N5/PPP5/2K3R1 b - - 2 29",
      "2b2knQ/r1q2rpR/p1N1p2B/1B1p1p2/6P1/2b5/PPP5/2K3R1 w - - 0 30",
      "2b2knQ/r1q2rpR/p1N1p3/1B1p1p2/6P1/2b1B3/PPP5/2K3R1 b - - 1 30",
      "2b2knQ/r1q2rpR/p1N1p3/1B3p2/3p2P1/2b1B3/PPP5/2K3R1 w - - 0 31",
      "2b2knQ/r1q2rpR/p1N1p3/1B3p2/3p2P1/2b1B3/PPP5/2K4R b - - 1 31",
      "2b2knQ/r1qr2pR/p1N1p3/1B3p2/3p2P1/2b1B3/PPP5/2K4R w - - 2 32",
      "2b2knQ/r1qr2pR/p1N1p3/1B3pB1/3p2P1/2b5/PPP5/2K4R b - - 3 32",
      "2b2knQ/r1qr2pR/2N1p3/1p3pB1/3p2P1/2b5/PPP5/2K4R w - - 0 33",
      "2b2knQ/r1qr2pR/2N1p2R/1p3pB1/3p2P1/2b5/PPP5/2K5 b - - 1 33",
      "2b2knQ/r1qr2pR/2N1p2R/1p3pB1/6P1/2bp4/PPP5/2K5 w - - 0 34",
      "2b2knQ/r1qr2pR/2N1p2R/1p3pB1/6P1/2Pp4/P1P5/2K5 b - - 0 34",
      "2b2knQ/r1qr2pR/2N1p2R/1p3pB1/6P1/2P5/P1Pp4/2K5 w - - 0 35",
      "2b2knQ/r1qr2pR/2N1p2R/1p3pB1/6P1/2P5/P1Pp4/3K4 b - - 1 35",
      "2b2knQ/r2r2pR/2q1p2R/1p3pB1/6P1/2P5/P1Pp4/3K4 w - - 0 36",
      "2b2knQ/r2r2pR/2q1pR2/1p3pB1/6P1/2P5/P1Pp4/3K4 b - - 1 36",
      "2b2knQ/r4rpR/2q1pR2/1p3pB1/6P1/2P5/P1Pp4/3K4 w - - 2 37",
      "2b2kn1/r4rQR/2q1pR2/1p3pB1/6P1/2P5/P1Pp4/3K4 b - - 0 37",
      "2b1k1n1/r4rQR/2q1pR2/1p3pB1/6P1/2P5/P1Pp4/3K4 w - - 1 38",
      "2b1k1Q1/r4r1R/2q1pR2/1p3pB1/6P1/2P5/P1Pp4/3K4 b - - 0 38",
      "2b3Q1/r2k1r1R/2q1pR2/1p3pB1/6P1/2P5/P1Pp4/3K4 w - - 1 39",
      "2b3Q1/r2k1R2/2q1pR2/1p3pB1/6P1/2P5/P1Pp4/3K4 b - - 0 39",
    ]
    for (index, history) in chess.getMoveHistory().enumerated() {
      XCTAssertEqual(history.fen, fens1[index], "Tal(g2): FEN move (index)")
    }

    pgn = pgns.removeFirst()
    chess = try pgn.validate()
    XCTAssertEqual(chess.getTag("Event")?.value, "WchT U26 fin-A 05th", "Tal(g3): event")
    XCTAssertEqual(chess.getTag("White")?.value, "Milko Bobotsov", "Tal(g3): white")
    XCTAssertEqual(chess.getTag("Black")?.value, "Mikhail Tal", "Tal(g3): black")
    XCTAssertEqual(chess.getMoveCount(), 31, "Tal(g3): move count")
    XCTAssertEqual(
      chess.getMoveHistory().map { $0.pcn }.joined(separator: ","),
      "d2d4,g8f6,c2c4,g7g6,b1c3,f8g7,e2e4,d7d6,f2f3,e8g8,g1e2,c7c5,c1e3,b8d7,d1d2,a7a6,e1c1,d8a5,c1b1,b7b5,c3d5,f6d5,d2a5,d5e3,d1c1,e3c4,c1c4,b5c4,e2c1,a8b8,f1c4,d7b6,c4b3,g7d4,a5d2,d4g7,c1e2,c5c4,b3c2,c4c3,d2d3,c3b2,e2d4,c8d7,h1d1,f8c8,c2b3,b6a4,b3a4,d7a4,d4b3,c8c3,d3a6,a4b3,a2b3,b8c8,a6a3,c3c1,d1c1,c8c1",
      "Tal(g3): PCN move history"
    )
    let fens2 = [
      "rnbqkbnr/pppppppp/8/8/3P4/8/PPP1PPPP/RNBQKBNR b KQkq - 0 1",
      "rnbqkb1r/pppppppp/5n2/8/3P4/8/PPP1PPPP/RNBQKBNR w KQkq - 1 2",
      "rnbqkb1r/pppppppp/5n2/8/2PP4/8/PP2PPPP/RNBQKBNR b KQkq - 0 2",
      "rnbqkb1r/pppppp1p/5np1/8/2PP4/8/PP2PPPP/RNBQKBNR w KQkq - 0 3",
      "rnbqkb1r/pppppp1p/5np1/8/2PP4/2N5/PP2PPPP/R1BQKBNR b KQkq - 1 3",
      "rnbqk2r/ppppppbp/5np1/8/2PP4/2N5/PP2PPPP/R1BQKBNR w KQkq - 2 4",
      "rnbqk2r/ppppppbp/5np1/8/2PPP3/2N5/PP3PPP/R1BQKBNR b KQkq - 0 4",
      "rnbqk2r/ppp1ppbp/3p1np1/8/2PPP3/2N5/PP3PPP/R1BQKBNR w KQkq - 0 5",
      "rnbqk2r/ppp1ppbp/3p1np1/8/2PPP3/2N2P2/PP4PP/R1BQKBNR b KQkq - 0 5",
      "rnbq1rk1/ppp1ppbp/3p1np1/8/2PPP3/2N2P2/PP4PP/R1BQKBNR w KQ - 1 6",
      "rnbq1rk1/ppp1ppbp/3p1np1/8/2PPP3/2N2P2/PP2N1PP/R1BQKB1R b KQ - 2 6",
      "rnbq1rk1/pp2ppbp/3p1np1/2p5/2PPP3/2N2P2/PP2N1PP/R1BQKB1R w KQ - 0 7",
      "rnbq1rk1/pp2ppbp/3p1np1/2p5/2PPP3/2N1BP2/PP2N1PP/R2QKB1R b KQ - 1 7",
      "r1bq1rk1/pp1nppbp/3p1np1/2p5/2PPP3/2N1BP2/PP2N1PP/R2QKB1R w KQ - 2 8",
      "r1bq1rk1/pp1nppbp/3p1np1/2p5/2PPP3/2N1BP2/PP1QN1PP/R3KB1R b KQ - 3 8",
      "r1bq1rk1/1p1nppbp/p2p1np1/2p5/2PPP3/2N1BP2/PP1QN1PP/R3KB1R w KQ - 0 9",
      "r1bq1rk1/1p1nppbp/p2p1np1/2p5/2PPP3/2N1BP2/PP1QN1PP/2KR1B1R b - - 1 9",
      "r1b2rk1/1p1nppbp/p2p1np1/q1p5/2PPP3/2N1BP2/PP1QN1PP/2KR1B1R w - - 2 10",
      "r1b2rk1/1p1nppbp/p2p1np1/q1p5/2PPP3/2N1BP2/PP1QN1PP/1K1R1B1R b - - 3 10",
      "r1b2rk1/3nppbp/p2p1np1/qpp5/2PPP3/2N1BP2/PP1QN1PP/1K1R1B1R w - - 0 11",
      "r1b2rk1/3nppbp/p2p1np1/qppN4/2PPP3/4BP2/PP1QN1PP/1K1R1B1R b - - 1 11",
      "r1b2rk1/3nppbp/p2p2p1/qppn4/2PPP3/4BP2/PP1QN1PP/1K1R1B1R w - - 0 12",
      "r1b2rk1/3nppbp/p2p2p1/Qppn4/2PPP3/4BP2/PP2N1PP/1K1R1B1R b - - 0 12",
      "r1b2rk1/3nppbp/p2p2p1/Qpp5/2PPP3/4nP2/PP2N1PP/1K1R1B1R w - - 0 13",
      "r1b2rk1/3nppbp/p2p2p1/Qpp5/2PPP3/4nP2/PP2N1PP/1KR2B1R b - - 1 13",
      "r1b2rk1/3nppbp/p2p2p1/Qpp5/2nPP3/5P2/PP2N1PP/1KR2B1R w - - 0 14",
      "r1b2rk1/3nppbp/p2p2p1/Qpp5/2RPP3/5P2/PP2N1PP/1K3B1R b - - 0 14",
      "r1b2rk1/3nppbp/p2p2p1/Q1p5/2pPP3/5P2/PP2N1PP/1K3B1R w - - 0 15",
      "r1b2rk1/3nppbp/p2p2p1/Q1p5/2pPP3/5P2/PP4PP/1KN2B1R b - - 1 15",
      "1rb2rk1/3nppbp/p2p2p1/Q1p5/2pPP3/5P2/PP4PP/1KN2B1R w - - 2 16",
      "1rb2rk1/3nppbp/p2p2p1/Q1p5/2BPP3/5P2/PP4PP/1KN4R b - - 0 16",
      "1rb2rk1/4ppbp/pn1p2p1/Q1p5/2BPP3/5P2/PP4PP/1KN4R w - - 1 17",
      "1rb2rk1/4ppbp/pn1p2p1/Q1p5/3PP3/1B3P2/PP4PP/1KN4R b - - 2 17",
      "1rb2rk1/4pp1p/pn1p2p1/Q1p5/3bP3/1B3P2/PP4PP/1KN4R w - - 0 18",
      "1rb2rk1/4pp1p/pn1p2p1/2p5/3bP3/1B3P2/PP1Q2PP/1KN4R b - - 1 18",
      "1rb2rk1/4ppbp/pn1p2p1/2p5/4P3/1B3P2/PP1Q2PP/1KN4R w - - 2 19",
      "1rb2rk1/4ppbp/pn1p2p1/2p5/4P3/1B3P2/PP1QN1PP/1K5R b - - 3 19",
      "1rb2rk1/4ppbp/pn1p2p1/8/2p1P3/1B3P2/PP1QN1PP/1K5R w - - 0 20",
      "1rb2rk1/4ppbp/pn1p2p1/8/2p1P3/5P2/PPBQN1PP/1K5R b - - 1 20",
      "1rb2rk1/4ppbp/pn1p2p1/8/4P3/2p2P2/PPBQN1PP/1K5R w - - 0 21",
      "1rb2rk1/4ppbp/pn1p2p1/8/4P3/2pQ1P2/PPB1N1PP/1K5R b - - 1 21",
      "1rb2rk1/4ppbp/pn1p2p1/8/4P3/3Q1P2/PpB1N1PP/1K5R w - - 0 22",
      "1rb2rk1/4ppbp/pn1p2p1/8/3NP3/3Q1P2/PpB3PP/1K5R b - - 1 22",
      "1r3rk1/3bppbp/pn1p2p1/8/3NP3/3Q1P2/PpB3PP/1K5R w - - 2 23",
      "1r3rk1/3bppbp/pn1p2p1/8/3NP3/3Q1P2/PpB3PP/1K1R4 b - - 3 23",
      "1rr3k1/3bppbp/pn1p2p1/8/3NP3/3Q1P2/PpB3PP/1K1R4 w - - 4 24",
      "1rr3k1/3bppbp/pn1p2p1/8/3NP3/1B1Q1P2/Pp4PP/1K1R4 b - - 5 24",
      "1rr3k1/3bppbp/p2p2p1/8/n2NP3/1B1Q1P2/Pp4PP/1K1R4 w - - 6 25",
      "1rr3k1/3bppbp/p2p2p1/8/B2NP3/3Q1P2/Pp4PP/1K1R4 b - - 0 25",
      "1rr3k1/4ppbp/p2p2p1/8/b2NP3/3Q1P2/Pp4PP/1K1R4 w - - 0 26",
      "1rr3k1/4ppbp/p2p2p1/8/b3P3/1N1Q1P2/Pp4PP/1K1R4 b - - 1 26",
      "1r4k1/4ppbp/p2p2p1/8/b3P3/1NrQ1P2/Pp4PP/1K1R4 w - - 2 27",
      "1r4k1/4ppbp/Q2p2p1/8/b3P3/1Nr2P2/Pp4PP/1K1R4 b - - 0 27",
      "1r4k1/4ppbp/Q2p2p1/8/4P3/1br2P2/Pp4PP/1K1R4 w - - 0 28",
      "1r4k1/4ppbp/Q2p2p1/8/4P3/1Pr2P2/1p4PP/1K1R4 b - - 0 28",
      "2r3k1/4ppbp/Q2p2p1/8/4P3/1Pr2P2/1p4PP/1K1R4 w - - 1 29",
      "2r3k1/4ppbp/3p2p1/8/4P3/QPr2P2/1p4PP/1K1R4 b - - 2 29",
      "2r3k1/4ppbp/3p2p1/8/4P3/QP3P2/1p4PP/1KrR4 w - - 3 30",
      "2r3k1/4ppbp/3p2p1/8/4P3/QP3P2/1p4PP/1KR5 b - - 0 30",
      "6k1/4ppbp/3p2p1/8/4P3/QP3P2/1p4PP/1Kr5 w - - 0 31",
    ]
    for (index, history) in chess.getMoveHistory().enumerated() {
      XCTAssertEqual(history.fen, fens2[index], "Tal(g3): FEN move (index)")
    }

    pgn = pgns.removeFirst()
    chess = try pgn.validate()
    XCTAssertEqual(
      chess.getTag("Event")?.value, "Bled-Zagreb-Belgrade Candidates", "Tal(g4): event")
    XCTAssertEqual(chess.getTag("White")?.value, "Mikhail Tal", "Tal(g4): white")
    XCTAssertEqual(chess.getTag("Black")?.value, "Vasily Smyslov", "Tal(g4): black")
    XCTAssertEqual(chess.getMoveCount(), 26, "Tal(g4): move count")
    XCTAssertEqual(
      chess.getMoveHistory().map { $0.pcn }.joined(separator: ","),
      "e2e4,c7c6,d2d3,d7d5,b1d2,e7e5,g1f3,b8d7,d3d4,d5e4,d2e4,e5d4,d1d4,g8f6,c1g5,f8e7,e1c1,e8g8,e4d6,d8a5,f1c4,b7b5,g5d2,a5a6,d6f5,e7d8,d4h4,b5c4,h4g5,f6h5,f5h6,g8h8,g5h5,a6a2,d2c3,d7f6,h5f7,a2a1,c1d2,f8f7,h6f7,h8g8,d1a1,g8f7,f3e5,f7e6,e5c6,f6e4,d2e3,d8b6,c3d4",
      "Tal(g4): PCN move history"
    )
    let fens3 = [
      "rnbqkbnr/pppppppp/8/8/4P3/8/PPPP1PPP/RNBQKBNR b KQkq - 0 1",
      "rnbqkbnr/pp1ppppp/2p5/8/4P3/8/PPPP1PPP/RNBQKBNR w KQkq - 0 2",
      "rnbqkbnr/pp1ppppp/2p5/8/4P3/3P4/PPP2PPP/RNBQKBNR b KQkq - 0 2",
      "rnbqkbnr/pp2pppp/2p5/3p4/4P3/3P4/PPP2PPP/RNBQKBNR w KQkq - 0 3",
      "rnbqkbnr/pp2pppp/2p5/3p4/4P3/3P4/PPPN1PPP/R1BQKBNR b KQkq - 1 3",
      "rnbqkbnr/pp3ppp/2p5/3pp3/4P3/3P4/PPPN1PPP/R1BQKBNR w KQkq - 0 4",
      "rnbqkbnr/pp3ppp/2p5/3pp3/4P3/3P1N2/PPPN1PPP/R1BQKB1R b KQkq - 1 4",
      "r1bqkbnr/pp1n1ppp/2p5/3pp3/4P3/3P1N2/PPPN1PPP/R1BQKB1R w KQkq - 2 5",
      "r1bqkbnr/pp1n1ppp/2p5/3pp3/3PP3/5N2/PPPN1PPP/R1BQKB1R b KQkq - 0 5",
      "r1bqkbnr/pp1n1ppp/2p5/4p3/3Pp3/5N2/PPPN1PPP/R1BQKB1R w KQkq - 0 6",
      "r1bqkbnr/pp1n1ppp/2p5/4p3/3PN3/5N2/PPP2PPP/R1BQKB1R b KQkq - 0 6",
      "r1bqkbnr/pp1n1ppp/2p5/8/3pN3/5N2/PPP2PPP/R1BQKB1R w KQkq - 0 7",
      "r1bqkbnr/pp1n1ppp/2p5/8/3QN3/5N2/PPP2PPP/R1B1KB1R b KQkq - 0 7",
      "r1bqkb1r/pp1n1ppp/2p2n2/8/3QN3/5N2/PPP2PPP/R1B1KB1R w KQkq - 1 8",
      "r1bqkb1r/pp1n1ppp/2p2n2/6B1/3QN3/5N2/PPP2PPP/R3KB1R b KQkq - 2 8",
      "r1bqk2r/pp1nbppp/2p2n2/6B1/3QN3/5N2/PPP2PPP/R3KB1R w KQkq - 3 9",
      "r1bqk2r/pp1nbppp/2p2n2/6B1/3QN3/5N2/PPP2PPP/2KR1B1R b kq - 4 9",
      "r1bq1rk1/pp1nbppp/2p2n2/6B1/3QN3/5N2/PPP2PPP/2KR1B1R w - - 5 10",
      "r1bq1rk1/pp1nbppp/2pN1n2/6B1/3Q4/5N2/PPP2PPP/2KR1B1R b - - 6 10",
      "r1b2rk1/pp1nbppp/2pN1n2/q5B1/3Q4/5N2/PPP2PPP/2KR1B1R w - - 7 11",
      "r1b2rk1/pp1nbppp/2pN1n2/q5B1/2BQ4/5N2/PPP2PPP/2KR3R b - - 8 11",
      "r1b2rk1/p2nbppp/2pN1n2/qp4B1/2BQ4/5N2/PPP2PPP/2KR3R w - - 0 12",
      "r1b2rk1/p2nbppp/2pN1n2/qp6/2BQ4/5N2/PPPB1PPP/2KR3R b - - 1 12",
      "r1b2rk1/p2nbppp/q1pN1n2/1p6/2BQ4/5N2/PPPB1PPP/2KR3R w - - 2 13",
      "r1b2rk1/p2nbppp/q1p2n2/1p3N2/2BQ4/5N2/PPPB1PPP/2KR3R b - - 3 13",
      "r1bb1rk1/p2n1ppp/q1p2n2/1p3N2/2BQ4/5N2/PPPB1PPP/2KR3R w - - 4 14",
      "r1bb1rk1/p2n1ppp/q1p2n2/1p3N2/2B4Q/5N2/PPPB1PPP/2KR3R b - - 5 14",
      "r1bb1rk1/p2n1ppp/q1p2n2/5N2/2p4Q/5N2/PPPB1PPP/2KR3R w - - 0 15",
      "r1bb1rk1/p2n1ppp/q1p2n2/5NQ1/2p5/5N2/PPPB1PPP/2KR3R b - - 1 15",
      "r1bb1rk1/p2n1ppp/q1p5/5NQn/2p5/5N2/PPPB1PPP/2KR3R w - - 2 16",
      "r1bb1rk1/p2n1ppp/q1p4N/6Qn/2p5/5N2/PPPB1PPP/2KR3R b - - 3 16",
      "r1bb1r1k/p2n1ppp/q1p4N/6Qn/2p5/5N2/PPPB1PPP/2KR3R w - - 4 17",
      "r1bb1r1k/p2n1ppp/q1p4N/7Q/2p5/5N2/PPPB1PPP/2KR3R b - - 0 17",
      "r1bb1r1k/p2n1ppp/2p4N/7Q/2p5/5N2/qPPB1PPP/2KR3R w - - 0 18",
      "r1bb1r1k/p2n1ppp/2p4N/7Q/2p5/2B2N2/qPP2PPP/2KR3R b - - 1 18",
      "r1bb1r1k/p4ppp/2p2n1N/7Q/2p5/2B2N2/qPP2PPP/2KR3R w - - 2 19",
      "r1bb1r1k/p4Qpp/2p2n1N/8/2p5/2B2N2/qPP2PPP/2KR3R b - - 0 19",
      "r1bb1r1k/p4Qpp/2p2n1N/8/2p5/2B2N2/1PP2PPP/q1KR3R w - - 1 20",
      "r1bb1r1k/p4Qpp/2p2n1N/8/2p5/2B2N2/1PPK1PPP/q2R3R b - - 2 20",
      "r1bb3k/p4rpp/2p2n1N/8/2p5/2B2N2/1PPK1PPP/q2R3R w - - 0 21",
      "r1bb3k/p4Npp/2p2n2/8/2p5/2B2N2/1PPK1PPP/q2R3R b - - 0 21",
      "r1bb2k1/p4Npp/2p2n2/8/2p5/2B2N2/1PPK1PPP/q2R3R w - - 1 22",
      "r1bb2k1/p4Npp/2p2n2/8/2p5/2B2N2/1PPK1PPP/R6R b - - 0 22",
      "r1bb4/p4kpp/2p2n2/8/2p5/2B2N2/1PPK1PPP/R6R w - - 0 23",
      "r1bb4/p4kpp/2p2n2/4N3/2p5/2B5/1PPK1PPP/R6R b - - 1 23",
      "r1bb4/p5pp/2p1kn2/4N3/2p5/2B5/1PPK1PPP/R6R w - - 2 24",
      "r1bb4/p5pp/2N1kn2/8/2p5/2B5/1PPK1PPP/R6R b - - 0 24",
      "r1bb4/p5pp/2N1k3/8/2p1n3/2B5/1PPK1PPP/R6R w - - 1 25",
      "r1bb4/p5pp/2N1k3/8/2p1n3/2B1K3/1PP2PPP/R6R b - - 2 25",
      "r1b5/p5pp/1bN1k3/8/2p1n3/2B1K3/1PP2PPP/R6R w - - 3 26",
      "r1b5/p5pp/1bN1k3/8/2pBn3/4K3/1PP2PPP/R6R b - - 4 26",
    ]
    for (index, history) in chess.getMoveHistory().enumerated() {
      XCTAssertEqual(history.fen, fens3[index], "Tal(g4): FEN move (index)")
    }

    pgn = pgns.removeFirst()
    chess = try pgn.validate()
    XCTAssertEqual(
      chess.getTag("Event")?.value, "Botvinnik - Tal World Championship Matc", "Tal(g5): event")
    XCTAssertEqual(chess.getTag("White")?.value, "Mikhail Tal", "Tal(g5): white")
    XCTAssertEqual(chess.getTag("Black")?.value, "Mikhail Botvinnik", "Tal(g5): black")
    XCTAssertEqual(chess.getMoveCount(), 32, "Tal(g5): move count")
    XCTAssertEqual(
      chess.getMoveHistory().map { $0.pcn }.joined(separator: ","),
      "e2e4,e7e6,d2d4,d7d5,b1c3,f8b4,e4e5,c7c5,a2a3,b4c3,b2c3,d8c7,d1g4,f7f5,g4g3,g8e7,g3g7,h8g8,g7h7,c5d4,e1d1,c8d7,h7h5,e7g6,g1e2,d4d3,c2d3,d7a4,d1e1,c7e5,c1g5,b8c6,d3d4,e5c7,h2h4,e6e5,h1h3,c7f7,d4e5,c6e5,h3e3,e8d7,a1b1,b7b6,e2f4,a8e8,b1b4,a4c6,h5d1,g6f4,b4f4,e5g6,f4d4,e8e3,f2e3,d7c7,c3c4,d5c4,f1c4,f7g7,c4g8,g7g8,h4h5",
      "Tal(g5): PCN move history"
    )
    let fens4 = [
      "rnbqkbnr/pppppppp/8/8/4P3/8/PPPP1PPP/RNBQKBNR b KQkq - 0 1",
      "rnbqkbnr/pppp1ppp/4p3/8/4P3/8/PPPP1PPP/RNBQKBNR w KQkq - 0 2",
      "rnbqkbnr/pppp1ppp/4p3/8/3PP3/8/PPP2PPP/RNBQKBNR b KQkq - 0 2",
      "rnbqkbnr/ppp2ppp/4p3/3p4/3PP3/8/PPP2PPP/RNBQKBNR w KQkq - 0 3",
      "rnbqkbnr/ppp2ppp/4p3/3p4/3PP3/2N5/PPP2PPP/R1BQKBNR b KQkq - 1 3",
      "rnbqk1nr/ppp2ppp/4p3/3p4/1b1PP3/2N5/PPP2PPP/R1BQKBNR w KQkq - 2 4",
      "rnbqk1nr/ppp2ppp/4p3/3pP3/1b1P4/2N5/PPP2PPP/R1BQKBNR b KQkq - 0 4",
      "rnbqk1nr/pp3ppp/4p3/2ppP3/1b1P4/2N5/PPP2PPP/R1BQKBNR w KQkq - 0 5",
      "rnbqk1nr/pp3ppp/4p3/2ppP3/1b1P4/P1N5/1PP2PPP/R1BQKBNR b KQkq - 0 5",
      "rnbqk1nr/pp3ppp/4p3/2ppP3/3P4/P1b5/1PP2PPP/R1BQKBNR w KQkq - 0 6",
      "rnbqk1nr/pp3ppp/4p3/2ppP3/3P4/P1P5/2P2PPP/R1BQKBNR b KQkq - 0 6",
      "rnb1k1nr/ppq2ppp/4p3/2ppP3/3P4/P1P5/2P2PPP/R1BQKBNR w KQkq - 1 7",
      "rnb1k1nr/ppq2ppp/4p3/2ppP3/3P2Q1/P1P5/2P2PPP/R1B1KBNR b KQkq - 2 7",
      "rnb1k1nr/ppq3pp/4p3/2ppPp2/3P2Q1/P1P5/2P2PPP/R1B1KBNR w KQkq f6 0 8",
      "rnb1k1nr/ppq3pp/4p3/2ppPp2/3P4/P1P3Q1/2P2PPP/R1B1KBNR b KQkq - 1 8",
      "rnb1k2r/ppq1n1pp/4p3/2ppPp2/3P4/P1P3Q1/2P2PPP/R1B1KBNR w KQkq - 2 9",
      "rnb1k2r/ppq1n1Qp/4p3/2ppPp2/3P4/P1P5/2P2PPP/R1B1KBNR b KQkq - 0 9",
      "rnb1k1r1/ppq1n1Qp/4p3/2ppPp2/3P4/P1P5/2P2PPP/R1B1KBNR w KQq - 1 10",
      "rnb1k1r1/ppq1n2Q/4p3/2ppPp2/3P4/P1P5/2P2PPP/R1B1KBNR b KQq - 0 10",
      "rnb1k1r1/ppq1n2Q/4p3/3pPp2/3p4/P1P5/2P2PPP/R1B1KBNR w KQq - 0 11",
      "rnb1k1r1/ppq1n2Q/4p3/3pPp2/3p4/P1P5/2P2PPP/R1BK1BNR b q - 1 11",
      "rn2k1r1/ppqbn2Q/4p3/3pPp2/3p4/P1P5/2P2PPP/R1BK1BNR w q - 2 12",
      "rn2k1r1/ppqbn3/4p3/3pPp1Q/3p4/P1P5/2P2PPP/R1BK1BNR b q - 3 12",
      "rn2k1r1/ppqb4/4p1n1/3pPp1Q/3p4/P1P5/2P2PPP/R1BK1BNR w q - 4 13",
      "rn2k1r1/ppqb4/4p1n1/3pPp1Q/3p4/P1P5/2P1NPPP/R1BK1B1R b q - 5 13",
      "rn2k1r1/ppqb4/4p1n1/3pPp1Q/8/P1Pp4/2P1NPPP/R1BK1B1R w q - 0 14",
      "rn2k1r1/ppqb4/4p1n1/3pPp1Q/8/P1PP4/4NPPP/R1BK1B1R b q - 0 14",
      "rn2k1r1/ppq5/4p1n1/3pPp1Q/b7/P1PP4/4NPPP/R1BK1B1R w q - 1 15",
      "rn2k1r1/ppq5/4p1n1/3pPp1Q/b7/P1PP4/4NPPP/R1B1KB1R b q - 2 15",
      "rn2k1r1/pp6/4p1n1/3pqp1Q/b7/P1PP4/4NPPP/R1B1KB1R w q - 0 16",
      "rn2k1r1/pp6/4p1n1/3pqpBQ/b7/P1PP4/4NPPP/R3KB1R b q - 1 16",
      "r3k1r1/pp6/2n1p1n1/3pqpBQ/b7/P1PP4/4NPPP/R3KB1R w q - 2 17",
      "r3k1r1/pp6/2n1p1n1/3pqpBQ/b2P4/P1P5/4NPPP/R3KB1R b q - 0 17",
      "r3k1r1/ppq5/2n1p1n1/3p1pBQ/b2P4/P1P5/4NPPP/R3KB1R w q - 1 18",
      "r3k1r1/ppq5/2n1p1n1/3p1pBQ/b2P3P/P1P5/4NPP1/R3KB1R b q - 0 18",
      "r3k1r1/ppq5/2n3n1/3pppBQ/b2P3P/P1P5/4NPP1/R3KB1R w q - 0 19",
      "r3k1r1/ppq5/2n3n1/3pppBQ/b2P3P/P1P4R/4NPP1/R3KB2 b q - 1 19",
      "r3k1r1/pp3q2/2n3n1/3pppBQ/b2P3P/P1P4R/4NPP1/R3KB2 w q - 2 20",
      "r3k1r1/pp3q2/2n3n1/3pPpBQ/b6P/P1P4R/4NPP1/R3KB2 b q - 0 20",
      "r3k1r1/pp3q2/6n1/3pnpBQ/b6P/P1P4R/4NPP1/R3KB2 w q - 0 21",
      "r3k1r1/pp3q2/6n1/3pnpBQ/b6P/P1P1R3/4NPP1/R3KB2 b q - 1 21",
      "r5r1/pp1k1q2/6n1/3pnpBQ/b6P/P1P1R3/4NPP1/R3KB2 w - - 2 22",
      "r5r1/pp1k1q2/6n1/3pnpBQ/b6P/P1P1R3/4NPP1/1R2KB2 b - - 3 22",
      "r5r1/p2k1q2/1p4n1/3pnpBQ/b6P/P1P1R3/4NPP1/1R2KB2 w - - 0 23",
      "r5r1/p2k1q2/1p4n1/3pnpBQ/b4N1P/P1P1R3/5PP1/1R2KB2 b - - 1 23",
      "4r1r1/p2k1q2/1p4n1/3pnpBQ/b4N1P/P1P1R3/5PP1/1R2KB2 w - - 2 24",
      "4r1r1/p2k1q2/1p4n1/3pnpBQ/bR3N1P/P1P1R3/5PP1/4KB2 b - - 3 24",
      "4r1r1/p2k1q2/1pb3n1/3pnpBQ/1R3N1P/P1P1R3/5PP1/4KB2 w - - 4 25",
      "4r1r1/p2k1q2/1pb3n1/3pnpB1/1R3N1P/P1P1R3/5PP1/3QKB2 b - - 5 25",
      "4r1r1/p2k1q2/1pb5/3pnpB1/1R3n1P/P1P1R3/5PP1/3QKB2 w - - 0 26",
      "4r1r1/p2k1q2/1pb5/3pnpB1/5R1P/P1P1R3/5PP1/3QKB2 b - - 0 26",
      "4r1r1/p2k1q2/1pb3n1/3p1pB1/5R1P/P1P1R3/5PP1/3QKB2 w - - 1 27",
      "4r1r1/p2k1q2/1pb3n1/3p1pB1/3R3P/P1P1R3/5PP1/3QKB2 b - - 2 27",
      "6r1/p2k1q2/1pb3n1/3p1pB1/3R3P/P1P1r3/5PP1/3QKB2 w - - 0 28",
      "6r1/p2k1q2/1pb3n1/3p1pB1/3R3P/P1P1P3/6P1/3QKB2 b - - 0 28",
      "6r1/p1k2q2/1pb3n1/3p1pB1/3R3P/P1P1P3/6P1/3QKB2 w - - 1 29",
      "6r1/p1k2q2/1pb3n1/3p1pB1/2PR3P/P3P3/6P1/3QKB2 b - - 0 29",
      "6r1/p1k2q2/1pb3n1/5pB1/2pR3P/P3P3/6P1/3QKB2 w - - 0 30",
      "6r1/p1k2q2/1pb3n1/5pB1/2BR3P/P3P3/6P1/3QK3 b - - 0 30",
      "6r1/p1k3q1/1pb3n1/5pB1/2BR3P/P3P3/6P1/3QK3 w - - 1 31",
      "6B1/p1k3q1/1pb3n1/5pB1/3R3P/P3P3/6P1/3QK3 b - - 0 31",
      "6q1/p1k5/1pb3n1/5pB1/3R3P/P3P3/6P1/3QK3 w - - 0 32",
      "6q1/p1k5/1pb3n1/5pBP/3R4/P3P3/6P1/3QK3 b - - 0 32",
    ]
    for (index, history) in chess.getMoveHistory().enumerated() {
      XCTAssertEqual(history.fen, fens4[index], "Tal(g5): FEN move (index)")
    }

    pgn = pgns.removeFirst()
    chess = try pgn.validate()
    XCTAssertEqual(
      chess.getTag("Event")?.value, "Botvinnik - Tal World Championship Matc", "Tal(g6): event")
    XCTAssertEqual(chess.getTag("White")?.value, "Mikhail Botvinnik", "Tal(g6): white")
    XCTAssertEqual(chess.getTag("Black")?.value, "Mikhail Tal", "Tal(g6): black")
    XCTAssertEqual(chess.getMoveCount(), 47, "Tal(g6): move count")
    XCTAssertEqual(
      chess.getMoveHistory().map { $0.pcn }.joined(separator: ","),
      "c2c4,g8f6,g1f3,g7g6,g2g3,f8g7,f1g2,e8g8,d2d4,d7d6,b1c3,b8d7,e1g1,e7e5,e2e4,c7c6,h2h3,d8b6,d4d5,c6d5,c4d5,d7c5,f3e1,c8d7,e1d3,c5d3,d1d3,f8c8,a1b1,f6h5,c1e3,b6b4,d3e2,c8c4,f1c1,a8c8,g1h2,f7f5,e4f5,d7f5,b1a1,h5f4,g3f4,e5f4,e3d2,b4b2,a1b1,f4f3,b1b2,f3e2,b2b3,c4d4,d2e1,g7e5,h2g1,e5f4,c3e2,c8c1,e2d4,c1e1,g2f1,f5e4,d4e2,f4e5,f2f4,e5f6,b3b7,e4d5,b7c7,d5a2,c7a7,a2c4,a7a8,g8f7,a8a7,f7e6,a7a3,d6d5,g1f2,f6h4,f2g2,e6d6,e2g3,h4g3,f1c4,d5c4,g2g3,d6d5,a3a7,c4c3,a7c7,d5d4,c7d7",
      "Tal(g6): PCN move history"
    )
    let fens5 = [
      "rnbqkbnr/pppppppp/8/8/2P5/8/PP1PPPPP/RNBQKBNR b KQkq - 0 1",
      "rnbqkb1r/pppppppp/5n2/8/2P5/8/PP1PPPPP/RNBQKBNR w KQkq - 1 2",
      "rnbqkb1r/pppppppp/5n2/8/2P5/5N2/PP1PPPPP/RNBQKB1R b KQkq - 2 2",
      "rnbqkb1r/pppppp1p/5np1/8/2P5/5N2/PP1PPPPP/RNBQKB1R w KQkq - 0 3",
      "rnbqkb1r/pppppp1p/5np1/8/2P5/5NP1/PP1PPP1P/RNBQKB1R b KQkq - 0 3",
      "rnbqk2r/ppppppbp/5np1/8/2P5/5NP1/PP1PPP1P/RNBQKB1R w KQkq - 1 4",
      "rnbqk2r/ppppppbp/5np1/8/2P5/5NP1/PP1PPPBP/RNBQK2R b KQkq - 2 4",
      "rnbq1rk1/ppppppbp/5np1/8/2P5/5NP1/PP1PPPBP/RNBQK2R w KQ - 3 5",
      "rnbq1rk1/ppppppbp/5np1/8/2PP4/5NP1/PP2PPBP/RNBQK2R b KQ - 0 5",
      "rnbq1rk1/ppp1ppbp/3p1np1/8/2PP4/5NP1/PP2PPBP/RNBQK2R w KQ - 0 6",
      "rnbq1rk1/ppp1ppbp/3p1np1/8/2PP4/2N2NP1/PP2PPBP/R1BQK2R b KQ - 1 6",
      "r1bq1rk1/pppnppbp/3p1np1/8/2PP4/2N2NP1/PP2PPBP/R1BQK2R w KQ - 2 7",
      "r1bq1rk1/pppnppbp/3p1np1/8/2PP4/2N2NP1/PP2PPBP/R1BQ1RK1 b - - 3 7",
      "r1bq1rk1/pppn1pbp/3p1np1/4p3/2PP4/2N2NP1/PP2PPBP/R1BQ1RK1 w - - 0 8",
      "r1bq1rk1/pppn1pbp/3p1np1/4p3/2PPP3/2N2NP1/PP3PBP/R1BQ1RK1 b - - 0 8",
      "r1bq1rk1/pp1n1pbp/2pp1np1/4p3/2PPP3/2N2NP1/PP3PBP/R1BQ1RK1 w - - 0 9",
      "r1bq1rk1/pp1n1pbp/2pp1np1/4p3/2PPP3/2N2NPP/PP3PB1/R1BQ1RK1 b - - 0 9",
      "r1b2rk1/pp1n1pbp/1qpp1np1/4p3/2PPP3/2N2NPP/PP3PB1/R1BQ1RK1 w - - 1 10",
      "r1b2rk1/pp1n1pbp/1qpp1np1/3Pp3/2P1P3/2N2NPP/PP3PB1/R1BQ1RK1 b - - 0 10",
      "r1b2rk1/pp1n1pbp/1q1p1np1/3pp3/2P1P3/2N2NPP/PP3PB1/R1BQ1RK1 w - - 0 11",
      "r1b2rk1/pp1n1pbp/1q1p1np1/3Pp3/4P3/2N2NPP/PP3PB1/R1BQ1RK1 b - - 0 11",
      "r1b2rk1/pp3pbp/1q1p1np1/2nPp3/4P3/2N2NPP/PP3PB1/R1BQ1RK1 w - - 1 12",
      "r1b2rk1/pp3pbp/1q1p1np1/2nPp3/4P3/2N3PP/PP3PB1/R1BQNRK1 b - - 2 12",
      "r4rk1/pp1b1pbp/1q1p1np1/2nPp3/4P3/2N3PP/PP3PB1/R1BQNRK1 w - - 3 13",
      "r4rk1/pp1b1pbp/1q1p1np1/2nPp3/4P3/2NN2PP/PP3PB1/R1BQ1RK1 b - - 4 13",
      "r4rk1/pp1b1pbp/1q1p1np1/3Pp3/4P3/2Nn2PP/PP3PB1/R1BQ1RK1 w - - 0 14",
      "r4rk1/pp1b1pbp/1q1p1np1/3Pp3/4P3/2NQ2PP/PP3PB1/R1B2RK1 b - - 0 14",
      "r1r3k1/pp1b1pbp/1q1p1np1/3Pp3/4P3/2NQ2PP/PP3PB1/R1B2RK1 w - - 1 15",
      "r1r3k1/pp1b1pbp/1q1p1np1/3Pp3/4P3/2NQ2PP/PP3PB1/1RB2RK1 b - - 2 15",
      "r1r3k1/pp1b1pbp/1q1p2p1/3Pp2n/4P3/2NQ2PP/PP3PB1/1RB2RK1 w - - 3 16",
      "r1r3k1/pp1b1pbp/1q1p2p1/3Pp2n/4P3/2NQB1PP/PP3PB1/1R3RK1 b - - 4 16",
      "r1r3k1/pp1b1pbp/3p2p1/3Pp2n/1q2P3/2NQB1PP/PP3PB1/1R3RK1 w - - 5 17",
      "r1r3k1/pp1b1pbp/3p2p1/3Pp2n/1q2P3/2N1B1PP/PP2QPB1/1R3RK1 b - - 6 17",
      "r5k1/pp1b1pbp/3p2p1/3Pp2n/1qr1P3/2N1B1PP/PP2QPB1/1R3RK1 w - - 7 18",
      "r5k1/pp1b1pbp/3p2p1/3Pp2n/1qr1P3/2N1B1PP/PP2QPB1/1RR3K1 b - - 8 18",
      "2r3k1/pp1b1pbp/3p2p1/3Pp2n/1qr1P3/2N1B1PP/PP2QPB1/1RR3K1 w - - 9 19",
      "2r3k1/pp1b1pbp/3p2p1/3Pp2n/1qr1P3/2N1B1PP/PP2QPBK/1RR5 b - - 10 19",
      "2r3k1/pp1b2bp/3p2p1/3Ppp1n/1qr1P3/2N1B1PP/PP2QPBK/1RR5 w - - 0 20",
      "2r3k1/pp1b2bp/3p2p1/3PpP1n/1qr5/2N1B1PP/PP2QPBK/1RR5 b - - 0 20",
      "2r3k1/pp4bp/3p2p1/3Ppb1n/1qr5/2N1B1PP/PP2QPBK/1RR5 w - - 0 21",
      "2r3k1/pp4bp/3p2p1/3Ppb1n/1qr5/2N1B1PP/PP2QPBK/R1R5 b - - 1 21",
      "2r3k1/pp4bp/3p2p1/3Ppb2/1qr2n2/2N1B1PP/PP2QPBK/R1R5 w - - 2 22",
      "2r3k1/pp4bp/3p2p1/3Ppb2/1qr2P2/2N1B2P/PP2QPBK/R1R5 b - - 0 22",
      "2r3k1/pp4bp/3p2p1/3P1b2/1qr2p2/2N1B2P/PP2QPBK/R1R5 w - - 0 23",
      "2r3k1/pp4bp/3p2p1/3P1b2/1qr2p2/2N4P/PP1BQPBK/R1R5 b - - 1 23",
      "2r3k1/pp4bp/3p2p1/3P1b2/2r2p2/2N4P/Pq1BQPBK/R1R5 w - - 0 24",
      "2r3k1/pp4bp/3p2p1/3P1b2/2r2p2/2N4P/Pq1BQPBK/1RR5 b - - 1 24",
      "2r3k1/pp4bp/3p2p1/3P1b2/2r5/2N2p1P/Pq1BQPBK/1RR5 w - - 0 25",
      "2r3k1/pp4bp/3p2p1/3P1b2/2r5/2N2p1P/PR1BQPBK/2R5 b - - 0 25",
      "2r3k1/pp4bp/3p2p1/3P1b2/2r5/2N4P/PR1BpPBK/2R5 w - - 0 26",
      "2r3k1/pp4bp/3p2p1/3P1b2/2r5/1RN4P/P2BpPBK/2R5 b - - 1 26",
      "2r3k1/pp4bp/3p2p1/3P1b2/3r4/1RN4P/P2BpPBK/2R5 w - - 2 27",
      "2r3k1/pp4bp/3p2p1/3P1b2/3r4/1RN4P/P3pPBK/2R1B3 b - - 3 27",
      "2r3k1/pp5p/3p2p1/3Pbb2/3r4/1RN4P/P3pPBK/2R1B3 w - - 4 28",
      "2r3k1/pp5p/3p2p1/3Pbb2/3r4/1RN4P/P3pPB1/2R1B1K1 b - - 5 28",
      "2r3k1/pp5p/3p2p1/3P1b2/3r1b2/1RN4P/P3pPB1/2R1B1K1 w - - 6 29",
      "2r3k1/pp5p/3p2p1/3P1b2/3r1b2/1R5P/P3NPB1/2R1B1K1 b - - 0 29",
      "6k1/pp5p/3p2p1/3P1b2/3r1b2/1R5P/P3NPB1/2r1B1K1 w - - 0 30",
      "6k1/pp5p/3p2p1/3P1b2/3N1b2/1R5P/P4PB1/2r1B1K1 b - - 0 30",
      "6k1/pp5p/3p2p1/3P1b2/3N1b2/1R5P/P4PB1/4r1K1 w - - 0 31",
      "6k1/pp5p/3p2p1/3P1b2/3N1b2/1R5P/P4P2/4rBK1 b - - 1 31",
      "6k1/pp5p/3p2p1/3P4/3Nbb2/1R5P/P4P2/4rBK1 w - - 2 32",
      "6k1/pp5p/3p2p1/3P4/4bb2/1R5P/P3NP2/4rBK1 b - - 3 32",
      "6k1/pp5p/3p2p1/3Pb3/4b3/1R5P/P3NP2/4rBK1 w - - 4 33",
      "6k1/pp5p/3p2p1/3Pb3/4bP2/1R5P/P3N3/4rBK1 b - - 0 33",
      "6k1/pp5p/3p1bp1/3P4/4bP2/1R5P/P3N3/4rBK1 w - - 1 34",
      "6k1/pR5p/3p1bp1/3P4/4bP2/7P/P3N3/4rBK1 b - - 0 34",
      "6k1/pR5p/3p1bp1/3b4/5P2/7P/P3N3/4rBK1 w - - 0 35",
      "6k1/p1R4p/3p1bp1/3b4/5P2/7P/P3N3/4rBK1 b - - 1 35",
      "6k1/p1R4p/3p1bp1/8/5P2/7P/b3N3/4rBK1 w - - 0 36",
      "6k1/R6p/3p1bp1/8/5P2/7P/b3N3/4rBK1 b - - 0 36",
      "6k1/R6p/3p1bp1/8/2b2P2/7P/4N3/4rBK1 w - - 1 37",
      "R5k1/7p/3p1bp1/8/2b2P2/7P/4N3/4rBK1 b - - 2 37",
      "R7/5k1p/3p1bp1/8/2b2P2/7P/4N3/4rBK1 w - - 3 38",
      "8/R4k1p/3p1bp1/8/2b2P2/7P/4N3/4rBK1 b - - 4 38",
      "8/R6p/3pkbp1/8/2b2P2/7P/4N3/4rBK1 w - - 5 39",
      "8/7p/3pkbp1/8/2b2P2/R6P/4N3/4rBK1 b - - 6 39",
      "8/7p/4kbp1/3p4/2b2P2/R6P/4N3/4rBK1 w - - 0 40",
      "8/7p/4kbp1/3p4/2b2P2/R6P/4NK2/4rB2 b - - 1 40",
      "8/7p/4k1p1/3p4/2b2P1b/R6P/4NK2/4rB2 w - - 2 41",
      "8/7p/4k1p1/3p4/2b2P1b/R6P/4N1K1/4rB2 b - - 3 41",
      "8/7p/3k2p1/3p4/2b2P1b/R6P/4N1K1/4rB2 w - - 4 42",
      "8/7p/3k2p1/3p4/2b2P1b/R5NP/6K1/4rB2 b - - 5 42",
      "8/7p/3k2p1/3p4/2b2P2/R5bP/6K1/4rB2 w - - 0 43",
      "8/7p/3k2p1/3p4/2B2P2/R5bP/6K1/4r3 b - - 0 43",
      "8/7p/3k2p1/8/2p2P2/R5bP/6K1/4r3 w - - 0 44",
      "8/7p/3k2p1/8/2p2P2/R5KP/8/4r3 b - - 0 44",
      "8/7p/6p1/3k4/2p2P2/R5KP/8/4r3 w - - 1 45",
      "8/R6p/6p1/3k4/2p2P2/6KP/8/4r3 b - - 2 45",
      "8/R6p/6p1/3k4/5P2/2p3KP/8/4r3 w - - 0 46",
      "8/2R4p/6p1/3k4/5P2/2p3KP/8/4r3 b - - 1 46",
      "8/2R4p/6p1/8/3k1P2/2p3KP/8/4r3 w - - 2 47",
      "8/3R3p/6p1/8/3k1P2/2p3KP/8/4r3 b - - 3 47",
    ]
    for (index, history) in chess.getMoveHistory().enumerated() {
      XCTAssertEqual(history.fen, fens5[index], "Tal(g6): FEN move (index)")
    }

    pgn = pgns.removeFirst()
    chess = try pgn.validate()
    XCTAssertEqual(chess.getTag("Event")?.value, "Varna ol (Men) fin-A", "Tal(g7): event")
    XCTAssertEqual(chess.getTag("White")?.value, "Mikhail Tal", "Tal(g7): white")
    XCTAssertEqual(chess.getTag("Black")?.value, "Hans-Joachim Hecht", "Tal(g7): black")
    XCTAssertEqual(chess.getMoveCount(), 49, "Tal(g7): move count")
    XCTAssertEqual(
      chess.getMoveHistory().map { $0.pcn }.joined(separator: ","),
      "d2d4,g8f6,c2c4,e7e6,g1f3,b7b6,b1c3,f8b4,c1g5,c8b7,e2e3,h7h6,g5h4,b4c3,b2c3,d7d6,f3d2,e6e5,f2f3,d8e7,e3e4,b8d7,f1d3,d7f8,c4c5,d6c5,d4e5,e7e5,d1a4,c7c6,e1g1,f8g6,d2c4,e5e6,e4e5,b6b5,e5f6,b5a4,f6g7,h8g8,d3f5,g6h4,f5e6,b7a6,c4d6,e8e7,e6c4,g8g7,g2g3,e7d6,c4a6,h4f5,a1b1,f7f6,f1d1,d6e7,d1e1,e7d6,g1f2,c5c4,g3g4,f5e7,b1b7,a8g8,a6c4,e7d5,c4d5,c6d5,b7b4,g8c8,b4a4,c8c3,a4a6,d6c5,a6f6,h6h5,h2h3,h5g4,h3g4,g7h7,g4g5,h7h5,f6f5,c3c2,f2g3,c5c4,e1e5,d5d4,g5g6,h5h1,e5c5,c4d3,c5c2,d3c2,g3f4,h1g1,f5g5",
      "Tal(g7): PCN move history"
    )
    let fens6 = [
      "rnbqkbnr/pppppppp/8/8/3P4/8/PPP1PPPP/RNBQKBNR b KQkq - 0 1",
      "rnbqkb1r/pppppppp/5n2/8/3P4/8/PPP1PPPP/RNBQKBNR w KQkq - 1 2",
      "rnbqkb1r/pppppppp/5n2/8/2PP4/8/PP2PPPP/RNBQKBNR b KQkq - 0 2",
      "rnbqkb1r/pppp1ppp/4pn2/8/2PP4/8/PP2PPPP/RNBQKBNR w KQkq - 0 3",
      "rnbqkb1r/pppp1ppp/4pn2/8/2PP4/5N2/PP2PPPP/RNBQKB1R b KQkq - 1 3",
      "rnbqkb1r/p1pp1ppp/1p2pn2/8/2PP4/5N2/PP2PPPP/RNBQKB1R w KQkq - 0 4",
      "rnbqkb1r/p1pp1ppp/1p2pn2/8/2PP4/2N2N2/PP2PPPP/R1BQKB1R b KQkq - 1 4",
      "rnbqk2r/p1pp1ppp/1p2pn2/8/1bPP4/2N2N2/PP2PPPP/R1BQKB1R w KQkq - 2 5",
      "rnbqk2r/p1pp1ppp/1p2pn2/6B1/1bPP4/2N2N2/PP2PPPP/R2QKB1R b KQkq - 3 5",
      "rn1qk2r/pbpp1ppp/1p2pn2/6B1/1bPP4/2N2N2/PP2PPPP/R2QKB1R w KQkq - 4 6",
      "rn1qk2r/pbpp1ppp/1p2pn2/6B1/1bPP4/2N1PN2/PP3PPP/R2QKB1R b KQkq - 0 6",
      "rn1qk2r/pbpp1pp1/1p2pn1p/6B1/1bPP4/2N1PN2/PP3PPP/R2QKB1R w KQkq - 0 7",
      "rn1qk2r/pbpp1pp1/1p2pn1p/8/1bPP3B/2N1PN2/PP3PPP/R2QKB1R b KQkq - 1 7",
      "rn1qk2r/pbpp1pp1/1p2pn1p/8/2PP3B/2b1PN2/PP3PPP/R2QKB1R w KQkq - 0 8",
      "rn1qk2r/pbpp1pp1/1p2pn1p/8/2PP3B/2P1PN2/P4PPP/R2QKB1R b KQkq - 0 8",
      "rn1qk2r/pbp2pp1/1p1ppn1p/8/2PP3B/2P1PN2/P4PPP/R2QKB1R w KQkq - 0 9",
      "rn1qk2r/pbp2pp1/1p1ppn1p/8/2PP3B/2P1P3/P2N1PPP/R2QKB1R b KQkq - 1 9",
      "rn1qk2r/pbp2pp1/1p1p1n1p/4p3/2PP3B/2P1P3/P2N1PPP/R2QKB1R w KQkq - 0 10",
      "rn1qk2r/pbp2pp1/1p1p1n1p/4p3/2PP3B/2P1PP2/P2N2PP/R2QKB1R b KQkq - 0 10",
      "rn2k2r/pbp1qpp1/1p1p1n1p/4p3/2PP3B/2P1PP2/P2N2PP/R2QKB1R w KQkq - 1 11",
      "rn2k2r/pbp1qpp1/1p1p1n1p/4p3/2PPP2B/2P2P2/P2N2PP/R2QKB1R b KQkq - 0 11",
      "r3k2r/pbpnqpp1/1p1p1n1p/4p3/2PPP2B/2P2P2/P2N2PP/R2QKB1R w KQkq - 1 12",
      "r3k2r/pbpnqpp1/1p1p1n1p/4p3/2PPP2B/2PB1P2/P2N2PP/R2QK2R b KQkq - 2 12",
      "r3kn1r/pbp1qpp1/1p1p1n1p/4p3/2PPP2B/2PB1P2/P2N2PP/R2QK2R w KQkq - 3 13",
      "r3kn1r/pbp1qpp1/1p1p1n1p/2P1p3/3PP2B/2PB1P2/P2N2PP/R2QK2R b KQkq - 0 13",
      "r3kn1r/pbp1qpp1/1p3n1p/2p1p3/3PP2B/2PB1P2/P2N2PP/R2QK2R w KQkq - 0 14",
      "r3kn1r/pbp1qpp1/1p3n1p/2p1P3/4P2B/2PB1P2/P2N2PP/R2QK2R b KQkq - 0 14",
      "r3kn1r/pbp2pp1/1p3n1p/2p1q3/4P2B/2PB1P2/P2N2PP/R2QK2R w KQkq - 0 15",
      "r3kn1r/pbp2pp1/1p3n1p/2p1q3/Q3P2B/2PB1P2/P2N2PP/R3K2R b KQkq - 1 15",
      "r3kn1r/pb3pp1/1pp2n1p/2p1q3/Q3P2B/2PB1P2/P2N2PP/R3K2R w KQkq - 0 16",
      "r3kn1r/pb3pp1/1pp2n1p/2p1q3/Q3P2B/2PB1P2/P2N2PP/R4RK1 b kq - 1 16",
      "r3k2r/pb3pp1/1pp2nnp/2p1q3/Q3P2B/2PB1P2/P2N2PP/R4RK1 w kq - 2 17",
      "r3k2r/pb3pp1/1pp2nnp/2p1q3/Q1N1P2B/2PB1P2/P5PP/R4RK1 b kq - 3 17",
      "r3k2r/pb3pp1/1pp1qnnp/2p5/Q1N1P2B/2PB1P2/P5PP/R4RK1 w kq - 4 18",
      "r3k2r/pb3pp1/1pp1qnnp/2p1P3/Q1N4B/2PB1P2/P5PP/R4RK1 b kq - 0 18",
      "r3k2r/pb3pp1/2p1qnnp/1pp1P3/Q1N4B/2PB1P2/P5PP/R4RK1 w kq - 0 19",
      "r3k2r/pb3pp1/2p1qPnp/1pp5/Q1N4B/2PB1P2/P5PP/R4RK1 b kq - 0 19",
      "r3k2r/pb3pp1/2p1qPnp/2p5/p1N4B/2PB1P2/P5PP/R4RK1 w kq - 0 20",
      "r3k2r/pb3pP1/2p1q1np/2p5/p1N4B/2PB1P2/P5PP/R4RK1 b kq - 0 20",
      "r3k1r1/pb3pP1/2p1q1np/2p5/p1N4B/2PB1P2/P5PP/R4RK1 w q - 1 21",
      "r3k1r1/pb3pP1/2p1q1np/2p2B2/p1N4B/2P2P2/P5PP/R4RK1 b q - 2 21",
      "r3k1r1/pb3pP1/2p1q2p/2p2B2/p1N4n/2P2P2/P5PP/R4RK1 w q - 0 22",
      "r3k1r1/pb3pP1/2p1B2p/2p5/p1N4n/2P2P2/P5PP/R4RK1 b q - 0 22",
      "r3k1r1/p4pP1/b1p1B2p/2p5/p1N4n/2P2P2/P5PP/R4RK1 w q - 1 23",
      "r3k1r1/p4pP1/b1pNB2p/2p5/p6n/2P2P2/P5PP/R4RK1 b q - 2 23",
      "r5r1/p3kpP1/b1pNB2p/2p5/p6n/2P2P2/P5PP/R4RK1 w - - 3 24",
      "r5r1/p3kpP1/b1pN3p/2p5/p1B4n/2P2P2/P5PP/R4RK1 b - - 4 24",
      "r7/p3kpr1/b1pN3p/2p5/p1B4n/2P2P2/P5PP/R4RK1 w - - 0 25",
      "r7/p3kpr1/b1pN3p/2p5/p1B4n/2P2PP1/P6P/R4RK1 b - - 0 25",
      "r7/p4pr1/b1pk3p/2p5/p1B4n/2P2PP1/P6P/R4RK1 w - - 0 26",
      "r7/p4pr1/B1pk3p/2p5/p6n/2P2PP1/P6P/R4RK1 b - - 0 26",
      "r7/p4pr1/B1pk3p/2p2n2/p7/2P2PP1/P6P/R4RK1 w - - 1 27",
      "r7/p4pr1/B1pk3p/2p2n2/p7/2P2PP1/P6P/1R3RK1 b - - 2 27",
      "r7/p5r1/B1pk1p1p/2p2n2/p7/2P2PP1/P6P/1R3RK1 w - - 0 28",
      "r7/p5r1/B1pk1p1p/2p2n2/p7/2P2PP1/P6P/1R1R2K1 b - - 1 28",
      "r7/p3k1r1/B1p2p1p/2p2n2/p7/2P2PP1/P6P/1R1R2K1 w - - 2 29",
      "r7/p3k1r1/B1p2p1p/2p2n2/p7/2P2PP1/P6P/1R2R1K1 b - - 3 29",
      "r7/p5r1/B1pk1p1p/2p2n2/p7/2P2PP1/P6P/1R2R1K1 w - - 4 30",
      "r7/p5r1/B1pk1p1p/2p2n2/p7/2P2PP1/P4K1P/1R2R3 b - - 5 30",
      "r7/p5r1/B1pk1p1p/5n2/p1p5/2P2PP1/P4K1P/1R2R3 w - - 0 31",
      "r7/p5r1/B1pk1p1p/5n2/p1p3P1/2P2P2/P4K1P/1R2R3 b - - 0 31",
      "r7/p3n1r1/B1pk1p1p/8/p1p3P1/2P2P2/P4K1P/1R2R3 w - - 1 32",
      "r7/pR2n1r1/B1pk1p1p/8/p1p3P1/2P2P2/P4K1P/4R3 b - - 2 32",
      "6r1/pR2n1r1/B1pk1p1p/8/p1p3P1/2P2P2/P4K1P/4R3 w - - 3 33",
      "6r1/pR2n1r1/2pk1p1p/8/p1B3P1/2P2P2/P4K1P/4R3 b - - 0 33",
      "6r1/pR4r1/2pk1p1p/3n4/p1B3P1/2P2P2/P4K1P/4R3 w - - 1 34",
      "6r1/pR4r1/2pk1p1p/3B4/p5P1/2P2P2/P4K1P/4R3 b - - 0 34",
      "6r1/pR4r1/3k1p1p/3p4/p5P1/2P2P2/P4K1P/4R3 w - - 0 35",
      "6r1/p5r1/3k1p1p/3p4/pR4P1/2P2P2/P4K1P/4R3 b - - 1 35",
      "2r5/p5r1/3k1p1p/3p4/pR4P1/2P2P2/P4K1P/4R3 w - - 2 36",
      "2r5/p5r1/3k1p1p/3p4/R5P1/2P2P2/P4K1P/4R3 b - - 0 36",
      "8/p5r1/3k1p1p/3p4/R5P1/2r2P2/P4K1P/4R3 w - - 0 37",
      "8/p5r1/R2k1p1p/3p4/6P1/2r2P2/P4K1P/4R3 b - - 1 37",
      "8/p5r1/R4p1p/2kp4/6P1/2r2P2/P4K1P/4R3 w - - 2 38",
      "8/p5r1/5R1p/2kp4/6P1/2r2P2/P4K1P/4R3 b - - 0 38",
      "8/p5r1/5R2/2kp3p/6P1/2r2P2/P4K1P/4R3 w - - 0 39",
      "8/p5r1/5R2/2kp3p/6P1/2r2P1P/P4K2/4R3 b - - 0 39",
      "8/p5r1/5R2/2kp4/6p1/2r2P1P/P4K2/4R3 w - - 0 40",
      "8/p5r1/5R2/2kp4/6P1/2r2P2/P4K2/4R3 b - - 0 40",
      "8/p6r/5R2/2kp4/6P1/2r2P2/P4K2/4R3 w - - 1 41",
      "8/p6r/5R2/2kp2P1/8/2r2P2/P4K2/4R3 b - - 0 41",
      "8/p7/5R2/2kp2Pr/8/2r2P2/P4K2/4R3 w - - 1 42",
      "8/p7/8/2kp1RPr/8/2r2P2/P4K2/4R3 b - - 2 42",
      "8/p7/8/2kp1RPr/8/5P2/P1r2K2/4R3 w - - 3 43",
      "8/p7/8/2kp1RPr/8/5PK1/P1r5/4R3 b - - 4 43",
      "8/p7/8/3p1RPr/2k5/5PK1/P1r5/4R3 w - - 5 44",
      "8/p7/8/3pRRPr/2k5/5PK1/P1r5/8 b - - 6 44",
      "8/p7/8/4RRPr/2kp4/5PK1/P1r5/8 w - - 0 45",
      "8/p7/6P1/4RR1r/2kp4/5PK1/P1r5/8 b - - 0 45",
      "8/p7/6P1/4RR2/2kp4/5PK1/P1r5/7r w - - 1 46",
      "8/p7/6P1/2R2R2/2kp4/5PK1/P1r5/7r b - - 2 46",
      "8/p7/6P1/2R2R2/3p4/3k1PK1/P1r5/7r w - - 3 47",
      "8/p7/6P1/5R2/3p4/3k1PK1/P1R5/7r b - - 0 47",
      "8/p7/6P1/5R2/3p4/5PK1/P1k5/7r w - - 0 48",
      "8/p7/6P1/5R2/3p1K2/5P2/P1k5/7r b - - 1 48",
      "8/p7/6P1/5R2/3p1K2/5P2/P1k5/6r1 w - - 2 49",
      "8/p7/6P1/6R1/3p1K2/5P2/P1k5/6r1 b - - 3 49",
    ]
    for (index, history) in chess.getMoveHistory().enumerated() {
      XCTAssertEqual(history.fen, fens6[index], "Tal(g7): FEN move (index)")
    }

    pgn = pgns.removeFirst()
    chess = try pgn.validate()
    XCTAssertEqual(
      chess.getTag("Event")?.value, "Tal - Portisch Candidates Quarterfinal", "Tal(g8): event")
    XCTAssertEqual(chess.getTag("White")?.value, "Mikhail Tal", "Tal(g8): white")
    XCTAssertEqual(chess.getTag("Black")?.value, "Lajos Portisch", "Tal(g8): black")
    XCTAssertEqual(chess.getMoveCount(), 27, "Tal(g8): move count")
    XCTAssertEqual(
      chess.getMoveHistory().map { $0.pcn }.joined(separator: ","),
      "e2e4,c7c6,b1c3,d7d5,g1f3,d5e4,c3e4,c8g4,h2h3,g4f3,d1f3,b8d7,d2d4,g8f6,f1d3,f6e4,f3e4,e7e6,e1g1,f8e7,c2c3,d7f6,e4h4,f6d5,h4g4,e7f6,f1e1,d8b6,c3c4,d5b4,e1e6,f7e6,g4e6,e8f8,c1f4,a8d8,c4c5,b4d3,c5b6,d3f4,e6g4,f4d5,b6a7,f8e7,b2b4,d8a8,a1e1,e7d6,b4b5,a8a7,e1e6,d6c7,e6f6",
      "Tal(g8): PCN move history"
    )
    let fens7 = [
      "rnbqkbnr/pppppppp/8/8/4P3/8/PPPP1PPP/RNBQKBNR b KQkq - 0 1",
      "rnbqkbnr/pp1ppppp/2p5/8/4P3/8/PPPP1PPP/RNBQKBNR w KQkq - 0 2",
      "rnbqkbnr/pp1ppppp/2p5/8/4P3/2N5/PPPP1PPP/R1BQKBNR b KQkq - 1 2",
      "rnbqkbnr/pp2pppp/2p5/3p4/4P3/2N5/PPPP1PPP/R1BQKBNR w KQkq - 0 3",
      "rnbqkbnr/pp2pppp/2p5/3p4/4P3/2N2N2/PPPP1PPP/R1BQKB1R b KQkq - 1 3",
      "rnbqkbnr/pp2pppp/2p5/8/4p3/2N2N2/PPPP1PPP/R1BQKB1R w KQkq - 0 4",
      "rnbqkbnr/pp2pppp/2p5/8/4N3/5N2/PPPP1PPP/R1BQKB1R b KQkq - 0 4",
      "rn1qkbnr/pp2pppp/2p5/8/4N1b1/5N2/PPPP1PPP/R1BQKB1R w KQkq - 1 5",
      "rn1qkbnr/pp2pppp/2p5/8/4N1b1/5N1P/PPPP1PP1/R1BQKB1R b KQkq - 0 5",
      "rn1qkbnr/pp2pppp/2p5/8/4N3/5b1P/PPPP1PP1/R1BQKB1R w KQkq - 0 6",
      "rn1qkbnr/pp2pppp/2p5/8/4N3/5Q1P/PPPP1PP1/R1B1KB1R b KQkq - 0 6",
      "r2qkbnr/pp1npppp/2p5/8/4N3/5Q1P/PPPP1PP1/R1B1KB1R w KQkq - 1 7",
      "r2qkbnr/pp1npppp/2p5/8/3PN3/5Q1P/PPP2PP1/R1B1KB1R b KQkq - 0 7",
      "r2qkb1r/pp1npppp/2p2n2/8/3PN3/5Q1P/PPP2PP1/R1B1KB1R w KQkq - 1 8",
      "r2qkb1r/pp1npppp/2p2n2/8/3PN3/3B1Q1P/PPP2PP1/R1B1K2R b KQkq - 2 8",
      "r2qkb1r/pp1npppp/2p5/8/3Pn3/3B1Q1P/PPP2PP1/R1B1K2R w KQkq - 0 9",
      "r2qkb1r/pp1npppp/2p5/8/3PQ3/3B3P/PPP2PP1/R1B1K2R b KQkq - 0 9",
      "r2qkb1r/pp1n1ppp/2p1p3/8/3PQ3/3B3P/PPP2PP1/R1B1K2R w KQkq - 0 10",
      "r2qkb1r/pp1n1ppp/2p1p3/8/3PQ3/3B3P/PPP2PP1/R1B2RK1 b kq - 1 10",
      "r2qk2r/pp1nbppp/2p1p3/8/3PQ3/3B3P/PPP2PP1/R1B2RK1 w kq - 2 11",
      "r2qk2r/pp1nbppp/2p1p3/8/3PQ3/2PB3P/PP3PP1/R1B2RK1 b kq - 0 11",
      "r2qk2r/pp2bppp/2p1pn2/8/3PQ3/2PB3P/PP3PP1/R1B2RK1 w kq - 1 12",
      "r2qk2r/pp2bppp/2p1pn2/8/3P3Q/2PB3P/PP3PP1/R1B2RK1 b kq - 2 12",
      "r2qk2r/pp2bppp/2p1p3/3n4/3P3Q/2PB3P/PP3PP1/R1B2RK1 w kq - 3 13",
      "r2qk2r/pp2bppp/2p1p3/3n4/3P2Q1/2PB3P/PP3PP1/R1B2RK1 b kq - 4 13",
      "r2qk2r/pp3ppp/2p1pb2/3n4/3P2Q1/2PB3P/PP3PP1/R1B2RK1 w kq - 5 14",
      "r2qk2r/pp3ppp/2p1pb2/3n4/3P2Q1/2PB3P/PP3PP1/R1B1R1K1 b kq - 6 14",
      "r3k2r/pp3ppp/1qp1pb2/3n4/3P2Q1/2PB3P/PP3PP1/R1B1R1K1 w kq - 7 15",
      "r3k2r/pp3ppp/1qp1pb2/3n4/2PP2Q1/3B3P/PP3PP1/R1B1R1K1 b kq - 0 15",
      "r3k2r/pp3ppp/1qp1pb2/8/1nPP2Q1/3B3P/PP3PP1/R1B1R1K1 w kq - 1 16",
      "r3k2r/pp3ppp/1qp1Rb2/8/1nPP2Q1/3B3P/PP3PP1/R1B3K1 b kq - 0 16",
      "r3k2r/pp4pp/1qp1pb2/8/1nPP2Q1/3B3P/PP3PP1/R1B3K1 w kq - 0 17",
      "r3k2r/pp4pp/1qp1Qb2/8/1nPP4/3B3P/PP3PP1/R1B3K1 b kq - 0 17",
      "r4k1r/pp4pp/1qp1Qb2/8/1nPP4/3B3P/PP3PP1/R1B3K1 w - - 1 18",
      "r4k1r/pp4pp/1qp1Qb2/8/1nPP1B2/3B3P/PP3PP1/R5K1 b - - 2 18",
      "3r1k1r/pp4pp/1qp1Qb2/8/1nPP1B2/3B3P/PP3PP1/R5K1 w - - 3 19",
      "3r1k1r/pp4pp/1qp1Qb2/2P5/1n1P1B2/3B3P/PP3PP1/R5K1 b - - 0 19",
      "3r1k1r/pp4pp/1qp1Qb2/2P5/3P1B2/3n3P/PP3PP1/R5K1 w - - 0 20",
      "3r1k1r/pp4pp/1Pp1Qb2/8/3P1B2/3n3P/PP3PP1/R5K1 b - - 0 20",
      "3r1k1r/pp4pp/1Pp1Qb2/8/3P1n2/7P/PP3PP1/R5K1 w - - 0 21",
      "3r1k1r/pp4pp/1Pp2b2/8/3P1nQ1/7P/PP3PP1/R5K1 b - - 1 21",
      "3r1k1r/pp4pp/1Pp2b2/3n4/3P2Q1/7P/PP3PP1/R5K1 w - - 2 22",
      "3r1k1r/Pp4pp/2p2b2/3n4/3P2Q1/7P/PP3PP1/R5K1 b - - 0 22",
      "3r3r/Pp2k1pp/2p2b2/3n4/3P2Q1/7P/PP3PP1/R5K1 w - - 1 23",
      "3r3r/Pp2k1pp/2p2b2/3n4/1P1P2Q1/7P/P4PP1/R5K1 b - - 0 23",
      "r6r/Pp2k1pp/2p2b2/3n4/1P1P2Q1/7P/P4PP1/R5K1 w - - 1 24",
      "r6r/Pp2k1pp/2p2b2/3n4/1P1P2Q1/7P/P4PP1/4R1K1 b - - 2 24",
      "r6r/Pp4pp/2pk1b2/3n4/1P1P2Q1/7P/P4PP1/4R1K1 w - - 3 25",
      "r6r/Pp4pp/2pk1b2/1P1n4/3P2Q1/7P/P4PP1/4R1K1 b - - 0 25",
      "7r/rp4pp/2pk1b2/1P1n4/3P2Q1/7P/P4PP1/4R1K1 w - - 0 26",
      "7r/rp4pp/2pkRb2/1P1n4/3P2Q1/7P/P4PP1/6K1 b - - 1 26",
      "7r/rpk3pp/2p1Rb2/1P1n4/3P2Q1/7P/P4PP1/6K1 w - - 2 27",
      "7r/rpk3pp/2p2R2/1P1n4/3P2Q1/7P/P4PP1/6K1 b - - 0 27",
    ]
    for (index, history) in chess.getMoveHistory().enumerated() {
      XCTAssertEqual(history.fen, fens7[index], "Tal(g8): FEN move (index)")
    }

    pgn = pgns.removeFirst()
    chess = try pgn.validate()
    XCTAssertEqual(chess.getTag("Event")?.value, "Alekhine Memorial", "Tal(g9): event")
    XCTAssertEqual(chess.getTag("White")?.value, "Mikhail Tal", "Tal(g9): white")
    XCTAssertEqual(chess.getTag("Black")?.value, "Michael Francis Stean", "Tal(g9): black")
    XCTAssertEqual(chess.getMoveCount(), 31, "Tal(g9): move count")
    XCTAssertEqual(
      chess.getMoveHistory().map { $0.pcn }.joined(separator: ","),
      "g1f3,g8f6,c2c4,c7c5,b1c3,e7e6,g2g3,d7d5,c4d5,e6d5,d2d4,b8c6,f1g2,f8e7,e1g1,e8g8,c1g5,c5d4,f3d4,h7h6,g5e3,f8e8,d1b3,c6a5,b3c2,c8g4,h2h3,g4d7,a1d1,a8c8,d4f5,e7f8,g2d5,e8e5,f5h6,g7h6,c2g6,g8h8,d5f7,c8c6,d1d5,d8e7,e3d4,a5c4,f2f4,f8g7,d4e5,c4e5,d5e5,e7f8,f7b3,f6g4,g6d3,g4e5,f4e5,f8c5,g1h2,d7e8,e5e6,c6d6,d3e4",
      "Tal(g9): PCN move history"
    )
    let fens8 = [
      "rnbqkbnr/pppppppp/8/8/8/5N2/PPPPPPPP/RNBQKB1R b KQkq - 1 1",
      "rnbqkb1r/pppppppp/5n2/8/8/5N2/PPPPPPPP/RNBQKB1R w KQkq - 2 2",
      "rnbqkb1r/pppppppp/5n2/8/2P5/5N2/PP1PPPPP/RNBQKB1R b KQkq - 0 2",
      "rnbqkb1r/pp1ppppp/5n2/2p5/2P5/5N2/PP1PPPPP/RNBQKB1R w KQkq - 0 3",
      "rnbqkb1r/pp1ppppp/5n2/2p5/2P5/2N2N2/PP1PPPPP/R1BQKB1R b KQkq - 1 3",
      "rnbqkb1r/pp1p1ppp/4pn2/2p5/2P5/2N2N2/PP1PPPPP/R1BQKB1R w KQkq - 0 4",
      "rnbqkb1r/pp1p1ppp/4pn2/2p5/2P5/2N2NP1/PP1PPP1P/R1BQKB1R b KQkq - 0 4",
      "rnbqkb1r/pp3ppp/4pn2/2pp4/2P5/2N2NP1/PP1PPP1P/R1BQKB1R w KQkq - 0 5",
      "rnbqkb1r/pp3ppp/4pn2/2pP4/8/2N2NP1/PP1PPP1P/R1BQKB1R b KQkq - 0 5",
      "rnbqkb1r/pp3ppp/5n2/2pp4/8/2N2NP1/PP1PPP1P/R1BQKB1R w KQkq - 0 6",
      "rnbqkb1r/pp3ppp/5n2/2pp4/3P4/2N2NP1/PP2PP1P/R1BQKB1R b KQkq - 0 6",
      "r1bqkb1r/pp3ppp/2n2n2/2pp4/3P4/2N2NP1/PP2PP1P/R1BQKB1R w KQkq - 1 7",
      "r1bqkb1r/pp3ppp/2n2n2/2pp4/3P4/2N2NP1/PP2PPBP/R1BQK2R b KQkq - 2 7",
      "r1bqk2r/pp2bppp/2n2n2/2pp4/3P4/2N2NP1/PP2PPBP/R1BQK2R w KQkq - 3 8",
      "r1bqk2r/pp2bppp/2n2n2/2pp4/3P4/2N2NP1/PP2PPBP/R1BQ1RK1 b kq - 4 8",
      "r1bq1rk1/pp2bppp/2n2n2/2pp4/3P4/2N2NP1/PP2PPBP/R1BQ1RK1 w - - 5 9",
      "r1bq1rk1/pp2bppp/2n2n2/2pp2B1/3P4/2N2NP1/PP2PPBP/R2Q1RK1 b - - 6 9",
      "r1bq1rk1/pp2bppp/2n2n2/3p2B1/3p4/2N2NP1/PP2PPBP/R2Q1RK1 w - - 0 10",
      "r1bq1rk1/pp2bppp/2n2n2/3p2B1/3N4/2N3P1/PP2PPBP/R2Q1RK1 b - - 0 10",
      "r1bq1rk1/pp2bpp1/2n2n1p/3p2B1/3N4/2N3P1/PP2PPBP/R2Q1RK1 w - - 0 11",
      "r1bq1rk1/pp2bpp1/2n2n1p/3p4/3N4/2N1B1P1/PP2PPBP/R2Q1RK1 b - - 1 11",
      "r1bqr1k1/pp2bpp1/2n2n1p/3p4/3N4/2N1B1P1/PP2PPBP/R2Q1RK1 w - - 2 12",
      "r1bqr1k1/pp2bpp1/2n2n1p/3p4/3N4/1QN1B1P1/PP2PPBP/R4RK1 b - - 3 12",
      "r1bqr1k1/pp2bpp1/5n1p/n2p4/3N4/1QN1B1P1/PP2PPBP/R4RK1 w - - 4 13",
      "r1bqr1k1/pp2bpp1/5n1p/n2p4/3N4/2N1B1P1/PPQ1PPBP/R4RK1 b - - 5 13",
      "r2qr1k1/pp2bpp1/5n1p/n2p4/3N2b1/2N1B1P1/PPQ1PPBP/R4RK1 w - - 6 14",
      "r2qr1k1/pp2bpp1/5n1p/n2p4/3N2b1/2N1B1PP/PPQ1PPB1/R4RK1 b - - 0 14",
      "r2qr1k1/pp1bbpp1/5n1p/n2p4/3N4/2N1B1PP/PPQ1PPB1/R4RK1 w - - 1 15",
      "r2qr1k1/pp1bbpp1/5n1p/n2p4/3N4/2N1B1PP/PPQ1PPB1/3R1RK1 b - - 2 15",
      "2rqr1k1/pp1bbpp1/5n1p/n2p4/3N4/2N1B1PP/PPQ1PPB1/3R1RK1 w - - 3 16",
      "2rqr1k1/pp1bbpp1/5n1p/n2p1N2/8/2N1B1PP/PPQ1PPB1/3R1RK1 b - - 4 16",
      "2rqrbk1/pp1b1pp1/5n1p/n2p1N2/8/2N1B1PP/PPQ1PPB1/3R1RK1 w - - 5 17",
      "2rqrbk1/pp1b1pp1/5n1p/n2B1N2/8/2N1B1PP/PPQ1PP2/3R1RK1 b - - 0 17",
      "2rq1bk1/pp1b1pp1/5n1p/n2BrN2/8/2N1B1PP/PPQ1PP2/3R1RK1 w - - 1 18",
      "2rq1bk1/pp1b1pp1/5n1N/n2Br3/8/2N1B1PP/PPQ1PP2/3R1RK1 b - - 0 18",
      "2rq1bk1/pp1b1p2/5n1p/n2Br3/8/2N1B1PP/PPQ1PP2/3R1RK1 w - - 0 19",
      "2rq1bk1/pp1b1p2/5nQp/n2Br3/8/2N1B1PP/PP2PP2/3R1RK1 b - - 1 19",
      "2rq1b1k/pp1b1p2/5nQp/n2Br3/8/2N1B1PP/PP2PP2/3R1RK1 w - - 2 20",
      "2rq1b1k/pp1b1B2/5nQp/n3r3/8/2N1B1PP/PP2PP2/3R1RK1 b - - 0 20",
      "3q1b1k/pp1b1B2/2r2nQp/n3r3/8/2N1B1PP/PP2PP2/3R1RK1 w - - 1 21",
      "3q1b1k/pp1b1B2/2r2nQp/n2Rr3/8/2N1B1PP/PP2PP2/5RK1 b - - 2 21",
      "5b1k/pp1bqB2/2r2nQp/n2Rr3/8/2N1B1PP/PP2PP2/5RK1 w - - 3 22",
      "5b1k/pp1bqB2/2r2nQp/n2Rr3/3B4/2N3PP/PP2PP2/5RK1 b - - 4 22",
      "5b1k/pp1bqB2/2r2nQp/3Rr3/2nB4/2N3PP/PP2PP2/5RK1 w - - 5 23",
      "5b1k/pp1bqB2/2r2nQp/3Rr3/2nB1P2/2N3PP/PP2P3/5RK1 b - - 0 23",
      "7k/pp1bqBb1/2r2nQp/3Rr3/2nB1P2/2N3PP/PP2P3/5RK1 w - - 1 24",
      "7k/pp1bqBb1/2r2nQp/3RB3/2n2P2/2N3PP/PP2P3/5RK1 b - - 0 24",
      "7k/pp1bqBb1/2r2nQp/3Rn3/5P2/2N3PP/PP2P3/5RK1 w - - 0 25",
      "7k/pp1bqBb1/2r2nQp/4R3/5P2/2N3PP/PP2P3/5RK1 b - - 0 25",
      "5q1k/pp1b1Bb1/2r2nQp/4R3/5P2/2N3PP/PP2P3/5RK1 w - - 1 26",
      "5q1k/pp1b2b1/2r2nQp/4R3/5P2/1BN3PP/PP2P3/5RK1 b - - 2 26",
      "5q1k/pp1b2b1/2r3Qp/4R3/5Pn1/1BN3PP/PP2P3/5RK1 w - - 3 27",
      "5q1k/pp1b2b1/2r4p/4R3/5Pn1/1BNQ2PP/PP2P3/5RK1 b - - 4 27",
      "5q1k/pp1b2b1/2r4p/4n3/5P2/1BNQ2PP/PP2P3/5RK1 w - - 0 28",
      "5q1k/pp1b2b1/2r4p/4P3/8/1BNQ2PP/PP2P3/5RK1 b - - 0 28",
      "7k/pp1b2b1/2r4p/2q1P3/8/1BNQ2PP/PP2P3/5RK1 w - - 1 29",
      "7k/pp1b2b1/2r4p/2q1P3/8/1BNQ2PP/PP2P2K/5R2 b - - 2 29",
      "4b2k/pp4b1/2r4p/2q1P3/8/1BNQ2PP/PP2P2K/5R2 w - - 3 30",
      "4b2k/pp4b1/2r1P2p/2q5/8/1BNQ2PP/PP2P2K/5R2 b - - 0 30",
      "4b2k/pp4b1/3rP2p/2q5/8/1BNQ2PP/PP2P2K/5R2 w - - 1 31",
      "4b2k/pp4b1/3rP2p/2q5/4Q3/1BN3PP/PP2P2K/5R2 b - - 2 31",
    ]
    for (index, history) in chess.getMoveHistory().enumerated() {
      XCTAssertEqual(history.fen, fens8[index], "Tal(g9): FEN move (index)")
    }

    pgn = pgns.removeFirst()
    chess = try pgn.validate()
    XCTAssertEqual(chess.getTag("Event")?.value, "Reykjavik", "Tal(g10): event")
    XCTAssertEqual(chess.getTag("White")?.value, "Mikhail Tal", "Tal(g10): white")
    XCTAssertEqual(chess.getTag("Black")?.value, "Johann Hjartarson", "Tal(g10): black")
    XCTAssertEqual(chess.getMoveCount(), 44, "Tal(g10): move count")
    XCTAssertEqual(
      chess.getMoveHistory().map { $0.pcn }.joined(separator: ","),
      "e2e4,e7e5,g1f3,b8c6,f1b5,a7a6,b5a4,g8f6,e1g1,f8e7,f1e1,b7b5,a4b3,e8g8,c2c3,d7d6,h2h3,c6a5,b3c2,c7c5,d2d4,d8c7,b1d2,c8d7,d2f1,c5d4,c3d4,a8c8,f1e3,a5c6,d4d5,c6b4,c2b1,a6a5,a2a3,b4a6,b2b4,g7g6,c1d2,a5b4,a3b4,c7b7,b1d3,a6c7,e3c2,f6h5,d2e3,c8a8,d1d2,a8a1,c2a1,f7f5,e3h6,h5g7,a1b3,f5f4,b3a5,b7b6,e1c1,f8a8,d2c2,c7e8,c2b3,e7f6,a5c6,g7h5,b3b2,f6g7,h6g7,g8g7,c1c5,b6a6,c5b5,e8c7,b5b8,a6d3,c6e5,d3d1,g1h2,a8a1,e5g4,g7f7,g4h6,f7e7,h6g8,e7f7,f3g5",
      "Tal(g10): PCN move history"
    )
    let fens9 = [
      "rnbqkbnr/pppppppp/8/8/4P3/8/PPPP1PPP/RNBQKBNR b KQkq - 0 1",
      "rnbqkbnr/pppp1ppp/8/4p3/4P3/8/PPPP1PPP/RNBQKBNR w KQkq - 0 2",
      "rnbqkbnr/pppp1ppp/8/4p3/4P3/5N2/PPPP1PPP/RNBQKB1R b KQkq - 1 2",
      "r1bqkbnr/pppp1ppp/2n5/4p3/4P3/5N2/PPPP1PPP/RNBQKB1R w KQkq - 2 3",
      "r1bqkbnr/pppp1ppp/2n5/1B2p3/4P3/5N2/PPPP1PPP/RNBQK2R b KQkq - 3 3",
      "r1bqkbnr/1ppp1ppp/p1n5/1B2p3/4P3/5N2/PPPP1PPP/RNBQK2R w KQkq - 0 4",
      "r1bqkbnr/1ppp1ppp/p1n5/4p3/B3P3/5N2/PPPP1PPP/RNBQK2R b KQkq - 1 4",
      "r1bqkb1r/1ppp1ppp/p1n2n2/4p3/B3P3/5N2/PPPP1PPP/RNBQK2R w KQkq - 2 5",
      "r1bqkb1r/1ppp1ppp/p1n2n2/4p3/B3P3/5N2/PPPP1PPP/RNBQ1RK1 b kq - 3 5",
      "r1bqk2r/1pppbppp/p1n2n2/4p3/B3P3/5N2/PPPP1PPP/RNBQ1RK1 w kq - 4 6",
      "r1bqk2r/1pppbppp/p1n2n2/4p3/B3P3/5N2/PPPP1PPP/RNBQR1K1 b kq - 5 6",
      "r1bqk2r/2ppbppp/p1n2n2/1p2p3/B3P3/5N2/PPPP1PPP/RNBQR1K1 w kq - 0 7",
      "r1bqk2r/2ppbppp/p1n2n2/1p2p3/4P3/1B3N2/PPPP1PPP/RNBQR1K1 b kq - 1 7",
      "r1bq1rk1/2ppbppp/p1n2n2/1p2p3/4P3/1B3N2/PPPP1PPP/RNBQR1K1 w - - 2 8",
      "r1bq1rk1/2ppbppp/p1n2n2/1p2p3/4P3/1BP2N2/PP1P1PPP/RNBQR1K1 b - - 0 8",
      "r1bq1rk1/2p1bppp/p1np1n2/1p2p3/4P3/1BP2N2/PP1P1PPP/RNBQR1K1 w - - 0 9",
      "r1bq1rk1/2p1bppp/p1np1n2/1p2p3/4P3/1BP2N1P/PP1P1PP1/RNBQR1K1 b - - 0 9",
      "r1bq1rk1/2p1bppp/p2p1n2/np2p3/4P3/1BP2N1P/PP1P1PP1/RNBQR1K1 w - - 1 10",
      "r1bq1rk1/2p1bppp/p2p1n2/np2p3/4P3/2P2N1P/PPBP1PP1/RNBQR1K1 b - - 2 10",
      "r1bq1rk1/4bppp/p2p1n2/npp1p3/4P3/2P2N1P/PPBP1PP1/RNBQR1K1 w - - 0 11",
      "r1bq1rk1/4bppp/p2p1n2/npp1p3/3PP3/2P2N1P/PPB2PP1/RNBQR1K1 b - - 0 11",
      "r1b2rk1/2q1bppp/p2p1n2/npp1p3/3PP3/2P2N1P/PPB2PP1/RNBQR1K1 w - - 1 12",
      "r1b2rk1/2q1bppp/p2p1n2/npp1p3/3PP3/2P2N1P/PPBN1PP1/R1BQR1K1 b - - 2 12",
      "r4rk1/2qbbppp/p2p1n2/npp1p3/3PP3/2P2N1P/PPBN1PP1/R1BQR1K1 w - - 3 13",
      "r4rk1/2qbbppp/p2p1n2/npp1p3/3PP3/2P2N1P/PPB2PP1/R1BQRNK1 b - - 4 13",
      "r4rk1/2qbbppp/p2p1n2/np2p3/3pP3/2P2N1P/PPB2PP1/R1BQRNK1 w - - 0 14",
      "r4rk1/2qbbppp/p2p1n2/np2p3/3PP3/5N1P/PPB2PP1/R1BQRNK1 b - - 0 14",
      "2r2rk1/2qbbppp/p2p1n2/np2p3/3PP3/5N1P/PPB2PP1/R1BQRNK1 w - - 1 15",
      "2r2rk1/2qbbppp/p2p1n2/np2p3/3PP3/4NN1P/PPB2PP1/R1BQR1K1 b - - 2 15",
      "2r2rk1/2qbbppp/p1np1n2/1p2p3/3PP3/4NN1P/PPB2PP1/R1BQR1K1 w - - 3 16",
      "2r2rk1/2qbbppp/p1np1n2/1p1Pp3/4P3/4NN1P/PPB2PP1/R1BQR1K1 b - - 0 16",
      "2r2rk1/2qbbppp/p2p1n2/1p1Pp3/1n2P3/4NN1P/PPB2PP1/R1BQR1K1 w - - 1 17",
      "2r2rk1/2qbbppp/p2p1n2/1p1Pp3/1n2P3/4NN1P/PP3PP1/RBBQR1K1 b - - 2 17",
      "2r2rk1/2qbbppp/3p1n2/pp1Pp3/1n2P3/4NN1P/PP3PP1/RBBQR1K1 w - - 0 18",
      "2r2rk1/2qbbppp/3p1n2/pp1Pp3/1n2P3/P3NN1P/1P3PP1/RBBQR1K1 b - - 0 18",
      "2r2rk1/2qbbppp/n2p1n2/pp1Pp3/4P3/P3NN1P/1P3PP1/RBBQR1K1 w - - 1 19",
      "2r2rk1/2qbbppp/n2p1n2/pp1Pp3/1P2P3/P3NN1P/5PP1/RBBQR1K1 b - - 0 19",
      "2r2rk1/2qbbp1p/n2p1np1/pp1Pp3/1P2P3/P3NN1P/5PP1/RBBQR1K1 w - - 0 20",
      "2r2rk1/2qbbp1p/n2p1np1/pp1Pp3/1P2P3/P3NN1P/3B1PP1/RB1QR1K1 b - - 1 20",
      "2r2rk1/2qbbp1p/n2p1np1/1p1Pp3/1p2P3/P3NN1P/3B1PP1/RB1QR1K1 w - - 0 21",
      "2r2rk1/2qbbp1p/n2p1np1/1p1Pp3/1P2P3/4NN1P/3B1PP1/RB1QR1K1 b - - 0 21",
      "2r2rk1/1q1bbp1p/n2p1np1/1p1Pp3/1P2P3/4NN1P/3B1PP1/RB1QR1K1 w - - 1 22",
      "2r2rk1/1q1bbp1p/n2p1np1/1p1Pp3/1P2P3/3BNN1P/3B1PP1/R2QR1K1 b - - 2 22",
      "2r2rk1/1qnbbp1p/3p1np1/1p1Pp3/1P2P3/3BNN1P/3B1PP1/R2QR1K1 w - - 3 23",
      "2r2rk1/1qnbbp1p/3p1np1/1p1Pp3/1P2P3/3B1N1P/2NB1PP1/R2QR1K1 b - - 4 23",
      "2r2rk1/1qnbbp1p/3p2p1/1p1Pp2n/1P2P3/3B1N1P/2NB1PP1/R2QR1K1 w - - 5 24",
      "2r2rk1/1qnbbp1p/3p2p1/1p1Pp2n/1P2P3/3BBN1P/2N2PP1/R2QR1K1 b - - 6 24",
      "r4rk1/1qnbbp1p/3p2p1/1p1Pp2n/1P2P3/3BBN1P/2N2PP1/R2QR1K1 w - - 7 25",
      "r4rk1/1qnbbp1p/3p2p1/1p1Pp2n/1P2P3/3BBN1P/2NQ1PP1/R3R1K1 b - - 8 25",
      "5rk1/1qnbbp1p/3p2p1/1p1Pp2n/1P2P3/3BBN1P/2NQ1PP1/r3R1K1 w - - 0 26",
      "5rk1/1qnbbp1p/3p2p1/1p1Pp2n/1P2P3/3BBN1P/3Q1PP1/N3R1K1 b - - 0 26",
      "5rk1/1qnbb2p/3p2p1/1p1Ppp1n/1P2P3/3BBN1P/3Q1PP1/N3R1K1 w - - 0 27",
      "5rk1/1qnbb2p/3p2pB/1p1Ppp1n/1P2P3/3B1N1P/3Q1PP1/N3R1K1 b - - 1 27",
      "5rk1/1qnbb1np/3p2pB/1p1Ppp2/1P2P3/3B1N1P/3Q1PP1/N3R1K1 w - - 2 28",
      "5rk1/1qnbb1np/3p2pB/1p1Ppp2/1P2P3/1N1B1N1P/3Q1PP1/4R1K1 b - - 3 28",
      "5rk1/1qnbb1np/3p2pB/1p1Pp3/1P2Pp2/1N1B1N1P/3Q1PP1/4R1K1 w - - 0 29",
      "5rk1/1qnbb1np/3p2pB/Np1Pp3/1P2Pp2/3B1N1P/3Q1PP1/4R1K1 b - - 1 29",
      "5rk1/2nbb1np/1q1p2pB/Np1Pp3/1P2Pp2/3B1N1P/3Q1PP1/4R1K1 w - - 2 30",
      "5rk1/2nbb1np/1q1p2pB/Np1Pp3/1P2Pp2/3B1N1P/3Q1PP1/2R3K1 b - - 3 30",
      "r5k1/2nbb1np/1q1p2pB/Np1Pp3/1P2Pp2/3B1N1P/3Q1PP1/2R3K1 w - - 4 31",
      "r5k1/2nbb1np/1q1p2pB/Np1Pp3/1P2Pp2/3B1N1P/2Q2PP1/2R3K1 b - - 5 31",
      "r3n1k1/3bb1np/1q1p2pB/Np1Pp3/1P2Pp2/3B1N1P/2Q2PP1/2R3K1 w - - 6 32",
      "r3n1k1/3bb1np/1q1p2pB/Np1Pp3/1P2Pp2/1Q1B1N1P/5PP1/2R3K1 b - - 7 32",
      "r3n1k1/3b2np/1q1p1bpB/Np1Pp3/1P2Pp2/1Q1B1N1P/5PP1/2R3K1 w - - 8 33",
      "r3n1k1/3b2np/1qNp1bpB/1p1Pp3/1P2Pp2/1Q1B1N1P/5PP1/2R3K1 b - - 9 33",
      "r3n1k1/3b3p/1qNp1bpB/1p1Pp2n/1P2Pp2/1Q1B1N1P/5PP1/2R3K1 w - - 10 34",
      "r3n1k1/3b3p/1qNp1bpB/1p1Pp2n/1P2Pp2/3B1N1P/1Q3PP1/2R3K1 b - - 11 34",
      "r3n1k1/3b2bp/1qNp2pB/1p1Pp2n/1P2Pp2/3B1N1P/1Q3PP1/2R3K1 w - - 12 35",
      "r3n1k1/3b2Bp/1qNp2p1/1p1Pp2n/1P2Pp2/3B1N1P/1Q3PP1/2R3K1 b - - 0 35",
      "r3n3/3b2kp/1qNp2p1/1p1Pp2n/1P2Pp2/3B1N1P/1Q3PP1/2R3K1 w - - 0 36",
      "r3n3/3b2kp/1qNp2p1/1pRPp2n/1P2Pp2/3B1N1P/1Q3PP1/6K1 b - - 1 36",
      "r3n3/3b2kp/q1Np2p1/1pRPp2n/1P2Pp2/3B1N1P/1Q3PP1/6K1 w - - 2 37",
      "r3n3/3b2kp/q1Np2p1/1R1Pp2n/1P2Pp2/3B1N1P/1Q3PP1/6K1 b - - 0 37",
      "r7/2nb2kp/q1Np2p1/1R1Pp2n/1P2Pp2/3B1N1P/1Q3PP1/6K1 w - - 1 38",
      "rR6/2nb2kp/q1Np2p1/3Pp2n/1P2Pp2/3B1N1P/1Q3PP1/6K1 b - - 2 38",
      "rR6/2nb2kp/2Np2p1/3Pp2n/1P2Pp2/3q1N1P/1Q3PP1/6K1 w - - 0 39",
      "rR6/2nb2kp/3p2p1/3PN2n/1P2Pp2/3q1N1P/1Q3PP1/6K1 b - - 0 39",
      "rR6/2nb2kp/3p2p1/3PN2n/1P2Pp2/5N1P/1Q3PP1/3q2K1 w - - 1 40",
      "rR6/2nb2kp/3p2p1/3PN2n/1P2Pp2/5N1P/1Q3PPK/3q4 b - - 2 40",
      "1R6/2nb2kp/3p2p1/3PN2n/1P2Pp2/5N1P/1Q3PPK/r2q4 w - - 3 41",
      "1R6/2nb2kp/3p2p1/3P3n/1P2PpN1/5N1P/1Q3PPK/r2q4 b - - 4 41",
      "1R6/2nb1k1p/3p2p1/3P3n/1P2PpN1/5N1P/1Q3PPK/r2q4 w - - 5 42",
      "1R6/2nb1k1p/3p2pN/3P3n/1P2Pp2/5N1P/1Q3PPK/r2q4 b - - 6 42",
      "1R6/2nbk2p/3p2pN/3P3n/1P2Pp2/5N1P/1Q3PPK/r2q4 w - - 7 43",
      "1R4N1/2nbk2p/3p2p1/3P3n/1P2Pp2/5N1P/1Q3PPK/r2q4 b - - 8 43",
      "1R4N1/2nb1k1p/3p2p1/3P3n/1P2Pp2/5N1P/1Q3PPK/r2q4 w - - 9 44",
      "1R4N1/2nb1k1p/3p2p1/3P2Nn/1P2Pp2/7P/1Q3PPK/r2q4 b - - 10 44",
    ]
    for (index, history) in chess.getMoveHistory().enumerated() {
      XCTAssertEqual(history.fen, fens9[index], "Tal(g10): FEN move (index)")
    }
  }
}
